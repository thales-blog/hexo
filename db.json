{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":0},{"_id":"themes/aircloud/source/css/aircloud.css.map","path":"css/aircloud.css.map","modified":1,"renderable":1},{"_id":"themes/aircloud/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/aircloud/source/css/aircloud.less","path":"css/aircloud.less","modified":1,"renderable":1},{"_id":"themes/aircloud/source/css/aircloud.css","path":"css/aircloud.css","modified":1,"renderable":1},{"_id":"themes/aircloud/source/js/index.js","path":"js/index.js","modified":1,"renderable":1},{"_id":"themes/aircloud/source/js/gitment.js","path":"js/gitment.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/aircloud/_config.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707894},{"_id":"themes/aircloud/.gitignore","hash":"e0ed028c2b034754ba17b141041c4b6fb2499177","modified":1563757707893},{"_id":"themes/aircloud/LICENSE","hash":"278d4c4d923734a79286b3a5b524723c107c132a","modified":1563757707894},{"_id":"themes/aircloud/readme-en.md","hash":"a3aec1e1caf9a957fecbeb68e990f459bc64d881","modified":1563757707899},{"_id":"themes/aircloud/readme.md","hash":"ed6d035a9c024f0787322d5c579fec405e3bdf40","modified":1563757707899},{"_id":"themes/aircloud/layout/catagory.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707897},{"_id":"themes/aircloud/layout/page.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707898},{"_id":"source/_posts/cli.md","hash":"9cdeb6beeaee26acd0391f9f58b319d4eb7e83d3","modified":1565942012425},{"_id":"source/_posts/eslint.md","hash":"3d76a51c9b7ab650ab10f28f5cb0be043bb26976","modified":1567395835111},{"_id":"source/_posts/hello-world.md","hash":"79d4a3d1a30c3aceca6b32e3cd1da1554bfee7b0","modified":1564051617853},{"_id":"source/_posts/markdown.md","hash":"18d8d8e9e28d2e08fd2f636b9c6af5716c3ddbab","modified":1563518842457},{"_id":"source/_posts/nrm.md","hash":"d0dfeb7e4336960a79529fd6742ef6f04b98bad9","modified":1563518842457},{"_id":"source/img/avatar.jpg","hash":"20f7306b5c547b92f390390eca0f367fc0e34bcc","modified":1563518842458},{"_id":"source/_posts/syntax.md","hash":"7f0110545d8485a3ef60e8d211a6bd6c42544e41","modified":1567396217269},{"_id":"source/tags/index.md","hash":"77b914be60deb959b592786410ff3b6aed1b1ca5","modified":1563518842458},{"_id":"source/about/index.md","hash":"a88532c75ad0af5631cc2820850df75347b70d91","modified":1563518842457},{"_id":"themes/aircloud/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1563757707882},{"_id":"themes/aircloud/.git/config","hash":"30d490d36b254f1cea3adfdcb5f14b218519a613","modified":1563757707885},{"_id":"themes/aircloud/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1563757704517},{"_id":"themes/aircloud/.git/index","hash":"8ad24f344aa6e585657f940f5aa9b723ca5509f0","modified":1564108847541},{"_id":"themes/aircloud/.git/packed-refs","hash":"0f715ce55522a20f7f114f01009f70995b6f459c","modified":1563757707878},{"_id":"themes/aircloud/languages/zh.yml","hash":"6c30c31f4ec188949caab414aa81296f3f49df53","modified":1563757707894},{"_id":"themes/aircloud/layout/404.ejs","hash":"51ac993ccbd409d7bfe0deee0de8015a89b5a15c","modified":1563757707895},{"_id":"themes/aircloud/languages/en.yml","hash":"8326653662ab628d33289c7fdaea3701274bb6fa","modified":1563757707894},{"_id":"themes/aircloud/layout/about.ejs","hash":"24512de66f4e00cebe9be8e97bcfc2e4a4efdd12","modified":1563757707896},{"_id":"themes/aircloud/layout/archive.ejs","hash":"fe44df8eacf6e5e27df30b450033b18cae88f523","modified":1563757707896},{"_id":"themes/aircloud/layout/index.ejs","hash":"c8597d668ee305cc31b3b7ad74c4c81489982a22","modified":1563757707897},{"_id":"themes/aircloud/layout/layout.ejs","hash":"d02b0dcd34e10b7e73bdd72bd964672a1f760b8f","modified":1563757707897},{"_id":"themes/aircloud/layout/post.ejs","hash":"5f3fcc6f6d86b8e43bf2d76cf809753e9b9f89aa","modified":1563757707898},{"_id":"themes/aircloud/layout/tags.ejs","hash":"4de0555bf1f0e35fae7f797d43d7a8a0caf843ca","modified":1563757707898},{"_id":"themes/aircloud/source/_less/about.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707900},{"_id":"themes/aircloud/source/_less/about.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707900},{"_id":"themes/aircloud/source/_less/diff.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707901},{"_id":"themes/aircloud/source/_less/diff.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707902},{"_id":"themes/aircloud/source/_less/page.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707905},{"_id":"themes/aircloud/source/_less/theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707906},{"_id":"themes/aircloud/source/_less/theme.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707906},{"_id":"themes/aircloud/source/_less/page.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1563757707905},{"_id":"themes/aircloud/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1563757704518},{"_id":"themes/aircloud/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1563757704530},{"_id":"themes/aircloud/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1563757704532},{"_id":"themes/aircloud/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1563757704532},{"_id":"themes/aircloud/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1563757704533},{"_id":"themes/aircloud/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1563757704534},{"_id":"themes/aircloud/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1563757704534},{"_id":"themes/aircloud/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1563757704535},{"_id":"themes/aircloud/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1563757704535},{"_id":"themes/aircloud/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1563757704536},{"_id":"themes/aircloud/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1563757704537},{"_id":"themes/aircloud/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1563757704538},{"_id":"themes/aircloud/.git/logs/HEAD","hash":"4936db64401e6f12ed341956857502d90e5c78d8","modified":1563757707883},{"_id":"themes/aircloud/layout/_partial/donate.ejs","hash":"d97224a63f76045cbd0a53a3cabef3f0fd010ad3","modified":1563757707895},{"_id":"themes/aircloud/layout/_partial/footer.ejs","hash":"236e217c976680136272652332f29fa4dca37131","modified":1563757707895},{"_id":"themes/aircloud/layout/_partial/head.ejs","hash":"f2efb1f71199e44f1986d2f4723191fa728b332a","modified":1563757707896},{"_id":"themes/aircloud/layout/_partial/nav.ejs","hash":"94cf4f06c500166ba2a2f70807660b612b9a1d6d","modified":1563757707896},{"_id":"themes/aircloud/layout/_partial/toc.ejs","hash":"20106463b4885e93ef69122d69464174c45df71d","modified":1563757707896},{"_id":"themes/aircloud/source/_less/archive.css","hash":"372da40133108078c91c3fc73b361aa81436248f","modified":1563757707900},{"_id":"themes/aircloud/source/_less/common.css","hash":"0e80d6a42e463be27180f60c38d50615445c3177","modified":1563757707901},{"_id":"themes/aircloud/source/_less/donate.css","hash":"d5c94d24c9ea63b1c2eb186a333f07a28a1f88a6","modified":1563757707902},{"_id":"themes/aircloud/source/_less/common.less","hash":"b09d13483dbc701fa34dedb6d2db8177e5fe7ad7","modified":1563757707901},{"_id":"themes/aircloud/source/_less/archive.less","hash":"b27c479274d648918f29452aae8139bafe997804","modified":1563757707901},{"_id":"themes/aircloud/source/_less/gitment.css","hash":"01fdbed1c91ed4bd685886c298383809a0c5f1d7","modified":1563757707902},{"_id":"themes/aircloud/source/_less/hightlight.css","hash":"d6a57167162eaa7f1b64f83c583a212f33aba586","modified":1563757707903},{"_id":"themes/aircloud/source/_less/donate.less","hash":"efaf3572a73c26aff77331e18543b6b2336931c0","modified":1563757707902},{"_id":"themes/aircloud/source/_less/index.css","hash":"8853826ff7e2f679f481f7de6cd742d9aaf76778","modified":1563757707903},{"_id":"themes/aircloud/source/_less/gitment.less","hash":"f6f18d9e7451c501234a1d2166813edae63cd7d5","modified":1563757707903},{"_id":"themes/aircloud/source/_less/index.less","hash":"91f05eb476510fcbb2bed556092dfd889656ef0b","modified":1563757707904},{"_id":"themes/aircloud/source/_less/hightlight.less","hash":"d6a57167162eaa7f1b64f83c583a212f33aba586","modified":1563757707903},{"_id":"themes/aircloud/source/_less/layout.css","hash":"f0d83db7d9a041c540cdeb093cedffdb982f90e4","modified":1563757707904},{"_id":"themes/aircloud/source/_less/nav.css","hash":"66675a061db5067c088d314193a0f1ec8ef53276","modified":1563757707905},{"_id":"themes/aircloud/source/_less/layout.less","hash":"332a42d5ab45c73a25c90b182ede63a4dfdfbe30","modified":1563757707904},{"_id":"themes/aircloud/source/_less/nav.less","hash":"5828d1f0436701c153e1f10d39ee2b2e251a6eae","modified":1563757707905},{"_id":"themes/aircloud/source/_less/post.css","hash":"c64d71af0aa99426dec92821a7874eeee6e2bdf6","modified":1563757707905},{"_id":"themes/aircloud/source/_less/post.less","hash":"caccf17b9f71e885a49fa8e8240257146da4b3ab","modified":1563757707906},{"_id":"themes/aircloud/source/_less/tag.css","hash":"bde136456c498eb671ea75c5315130d7dea1d9ba","modified":1563757707906},{"_id":"themes/aircloud/source/_less/toc.css","hash":"c17dd8c7c0326ff41eec9c25dbbcb19895f07367","modified":1563757707906},{"_id":"themes/aircloud/source/_less/tag.less","hash":"e75576604e73ce22559ea0ff7816a52f72772219","modified":1563757707906},{"_id":"themes/aircloud/source/_less/variables.css","hash":"c5d6ce4d904e7c108fbf4f2392eb2917bed636d8","modified":1563757707907},{"_id":"themes/aircloud/source/_less/toc.less","hash":"8ab3e0bc1f7c9e466d7916e0bb2bfe7f2b4e1386","modified":1563757707907},{"_id":"themes/aircloud/source/css/aircloud.css.map","hash":"50db34961d11f6f461e23912609d25141068a6fc","modified":1563757707908},{"_id":"themes/aircloud/source/_less/variables.less","hash":"e881ecdb19c4c5c6452abd5d0c6294c83fe6cb53","modified":1563757707907},{"_id":"themes/aircloud/source/css/gitment.css","hash":"c6951e8c4d709f1917c2cf78b9777d9610cb6532","modified":1563757707909},{"_id":"themes/aircloud/source/css/aircloud.less","hash":"cf339e918c04f33837516cf4f54e27640cf48460","modified":1563757707908},{"_id":"themes/aircloud/source/css/aircloud.css","hash":"a4a9fe0b3e517ff2b6794f71066084a88960f747","modified":1563757707908},{"_id":"themes/aircloud/source/js/index.js","hash":"065a40c23abdab1186b966dedbb080043a36fa9f","modified":1563757707910},{"_id":"themes/aircloud/.git/objects/pack/pack-efbf8276d9e56b4d006e5222b326e0c1338676a1.idx","hash":"d7374b81e551b40f3d4bb4c68af535a5e00c816e","modified":1563757707786},{"_id":"themes/aircloud/.git/refs/heads/master","hash":"c8eb2690d4836702ed876065bb7c03f2e593c0ad","modified":1563757707883},{"_id":"themes/aircloud/source/_less/_partial/footer.css","hash":"c14a3aac90c0d6fc0c4cdcd84b98e2ce3005d47f","modified":1563757707899},{"_id":"themes/aircloud/source/_less/_partial/footer.css.map","hash":"9e8d4df5d08425de5a8b247d0dd8b805c6edc661","modified":1563757707900},{"_id":"themes/aircloud/source/_less/_partial/footer.less","hash":"a4137692c2b8fd287ac014feb3e73aa0502f7c23","modified":1563757707900},{"_id":"themes/aircloud/source/js/gitment.js","hash":"7d7a9c07794fb31fd6d4620e473d05e14e27285d","modified":1563757707910},{"_id":"themes/aircloud/.git/logs/refs/heads/master","hash":"4936db64401e6f12ed341956857502d90e5c78d8","modified":1563757707884},{"_id":"themes/aircloud/.git/objects/pack/pack-efbf8276d9e56b4d006e5222b326e0c1338676a1.pack","hash":"2d0642421d46fc07100a2cc20f185a6b623ff87b","modified":1563757707785},{"_id":"themes/aircloud/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1563757707881},{"_id":"themes/aircloud/.git/logs/refs/remotes/origin/HEAD","hash":"4936db64401e6f12ed341956857502d90e5c78d8","modified":1563757707881},{"_id":"public/tags/index.html","hash":"0c8cd8a968d7e63a862e5295c2c44cde4d6d17ab","modified":1567396276474},{"_id":"public/about/index.html","hash":"ae5b2b0307d82970a6f598fcbb5d32d92580b81b","modified":1567396276474},{"_id":"public/2019/03/10/nrm/index.html","hash":"7c02db716ecfee0235bfc00044164591a711d0bc","modified":1567396276474},{"_id":"public/2019/02/01/hello-world/index.html","hash":"1c953893274247a579bdef7d0f25f6477d1cb0d8","modified":1567396276474},{"_id":"public/archives/index.html","hash":"c4128289bd5996654c84068a6a04467cbc6eaf8a","modified":1567396276474},{"_id":"public/archives/2019/index.html","hash":"c4128289bd5996654c84068a6a04467cbc6eaf8a","modified":1567396276474},{"_id":"public/archives/2019/02/index.html","hash":"c4128289bd5996654c84068a6a04467cbc6eaf8a","modified":1567396276474},{"_id":"public/archives/2019/03/index.html","hash":"c4128289bd5996654c84068a6a04467cbc6eaf8a","modified":1567396276474},{"_id":"public/archives/2019/06/index.html","hash":"c4128289bd5996654c84068a6a04467cbc6eaf8a","modified":1567396276474},{"_id":"public/archives/2019/07/index.html","hash":"c4128289bd5996654c84068a6a04467cbc6eaf8a","modified":1567396276474},{"_id":"public/archives/2019/08/index.html","hash":"c4128289bd5996654c84068a6a04467cbc6eaf8a","modified":1567396276474},{"_id":"public/archives/2019/09/index.html","hash":"c4128289bd5996654c84068a6a04467cbc6eaf8a","modified":1567396276474},{"_id":"public/index.html","hash":"72731d10638ba68be9eab0cd7881e876fb8b18d7","modified":1567396276475},{"_id":"public/tags/markdown/index.html","hash":"c40ba9cd3cf77cc1f38540fdc5828730b232b81c","modified":1567396276475},{"_id":"public/tags/nrm/index.html","hash":"c40ba9cd3cf77cc1f38540fdc5828730b232b81c","modified":1567396276475},{"_id":"public/tags/eslint/index.html","hash":"c40ba9cd3cf77cc1f38540fdc5828730b232b81c","modified":1567396276475},{"_id":"public/2019/09/02/eslint/index.html","hash":"a3c904ea23e3b730f1ba709e769f4495fc4ae05f","modified":1567396276475},{"_id":"public/2019/08/05/cli/index.html","hash":"46e819766f88c7d31979b14cc4367512aec60c37","modified":1567396276475},{"_id":"public/2019/07/24/syntax/index.html","hash":"b4243e824777b1ca31d922755dbeff8b336cb179","modified":1567396276476},{"_id":"public/2019/06/06/markdown/index.html","hash":"bb5689fdbe61ecb1cfeb9ffb7086e29904330ff5","modified":1567396276476},{"_id":"public/img/avatar.jpg","hash":"20f7306b5c547b92f390390eca0f367fc0e34bcc","modified":1567396276483},{"_id":"public/css/aircloud.css.map","hash":"50db34961d11f6f461e23912609d25141068a6fc","modified":1567396276484},{"_id":"public/css/aircloud.less","hash":"cf339e918c04f33837516cf4f54e27640cf48460","modified":1567396276484},{"_id":"public/js/index.js","hash":"1fed4485eedf5309e504aec35596955e5d692c7d","modified":1567396276492},{"_id":"public/css/gitment.css","hash":"926b553be983d6dd90bcb60c5d6d4ee215d268a6","modified":1567396276497},{"_id":"public/css/aircloud.css","hash":"e6082557a5f0e546169ab1aa0ba29bda4ef5c182","modified":1567396276499},{"_id":"public/js/gitment.js","hash":"89687f8fffe1125e08323fd6635ca4e53771c05e","modified":1567396276516}],"Category":[],"Data":[],"Page":[{"layout":"tags","title":"Tags","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\n---","date":"2019-07-19T06:47:22.458Z","updated":"2019-07-19T06:47:22.458Z","path":"tags/index.html","comments":1,"_id":"ck01v9uhb00093si275s1fe35","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2019-06-05T16:00:00.000Z","_content":"\n我开始摇滚了","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2019-06-06\n---\n\n我开始摇滚了","updated":"2019-07-19T06:47:22.457Z","path":"about/index.html","comments":1,"_id":"ck01v9uhc000a3si2yzy0jmsw","content":"<p>我开始摇滚了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我开始摇滚了</p>\n"}],"Post":[{"title":"脚手架","date":"2019-08-05T03:21:23.000Z","_content":"\n脚手架开发\n================================\n# 准备\n先找个目录初始化一下npm\n```bash\nmkdir cli\ncd cli\nnpm init\n```\n# program\n使用program组件可以实现命令行的操作 \n## 安装\n首先我们安装commander\n```bash\nnpm i -S commander\n```\n## 版本\n最简单的program显示版本\n\n\n> 我们创建一个index.js文件，写入下面的代码\n\n\n```js\nconst program = require('commander'); // 为什么命名叫program而不是commander，因为commander是保留字段\nprogram.version(\"0.0.1\"); // 设置版本号\nprogram.parse(process.argv); // 解析进程\n```\n> 如果不知道process关键字，可以去看 http://nodejs.cn/api/process.html  \n\n\n我们用node执行一下\n\n\n```bash\nnode index.js --version\n```\n会得到我们设置的版本号\n```bash\n0.0.1\n```\n我们一般用package作为版本号\n```js\nconst VER = require('../package.json').version\n```\n**最终代码**\n```js\nconst program = require('commander');\nprogram.version(require('../package.json').version); // 直接获取当前的package的version作为版本号\nprogram.parse(process.argv);\n```\n## 帮助\n上世纪电脑都靠命令行执行时候，就会有“-h”和“--help”作为帮助，显示命令如何用\n```js\nconst program = require('commander');\nprogram.version(require('../package.json').version);\nprogram.parse(process.argv);\nprogram.help(); // 写上这么一行，自动的就会有所有设置的参数提示\n```\n## 命令\n比如我们用的vue create\n```js\nprogram\n  .command('create')  // 命令\n  .action(cmd => console.log(cmd)); // 命令动作\n```\n我们执行一下\n```bash\nnode index.js create\n```\n会执行action里面的function，输出cmd  \n**还可以加一些参数，我们看下完整代码**\n```js\nconst program = require('commander');\nprogram.version(require('../package.json').version);\nprogram\n  .command('create') // 创建项目\n  .alias('c') // 别名，用来简写\n  .description('create project(构造项目)') // 描述\n  .option('-d, --default', 'skip prompt and use default preset.') // 选项\n  .action(cmd => console.log(cmd));\nprogram.parse(process.argv); // 解析进程\nprogram.help();\n```\n并且你加了command之后，help会自动增加\n```bash\nnode index.js --help\n```\n你可以看到比之前多了一个commads提示命令名，并且按照description给了提示\n```\nUsage: www [options] [command]\n\nOptions:\n  -V, --version       output the version number\n  -h, --help          output usage information\n\nCommands:\n  create|c [options]  create project(构造项目)\n```\n其他详细内容可以看官网 https://github.com/tj/commander.js\n# inquirer\n问询组件  \n## 安装\n```bash\nnpm i -S inquirer\n```\n## 问询\n我们创建一个create.js文件\n```js\nconst inquirer = require('inquirer');\nmodule.exports = cmd => {\n  inquirer\n    .prompt([\n      {\n        // 项目名称\n        name: 'name',\n        type: 'input',\n        default: 'my-project',\n        message: '请输入项目名称'\n      }\n    ])\n    .then(p => console.log(p))\n    .catch(e => console.log('项目创建错误'));\n};\n```\n然后把之前command的action增加\n```js\nconst create = require('create'); // 加载create\nprogram\n  .command('create')\n  .action(create); // action的function设置为create函数\n```\n这时候会运行会出现一个bug\n```bash\nnode index.js create\n```\n问询出现之后，就直接显示了帮助\n```bash\n? 请输入项目名称 (my-project) Usage: www [options] [command]\n\nOptions:\n  -V, --version       output the version number\n  -h, --help          output usage information\n\nCommands:\n  create|c [options]  create project(构造项目)\n```\n所以我们一般吧帮助做一个处理，因为命令很多时候是也要加内容，所以默认认为了命令不全，我们加一个入参为空才出帮助就可以了\n```js\nif (!program.args.length) { // 参数为空时候显示帮助\n  program.help();\n}\n```\n现在你可以看见了想要的问询\n```bash\nbash> dayu create\n? 请输入项目名称 (my-project)\n```\n输入之后，也能在inquirer的then中以object的方式返回\n```\n? 请输入项目名称 my-project\n{ name: 'my-project' }\n```\n问询的种类很多，除了输入，是不是那种可以选择的会更好呢\n```js\n.prompt([\n  {\n    // 项目模板\n    name: 'template',\n    type: 'list',\n    choices: ['A', 'B', 'C'],// 供选择的内容\n    message: '请选择模板'\n  }\n])\n.then(p => console.log(p))\n.catch(e => console.log('项目创建错误'));\n```\n这时候可以用上下选择你想要的\n```\n? 请选择模板\n  A\n> B\n  C\n```\n其他详细内容可以看官网 https://github.com/SBoudrias/Inquirer.js\n# download-git-repo\n下载git源\n## 安装\n```bash\nnpm i -S download-git-repo\n```\n下载git源\n## 下载\n我们创建一个project-build的文件\n```js\nimport download from 'download-git-repo';\nmodule.exports = (url, name) => {// url为git地址，name为本地创建的项目名也就是目录名称\n  download(url, name, {}, err => { // 下载模板\n    if (err) {\n      //失败\n    } else {\n      //成功\n  });\n};\n```\n其他详细内容可以看官网 https://github.com/flipxfx/download-git-repo\n# handlebars\n替换模板参数\n## 安装\n```bash\nnpm i -S handlebars\n```\n## 修改package\n创建的项目需要替换package.json\n```json\n{\n  \"name\": \"{{name}}\",\n  \"version\": \"{{version}}\",\n  \"description\": \"{{description}}\",\n  \"author\": \"{{author}}\",\n}\n```\n替换我们就用这个方式\n```js\nconst meta = { // 设置模板参数\n  name: '项目名称',\n  version: '版本号',\n  description: '项目描述',\n  author: '作者'\n};\nconst fileName = `${meta.name}/package.json`;\nconst content = fs.readFileSync(fileName).toString(); //读取package文件内容\nconst result = handlebars.compile(content)(meta); // 解析内容，并且用meta替换模板的变量\nfs.writeFileSync(fileName, result); // 覆盖源文件\n```\n# babel\n## 安装\n```bash\nnpm i -D babel-cli\n```\n## 配置加载环境\nnode是不能使用import的，但是我们经常看到babelrc\n```json\n{\n  \"presets\": [\n    [\n      \"env\",\n      {\n        \"target\":{\n          \"node\":\"current\"\n        }\n      }\n    ]\n  ]\n}\n```\n我们一般是吧src的源文件输出到dist里\n```bash\nbabel src -d dist\n```\n最终应用的都是dist内的文件\n","source":"_posts/cli.md","raw":"---\ntitle: 脚手架\ndate: 2019-08-05 11:21:23\ntags:\n---\n\n脚手架开发\n================================\n# 准备\n先找个目录初始化一下npm\n```bash\nmkdir cli\ncd cli\nnpm init\n```\n# program\n使用program组件可以实现命令行的操作 \n## 安装\n首先我们安装commander\n```bash\nnpm i -S commander\n```\n## 版本\n最简单的program显示版本\n\n\n> 我们创建一个index.js文件，写入下面的代码\n\n\n```js\nconst program = require('commander'); // 为什么命名叫program而不是commander，因为commander是保留字段\nprogram.version(\"0.0.1\"); // 设置版本号\nprogram.parse(process.argv); // 解析进程\n```\n> 如果不知道process关键字，可以去看 http://nodejs.cn/api/process.html  \n\n\n我们用node执行一下\n\n\n```bash\nnode index.js --version\n```\n会得到我们设置的版本号\n```bash\n0.0.1\n```\n我们一般用package作为版本号\n```js\nconst VER = require('../package.json').version\n```\n**最终代码**\n```js\nconst program = require('commander');\nprogram.version(require('../package.json').version); // 直接获取当前的package的version作为版本号\nprogram.parse(process.argv);\n```\n## 帮助\n上世纪电脑都靠命令行执行时候，就会有“-h”和“--help”作为帮助，显示命令如何用\n```js\nconst program = require('commander');\nprogram.version(require('../package.json').version);\nprogram.parse(process.argv);\nprogram.help(); // 写上这么一行，自动的就会有所有设置的参数提示\n```\n## 命令\n比如我们用的vue create\n```js\nprogram\n  .command('create')  // 命令\n  .action(cmd => console.log(cmd)); // 命令动作\n```\n我们执行一下\n```bash\nnode index.js create\n```\n会执行action里面的function，输出cmd  \n**还可以加一些参数，我们看下完整代码**\n```js\nconst program = require('commander');\nprogram.version(require('../package.json').version);\nprogram\n  .command('create') // 创建项目\n  .alias('c') // 别名，用来简写\n  .description('create project(构造项目)') // 描述\n  .option('-d, --default', 'skip prompt and use default preset.') // 选项\n  .action(cmd => console.log(cmd));\nprogram.parse(process.argv); // 解析进程\nprogram.help();\n```\n并且你加了command之后，help会自动增加\n```bash\nnode index.js --help\n```\n你可以看到比之前多了一个commads提示命令名，并且按照description给了提示\n```\nUsage: www [options] [command]\n\nOptions:\n  -V, --version       output the version number\n  -h, --help          output usage information\n\nCommands:\n  create|c [options]  create project(构造项目)\n```\n其他详细内容可以看官网 https://github.com/tj/commander.js\n# inquirer\n问询组件  \n## 安装\n```bash\nnpm i -S inquirer\n```\n## 问询\n我们创建一个create.js文件\n```js\nconst inquirer = require('inquirer');\nmodule.exports = cmd => {\n  inquirer\n    .prompt([\n      {\n        // 项目名称\n        name: 'name',\n        type: 'input',\n        default: 'my-project',\n        message: '请输入项目名称'\n      }\n    ])\n    .then(p => console.log(p))\n    .catch(e => console.log('项目创建错误'));\n};\n```\n然后把之前command的action增加\n```js\nconst create = require('create'); // 加载create\nprogram\n  .command('create')\n  .action(create); // action的function设置为create函数\n```\n这时候会运行会出现一个bug\n```bash\nnode index.js create\n```\n问询出现之后，就直接显示了帮助\n```bash\n? 请输入项目名称 (my-project) Usage: www [options] [command]\n\nOptions:\n  -V, --version       output the version number\n  -h, --help          output usage information\n\nCommands:\n  create|c [options]  create project(构造项目)\n```\n所以我们一般吧帮助做一个处理，因为命令很多时候是也要加内容，所以默认认为了命令不全，我们加一个入参为空才出帮助就可以了\n```js\nif (!program.args.length) { // 参数为空时候显示帮助\n  program.help();\n}\n```\n现在你可以看见了想要的问询\n```bash\nbash> dayu create\n? 请输入项目名称 (my-project)\n```\n输入之后，也能在inquirer的then中以object的方式返回\n```\n? 请输入项目名称 my-project\n{ name: 'my-project' }\n```\n问询的种类很多，除了输入，是不是那种可以选择的会更好呢\n```js\n.prompt([\n  {\n    // 项目模板\n    name: 'template',\n    type: 'list',\n    choices: ['A', 'B', 'C'],// 供选择的内容\n    message: '请选择模板'\n  }\n])\n.then(p => console.log(p))\n.catch(e => console.log('项目创建错误'));\n```\n这时候可以用上下选择你想要的\n```\n? 请选择模板\n  A\n> B\n  C\n```\n其他详细内容可以看官网 https://github.com/SBoudrias/Inquirer.js\n# download-git-repo\n下载git源\n## 安装\n```bash\nnpm i -S download-git-repo\n```\n下载git源\n## 下载\n我们创建一个project-build的文件\n```js\nimport download from 'download-git-repo';\nmodule.exports = (url, name) => {// url为git地址，name为本地创建的项目名也就是目录名称\n  download(url, name, {}, err => { // 下载模板\n    if (err) {\n      //失败\n    } else {\n      //成功\n  });\n};\n```\n其他详细内容可以看官网 https://github.com/flipxfx/download-git-repo\n# handlebars\n替换模板参数\n## 安装\n```bash\nnpm i -S handlebars\n```\n## 修改package\n创建的项目需要替换package.json\n```json\n{\n  \"name\": \"{{name}}\",\n  \"version\": \"{{version}}\",\n  \"description\": \"{{description}}\",\n  \"author\": \"{{author}}\",\n}\n```\n替换我们就用这个方式\n```js\nconst meta = { // 设置模板参数\n  name: '项目名称',\n  version: '版本号',\n  description: '项目描述',\n  author: '作者'\n};\nconst fileName = `${meta.name}/package.json`;\nconst content = fs.readFileSync(fileName).toString(); //读取package文件内容\nconst result = handlebars.compile(content)(meta); // 解析内容，并且用meta替换模板的变量\nfs.writeFileSync(fileName, result); // 覆盖源文件\n```\n# babel\n## 安装\n```bash\nnpm i -D babel-cli\n```\n## 配置加载环境\nnode是不能使用import的，但是我们经常看到babelrc\n```json\n{\n  \"presets\": [\n    [\n      \"env\",\n      {\n        \"target\":{\n          \"node\":\"current\"\n        }\n      }\n    ]\n  ]\n}\n```\n我们一般是吧src的源文件输出到dist里\n```bash\nbabel src -d dist\n```\n最终应用的都是dist内的文件\n","slug":"cli","published":1,"updated":"2019-08-16T07:53:32.425Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck01v9ugr00003si2bspwty9u","content":"<h1 id=\"脚手架开发\"><a href=\"#脚手架开发\" class=\"headerlink\" title=\"脚手架开发\"></a>脚手架开发</h1><h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>先找个目录初始化一下npm<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir cli</span><br><span class=\"line\"><span class=\"built_in\">cd</span> cli</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"program\"><a href=\"#program\" class=\"headerlink\" title=\"program\"></a>program</h1><p>使用program组件可以实现命令行的操作 </p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先我们安装commander<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S commander</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h2><p>最简单的program显示版本</p>\n<blockquote>\n<p>我们创建一个index.js文件，写入下面的代码</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> program = <span class=\"built_in\">require</span>(<span class=\"string\">'commander'</span>); <span class=\"comment\">// 为什么命名叫program而不是commander，因为commander是保留字段</span></span><br><span class=\"line\">program.version(<span class=\"string\">\"0.0.1\"</span>); <span class=\"comment\">// 设置版本号</span></span><br><span class=\"line\">program.parse(process.argv); <span class=\"comment\">// 解析进程</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果不知道process关键字，可以去看 <a href=\"http://nodejs.cn/api/process.html\" target=\"_blank\" rel=\"noopener\">http://nodejs.cn/api/process.html</a>  </p>\n</blockquote>\n<p>我们用node执行一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js --version</span><br></pre></td></tr></table></figure>\n<p>会得到我们设置的版本号<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.0.1</span><br></pre></td></tr></table></figure></p>\n<p>我们一般用package作为版本号<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> VER = <span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>).version</span><br></pre></td></tr></table></figure></p>\n<p><strong>最终代码</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> program = <span class=\"built_in\">require</span>(<span class=\"string\">'commander'</span>);</span><br><span class=\"line\">program.version(<span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>).version); <span class=\"comment\">// 直接获取当前的package的version作为版本号</span></span><br><span class=\"line\">program.parse(process.argv);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"帮助\"><a href=\"#帮助\" class=\"headerlink\" title=\"帮助\"></a>帮助</h2><p>上世纪电脑都靠命令行执行时候，就会有“-h”和“–help”作为帮助，显示命令如何用<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> program = <span class=\"built_in\">require</span>(<span class=\"string\">'commander'</span>);</span><br><span class=\"line\">program.version(<span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>).version);</span><br><span class=\"line\">program.parse(process.argv);</span><br><span class=\"line\">program.help(); <span class=\"comment\">// 写上这么一行，自动的就会有所有设置的参数提示</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><p>比如我们用的vue create<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">program</span><br><span class=\"line\">  .command(<span class=\"string\">'create'</span>)  <span class=\"comment\">// 命令</span></span><br><span class=\"line\">  .action(<span class=\"function\"><span class=\"params\">cmd</span> =&gt;</span> <span class=\"built_in\">console</span>.log(cmd)); <span class=\"comment\">// 命令动作</span></span><br></pre></td></tr></table></figure></p>\n<p>我们执行一下<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js create</span><br></pre></td></tr></table></figure></p>\n<p>会执行action里面的function，输出cmd<br><strong>还可以加一些参数，我们看下完整代码</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> program = <span class=\"built_in\">require</span>(<span class=\"string\">'commander'</span>);</span><br><span class=\"line\">program.version(<span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>).version);</span><br><span class=\"line\">program</span><br><span class=\"line\">  .command(<span class=\"string\">'create'</span>) <span class=\"comment\">// 创建项目</span></span><br><span class=\"line\">  .alias(<span class=\"string\">'c'</span>) <span class=\"comment\">// 别名，用来简写</span></span><br><span class=\"line\">  .description(<span class=\"string\">'create project(构造项目)'</span>) <span class=\"comment\">// 描述</span></span><br><span class=\"line\">  .option(<span class=\"string\">'-d, --default'</span>, <span class=\"string\">'skip prompt and use default preset.'</span>) <span class=\"comment\">// 选项</span></span><br><span class=\"line\">  .action(<span class=\"function\"><span class=\"params\">cmd</span> =&gt;</span> <span class=\"built_in\">console</span>.log(cmd));</span><br><span class=\"line\">program.parse(process.argv); <span class=\"comment\">// 解析进程</span></span><br><span class=\"line\">program.help();</span><br></pre></td></tr></table></figure></p>\n<p>并且你加了command之后，help会自动增加<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure></p>\n<p>你可以看到比之前多了一个commads提示命令名，并且按照description给了提示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: www [options] [command]</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -V, --version       output the version number</span><br><span class=\"line\">  -h, --help          output usage information</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">  create|c [options]  create project(构造项目)</span><br></pre></td></tr></table></figure></p>\n<p>其他详细内容可以看官网 <a href=\"https://github.com/tj/commander.js\" target=\"_blank\" rel=\"noopener\">https://github.com/tj/commander.js</a></p>\n<h1 id=\"inquirer\"><a href=\"#inquirer\" class=\"headerlink\" title=\"inquirer\"></a>inquirer</h1><p>问询组件  </p>\n<h2 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S inquirer</span><br></pre></td></tr></table></figure>\n<h2 id=\"问询\"><a href=\"#问询\" class=\"headerlink\" title=\"问询\"></a>问询</h2><p>我们创建一个create.js文件<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> inquirer = <span class=\"built_in\">require</span>(<span class=\"string\">'inquirer'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">cmd</span> =&gt;</span> &#123;</span><br><span class=\"line\">  inquirer</span><br><span class=\"line\">    .prompt([</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 项目名称</span></span><br><span class=\"line\">        name: <span class=\"string\">'name'</span>,</span><br><span class=\"line\">        type: <span class=\"string\">'input'</span>,</span><br><span class=\"line\">        <span class=\"keyword\">default</span>: <span class=\"string\">'my-project'</span>,</span><br><span class=\"line\">        message: <span class=\"string\">'请输入项目名称'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ])</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> <span class=\"built_in\">console</span>.log(p))</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'项目创建错误'</span>));</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>然后把之前command的action增加<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> create = <span class=\"built_in\">require</span>(<span class=\"string\">'create'</span>); <span class=\"comment\">// 加载create</span></span><br><span class=\"line\">program</span><br><span class=\"line\">  .command(<span class=\"string\">'create'</span>)</span><br><span class=\"line\">  .action(create); <span class=\"comment\">// action的function设置为create函数</span></span><br></pre></td></tr></table></figure></p>\n<p>这时候会运行会出现一个bug<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js create</span><br></pre></td></tr></table></figure></p>\n<p>问询出现之后，就直接显示了帮助<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? 请输入项目名称 (my-project) Usage: www [options] [<span class=\"built_in\">command</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -V, --version       output the version number</span><br><span class=\"line\">  -h, --<span class=\"built_in\">help</span>          output usage information</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">  create|c [options]  create project(构造项目)</span><br></pre></td></tr></table></figure></p>\n<p>所以我们一般吧帮助做一个处理，因为命令很多时候是也要加内容，所以默认认为了命令不全，我们加一个入参为空才出帮助就可以了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!program.args.length) &#123; <span class=\"comment\">// 参数为空时候显示帮助</span></span><br><span class=\"line\">  program.help();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>现在你可以看见了想要的问询<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash&gt; dayu create</span><br><span class=\"line\">? 请输入项目名称 (my-project)</span><br></pre></td></tr></table></figure></p>\n<p>输入之后，也能在inquirer的then中以object的方式返回<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? 请输入项目名称 my-project</span><br><span class=\"line\">&#123; name: &apos;my-project&apos; &#125;</span><br></pre></td></tr></table></figure></p>\n<p>问询的种类很多，除了输入，是不是那种可以选择的会更好呢<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.prompt([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 项目模板</span></span><br><span class=\"line\">    name: <span class=\"string\">'template'</span>,</span><br><span class=\"line\">    type: <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    choices: [<span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>],<span class=\"comment\">// 供选择的内容</span></span><br><span class=\"line\">    message: <span class=\"string\">'请选择模板'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">])</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> <span class=\"built_in\">console</span>.log(p))</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'项目创建错误'</span>));</span><br></pre></td></tr></table></figure></p>\n<p>这时候可以用上下选择你想要的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? 请选择模板</span><br><span class=\"line\">  A</span><br><span class=\"line\">&gt; B</span><br><span class=\"line\">  C</span><br></pre></td></tr></table></figure></p>\n<p>其他详细内容可以看官网 <a href=\"https://github.com/SBoudrias/Inquirer.js\" target=\"_blank\" rel=\"noopener\">https://github.com/SBoudrias/Inquirer.js</a></p>\n<h1 id=\"download-git-repo\"><a href=\"#download-git-repo\" class=\"headerlink\" title=\"download-git-repo\"></a>download-git-repo</h1><p>下载git源</p>\n<h2 id=\"安装-2\"><a href=\"#安装-2\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S download-git-repo</span><br></pre></td></tr></table></figure>\n<p>下载git源</p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>我们创建一个project-build的文件<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> download <span class=\"keyword\">from</span> <span class=\"string\">'download-git-repo'</span>;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\">(<span class=\"params\">url, name</span>) =&gt;</span> &#123;<span class=\"comment\">// url为git地址，name为本地创建的项目名也就是目录名称</span></span><br><span class=\"line\">  download(url, name, &#123;&#125;, err =&gt; &#123; <span class=\"comment\">// 下载模板</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//失败</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//成功</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>其他详细内容可以看官网 <a href=\"https://github.com/flipxfx/download-git-repo\" target=\"_blank\" rel=\"noopener\">https://github.com/flipxfx/download-git-repo</a></p>\n<h1 id=\"handlebars\"><a href=\"#handlebars\" class=\"headerlink\" title=\"handlebars\"></a>handlebars</h1><p>替换模板参数</p>\n<h2 id=\"安装-3\"><a href=\"#安装-3\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S handlebars</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改package\"><a href=\"#修改package\" class=\"headerlink\" title=\"修改package\"></a>修改package</h2><p>创建的项目需要替换package.json<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"&#123;&#123;name&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"&#123;&#123;version&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"&#123;&#123;description&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"&#123;&#123;author&#125;&#125;\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>替换我们就用这个方式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> meta = &#123; <span class=\"comment\">// 设置模板参数</span></span><br><span class=\"line\">  name: <span class=\"string\">'项目名称'</span>,</span><br><span class=\"line\">  version: <span class=\"string\">'版本号'</span>,</span><br><span class=\"line\">  description: <span class=\"string\">'项目描述'</span>,</span><br><span class=\"line\">  author: <span class=\"string\">'作者'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> fileName = <span class=\"string\">`<span class=\"subst\">$&#123;meta.name&#125;</span>/package.json`</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> content = fs.readFileSync(fileName).toString(); <span class=\"comment\">//读取package文件内容</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = handlebars.compile(content)(meta); <span class=\"comment\">// 解析内容，并且用meta替换模板的变量</span></span><br><span class=\"line\">fs.writeFileSync(fileName, result); <span class=\"comment\">// 覆盖源文件</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"babel\"><a href=\"#babel\" class=\"headerlink\" title=\"babel\"></a>babel</h1><h2 id=\"安装-4\"><a href=\"#安装-4\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D babel-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置加载环境\"><a href=\"#配置加载环境\" class=\"headerlink\" title=\"配置加载环境\"></a>配置加载环境</h2><p>node是不能使用import的，但是我们经常看到babelrc<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"presets\"</span>: [</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">\"env\"</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"target\"</span>:&#123;</span><br><span class=\"line\">          <span class=\"attr\">\"node\"</span>:<span class=\"string\">\"current\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们一般是吧src的源文件输出到dist里<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">babel src -d dist</span><br></pre></td></tr></table></figure></p>\n<p>最终应用的都是dist内的文件</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"脚手架开发\"><a href=\"#脚手架开发\" class=\"headerlink\" title=\"脚手架开发\"></a>脚手架开发</h1><h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>先找个目录初始化一下npm<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir cli</span><br><span class=\"line\"><span class=\"built_in\">cd</span> cli</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"program\"><a href=\"#program\" class=\"headerlink\" title=\"program\"></a>program</h1><p>使用program组件可以实现命令行的操作 </p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先我们安装commander<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S commander</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h2><p>最简单的program显示版本</p>\n<blockquote>\n<p>我们创建一个index.js文件，写入下面的代码</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> program = <span class=\"built_in\">require</span>(<span class=\"string\">'commander'</span>); <span class=\"comment\">// 为什么命名叫program而不是commander，因为commander是保留字段</span></span><br><span class=\"line\">program.version(<span class=\"string\">\"0.0.1\"</span>); <span class=\"comment\">// 设置版本号</span></span><br><span class=\"line\">program.parse(process.argv); <span class=\"comment\">// 解析进程</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果不知道process关键字，可以去看 <a href=\"http://nodejs.cn/api/process.html\" target=\"_blank\" rel=\"noopener\">http://nodejs.cn/api/process.html</a>  </p>\n</blockquote>\n<p>我们用node执行一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js --version</span><br></pre></td></tr></table></figure>\n<p>会得到我们设置的版本号<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.0.1</span><br></pre></td></tr></table></figure></p>\n<p>我们一般用package作为版本号<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> VER = <span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>).version</span><br></pre></td></tr></table></figure></p>\n<p><strong>最终代码</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> program = <span class=\"built_in\">require</span>(<span class=\"string\">'commander'</span>);</span><br><span class=\"line\">program.version(<span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>).version); <span class=\"comment\">// 直接获取当前的package的version作为版本号</span></span><br><span class=\"line\">program.parse(process.argv);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"帮助\"><a href=\"#帮助\" class=\"headerlink\" title=\"帮助\"></a>帮助</h2><p>上世纪电脑都靠命令行执行时候，就会有“-h”和“–help”作为帮助，显示命令如何用<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> program = <span class=\"built_in\">require</span>(<span class=\"string\">'commander'</span>);</span><br><span class=\"line\">program.version(<span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>).version);</span><br><span class=\"line\">program.parse(process.argv);</span><br><span class=\"line\">program.help(); <span class=\"comment\">// 写上这么一行，自动的就会有所有设置的参数提示</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><p>比如我们用的vue create<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">program</span><br><span class=\"line\">  .command(<span class=\"string\">'create'</span>)  <span class=\"comment\">// 命令</span></span><br><span class=\"line\">  .action(<span class=\"function\"><span class=\"params\">cmd</span> =&gt;</span> <span class=\"built_in\">console</span>.log(cmd)); <span class=\"comment\">// 命令动作</span></span><br></pre></td></tr></table></figure></p>\n<p>我们执行一下<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js create</span><br></pre></td></tr></table></figure></p>\n<p>会执行action里面的function，输出cmd<br><strong>还可以加一些参数，我们看下完整代码</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> program = <span class=\"built_in\">require</span>(<span class=\"string\">'commander'</span>);</span><br><span class=\"line\">program.version(<span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>).version);</span><br><span class=\"line\">program</span><br><span class=\"line\">  .command(<span class=\"string\">'create'</span>) <span class=\"comment\">// 创建项目</span></span><br><span class=\"line\">  .alias(<span class=\"string\">'c'</span>) <span class=\"comment\">// 别名，用来简写</span></span><br><span class=\"line\">  .description(<span class=\"string\">'create project(构造项目)'</span>) <span class=\"comment\">// 描述</span></span><br><span class=\"line\">  .option(<span class=\"string\">'-d, --default'</span>, <span class=\"string\">'skip prompt and use default preset.'</span>) <span class=\"comment\">// 选项</span></span><br><span class=\"line\">  .action(<span class=\"function\"><span class=\"params\">cmd</span> =&gt;</span> <span class=\"built_in\">console</span>.log(cmd));</span><br><span class=\"line\">program.parse(process.argv); <span class=\"comment\">// 解析进程</span></span><br><span class=\"line\">program.help();</span><br></pre></td></tr></table></figure></p>\n<p>并且你加了command之后，help会自动增加<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure></p>\n<p>你可以看到比之前多了一个commads提示命令名，并且按照description给了提示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: www [options] [command]</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -V, --version       output the version number</span><br><span class=\"line\">  -h, --help          output usage information</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">  create|c [options]  create project(构造项目)</span><br></pre></td></tr></table></figure></p>\n<p>其他详细内容可以看官网 <a href=\"https://github.com/tj/commander.js\" target=\"_blank\" rel=\"noopener\">https://github.com/tj/commander.js</a></p>\n<h1 id=\"inquirer\"><a href=\"#inquirer\" class=\"headerlink\" title=\"inquirer\"></a>inquirer</h1><p>问询组件  </p>\n<h2 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S inquirer</span><br></pre></td></tr></table></figure>\n<h2 id=\"问询\"><a href=\"#问询\" class=\"headerlink\" title=\"问询\"></a>问询</h2><p>我们创建一个create.js文件<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> inquirer = <span class=\"built_in\">require</span>(<span class=\"string\">'inquirer'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">cmd</span> =&gt;</span> &#123;</span><br><span class=\"line\">  inquirer</span><br><span class=\"line\">    .prompt([</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 项目名称</span></span><br><span class=\"line\">        name: <span class=\"string\">'name'</span>,</span><br><span class=\"line\">        type: <span class=\"string\">'input'</span>,</span><br><span class=\"line\">        <span class=\"keyword\">default</span>: <span class=\"string\">'my-project'</span>,</span><br><span class=\"line\">        message: <span class=\"string\">'请输入项目名称'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ])</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> <span class=\"built_in\">console</span>.log(p))</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'项目创建错误'</span>));</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>然后把之前command的action增加<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> create = <span class=\"built_in\">require</span>(<span class=\"string\">'create'</span>); <span class=\"comment\">// 加载create</span></span><br><span class=\"line\">program</span><br><span class=\"line\">  .command(<span class=\"string\">'create'</span>)</span><br><span class=\"line\">  .action(create); <span class=\"comment\">// action的function设置为create函数</span></span><br></pre></td></tr></table></figure></p>\n<p>这时候会运行会出现一个bug<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js create</span><br></pre></td></tr></table></figure></p>\n<p>问询出现之后，就直接显示了帮助<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? 请输入项目名称 (my-project) Usage: www [options] [<span class=\"built_in\">command</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -V, --version       output the version number</span><br><span class=\"line\">  -h, --<span class=\"built_in\">help</span>          output usage information</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">  create|c [options]  create project(构造项目)</span><br></pre></td></tr></table></figure></p>\n<p>所以我们一般吧帮助做一个处理，因为命令很多时候是也要加内容，所以默认认为了命令不全，我们加一个入参为空才出帮助就可以了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!program.args.length) &#123; <span class=\"comment\">// 参数为空时候显示帮助</span></span><br><span class=\"line\">  program.help();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>现在你可以看见了想要的问询<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash&gt; dayu create</span><br><span class=\"line\">? 请输入项目名称 (my-project)</span><br></pre></td></tr></table></figure></p>\n<p>输入之后，也能在inquirer的then中以object的方式返回<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? 请输入项目名称 my-project</span><br><span class=\"line\">&#123; name: &apos;my-project&apos; &#125;</span><br></pre></td></tr></table></figure></p>\n<p>问询的种类很多，除了输入，是不是那种可以选择的会更好呢<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.prompt([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 项目模板</span></span><br><span class=\"line\">    name: <span class=\"string\">'template'</span>,</span><br><span class=\"line\">    type: <span class=\"string\">'list'</span>,</span><br><span class=\"line\">    choices: [<span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>],<span class=\"comment\">// 供选择的内容</span></span><br><span class=\"line\">    message: <span class=\"string\">'请选择模板'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">])</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> <span class=\"built_in\">console</span>.log(p))</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'项目创建错误'</span>));</span><br></pre></td></tr></table></figure></p>\n<p>这时候可以用上下选择你想要的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? 请选择模板</span><br><span class=\"line\">  A</span><br><span class=\"line\">&gt; B</span><br><span class=\"line\">  C</span><br></pre></td></tr></table></figure></p>\n<p>其他详细内容可以看官网 <a href=\"https://github.com/SBoudrias/Inquirer.js\" target=\"_blank\" rel=\"noopener\">https://github.com/SBoudrias/Inquirer.js</a></p>\n<h1 id=\"download-git-repo\"><a href=\"#download-git-repo\" class=\"headerlink\" title=\"download-git-repo\"></a>download-git-repo</h1><p>下载git源</p>\n<h2 id=\"安装-2\"><a href=\"#安装-2\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S download-git-repo</span><br></pre></td></tr></table></figure>\n<p>下载git源</p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>我们创建一个project-build的文件<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> download <span class=\"keyword\">from</span> <span class=\"string\">'download-git-repo'</span>;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\">(<span class=\"params\">url, name</span>) =&gt;</span> &#123;<span class=\"comment\">// url为git地址，name为本地创建的项目名也就是目录名称</span></span><br><span class=\"line\">  download(url, name, &#123;&#125;, err =&gt; &#123; <span class=\"comment\">// 下载模板</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//失败</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//成功</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>其他详细内容可以看官网 <a href=\"https://github.com/flipxfx/download-git-repo\" target=\"_blank\" rel=\"noopener\">https://github.com/flipxfx/download-git-repo</a></p>\n<h1 id=\"handlebars\"><a href=\"#handlebars\" class=\"headerlink\" title=\"handlebars\"></a>handlebars</h1><p>替换模板参数</p>\n<h2 id=\"安装-3\"><a href=\"#安装-3\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S handlebars</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改package\"><a href=\"#修改package\" class=\"headerlink\" title=\"修改package\"></a>修改package</h2><p>创建的项目需要替换package.json<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"&#123;&#123;name&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"&#123;&#123;version&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"&#123;&#123;description&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"&#123;&#123;author&#125;&#125;\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>替换我们就用这个方式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> meta = &#123; <span class=\"comment\">// 设置模板参数</span></span><br><span class=\"line\">  name: <span class=\"string\">'项目名称'</span>,</span><br><span class=\"line\">  version: <span class=\"string\">'版本号'</span>,</span><br><span class=\"line\">  description: <span class=\"string\">'项目描述'</span>,</span><br><span class=\"line\">  author: <span class=\"string\">'作者'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> fileName = <span class=\"string\">`<span class=\"subst\">$&#123;meta.name&#125;</span>/package.json`</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> content = fs.readFileSync(fileName).toString(); <span class=\"comment\">//读取package文件内容</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = handlebars.compile(content)(meta); <span class=\"comment\">// 解析内容，并且用meta替换模板的变量</span></span><br><span class=\"line\">fs.writeFileSync(fileName, result); <span class=\"comment\">// 覆盖源文件</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"babel\"><a href=\"#babel\" class=\"headerlink\" title=\"babel\"></a>babel</h1><h2 id=\"安装-4\"><a href=\"#安装-4\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D babel-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置加载环境\"><a href=\"#配置加载环境\" class=\"headerlink\" title=\"配置加载环境\"></a>配置加载环境</h2><p>node是不能使用import的，但是我们经常看到babelrc<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"presets\"</span>: [</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">\"env\"</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"target\"</span>:&#123;</span><br><span class=\"line\">          <span class=\"attr\">\"node\"</span>:<span class=\"string\">\"current\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们一般是吧src的源文件输出到dist里<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">babel src -d dist</span><br></pre></td></tr></table></figure></p>\n<p>最终应用的都是dist内的文件</p>\n"},{"title":"markdown","date":"2019-06-06T08:47:33.000Z","_content":"markdown的使用\n▸ 标题\n▸ 段落\n▸ 区块引用\n▸ 代码区块\n▸ 强调\n▸ 列表\n▸ 分割线\n▸ 链接\n▸ 图片\n▸ 反斜杠\n▸ 符号\n▸ 表格\n▸ 流程图\n\n\n# 1. 标题\n## 1.1. 使用= 和 -，标记一级和二级 标题。\n### 代码\n```\n一级标题\n=\n二级标题\n-\n```\n### 效果\n> 一级标题\n> =\n> 二级标题\n> -\n## 1.2. 使用 #,可以表示 1-6级 标题。\n### 代码\n```\n# 第一级标题 `<h1>` \n## 第二级标题 `<h2>` \n### 第三级标题 `<h3>` \n#### 第二四级标题 `<h4>` \n##### 第五级标题 `<h5>` \n###### 第六级标题 `<h6>` \n```\n### 效果\n> # 第一级标题 `<h1>` \n> ## 第二级标题 `<h2>` \n> ### 第三级标题 `<h3>` \n> #### 第二四级标题 `<h4>` \n> ##### 第五级标题 `<h5>` \n> ###### 第六级标题 `<h6>` \n# 2. 段落\n段落的前后要有空行，所谓的空行是指没有文字内容。  \n若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）\n### 代码\n```\n第一段文字¶¶↵第二段文字\n```\n### 效果\n> 第一段文字  \n> 第二段文字\n# 3. 区块引用\n在段落的每行或者只在第一行使用符号 > ,还可使用多个嵌套引用\n### 代码\n```\n> 区块引用\n>> 嵌套引用\n>>> 三嵌套引用\n>>>> 四嵌套引用\n```\n### 效果\n> 区块引用\n>> 嵌套引用\n>>> 三嵌套引用\n>>>> 四嵌套引用\n# 4. 代码区块\n代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）\n\nfun main(args: Array<String>) {   \n   println(\"Hello World!\")   \n\n   println(\"sum = ${sum(34, 67)}\")  \n   println(\"sum = ${sum(34, 67)}\")  \n   println(\"sum = ${sum(34, 6, 57, 34)}\")  \n\n   printSum(237, 57)  \n   printSum(234, 567, 8)  \n   vars(1, 4, 6, 78, 0, 6, 9, 8)  \n\n\n   val sumLambda: (Int, Int) -> Int = { x, y -> x + y }  \n   println(\"sumLambda = ${sumLambda(3, 6)}\")  \n\n   testFor()  \n\n\n   val a: Int = 1000  \n   println(a === a)//true 值相等，对象地址相等  \n\n   //经过了装箱，创建了两个不同的对象  \n   val boxedA: Int? = a  \n   val anotherBoxedA: Int? = a  \n\n   //虽然经过了装箱，但是值是相等的，都是10000  \n   println(boxedA === anotherBoxedA) //  false，值相等，对象地址不一样  \n   println(boxedA == anotherBoxedA) // true，值相等  \n}  \n\n注意⚠️：需要和普通段落之间存在空行！\n# 5. 强调\n在强调内容两侧分别加上 *或者 -\n### 代码\n```\n*斜体* ，_斜体_\n**加粗**，__粗体__\n```\n### 效果\n> *斜体* ，_斜体_  \n> **加粗**，__粗体__\n# 6. 列表\n## 无序\n使用 . 、+、或- 标记无序列表\n### 代码\n```\n-   第一项\n+   第二项\n-   第三项\n+   第四项\n-   第五项\n+   第六项\n```\n### 效果\n> -   第一项\n> +   第二项\n> -   第三项\n> +   第四项\n> -   第五项\n> +   第六项   \n\n**注意：标记后面最少有一个_空格_或_制表符_。若不在引用区块\n中，必须和前方段落之间存在空行\n## 有序\n### 代码\n```\n1. 第一项\n2. 第二项\n3. 第三项\n4. 第四项\n5. 第五项\n6. 第六项\n```\n### 效果\n> 1. 第一项\n> 2. 第二项\n> 3. 第三项\n> 4. 第四项\n> 5. 第五项\n> 6. 第六项\n# 7. 分割线\n分割线最常使用就是三个或以上的 * ， ======还可以使用  - 和 _\n### 代码\n```\n***\n---\n_____ \n======\n```\n### 效果\n> ***\n> ---\n> _____ \n> =======\n# 8. 链接\n## 行内式\n### 代码\n```\n[GitHub](http://github.com)\n自动生成连接  <http://www.github.com/>\n```\n### 效果\n> [GitHub](http://github.com)  \n> 自动生成连接  <http://www.github.com/>\n## 参考式\n### 代码\n```\n[GitHub][1]\n[1]:http://github.com\n自动生成连接  <http://www.github.com/>\n```\n### 效果\n> [GitHub][1]  \n> [1]:http://github.com  \n> 自动生成连接  <http://www.github.com/>\n\n注意：上述的 [1]:http://github.com 不出现在区块中\n\n# 9. 图片\n添加图片形式和链接相似，只需要在链接的基础上前方加一个 ！号\n### 代码\n```\n![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)\n//格式: ![Alt Text](url)\n```\n### 效果\n> ![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)\n\n# 10. 反斜杠 '\\\\'\n相当于反转义作用。使符号成为普通符号\n\n# 11. 符号 ``\n起到标记作用，如标签：  \nCtrl+A 、Ctrl+C、Ctrl+V\n# 12. 表格\n```\n第一格表头 | 第二格表头\n---------| -------------\n内容单元格 第一列第一格 | 内容单元格第二列第一格\n内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格\n内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格\n内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格\n```\n### 效果\n> 第一格表头 | 第二格表头\n> ---------| -------------\n> 内容单元格 第一列第一格 | 内容单元格第二列第一格\n> 内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格\n> 内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格\n> 内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格\n\n# 13. 流程图\n```\nst=>start: Start:>https://www.jpjbp.com/\nio=>inputoutput: verification\nop=>operation: Your Operation\ncond=>condition: Yes or No?\nsub=>subroutine: Your Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io\n```\n### 效果\nst=>start: Start:>https://www.jpjbp.com/\nio=>inputoutput: verification\nop=>operation: Your Operation\ncond=>condition: Yes or No?\nsub=>subroutine: Your Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io\n\n更多语法参考： [流程图语法参考](http://flowchart.js.org)","source":"_posts/markdown.md","raw":"---\ntitle: markdown\ndate: 2019-06-06 16:47:33\ntags: markdown\n---\nmarkdown的使用\n▸ 标题\n▸ 段落\n▸ 区块引用\n▸ 代码区块\n▸ 强调\n▸ 列表\n▸ 分割线\n▸ 链接\n▸ 图片\n▸ 反斜杠\n▸ 符号\n▸ 表格\n▸ 流程图\n\n\n# 1. 标题\n## 1.1. 使用= 和 -，标记一级和二级 标题。\n### 代码\n```\n一级标题\n=\n二级标题\n-\n```\n### 效果\n> 一级标题\n> =\n> 二级标题\n> -\n## 1.2. 使用 #,可以表示 1-6级 标题。\n### 代码\n```\n# 第一级标题 `<h1>` \n## 第二级标题 `<h2>` \n### 第三级标题 `<h3>` \n#### 第二四级标题 `<h4>` \n##### 第五级标题 `<h5>` \n###### 第六级标题 `<h6>` \n```\n### 效果\n> # 第一级标题 `<h1>` \n> ## 第二级标题 `<h2>` \n> ### 第三级标题 `<h3>` \n> #### 第二四级标题 `<h4>` \n> ##### 第五级标题 `<h5>` \n> ###### 第六级标题 `<h6>` \n# 2. 段落\n段落的前后要有空行，所谓的空行是指没有文字内容。  \n若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）\n### 代码\n```\n第一段文字¶¶↵第二段文字\n```\n### 效果\n> 第一段文字  \n> 第二段文字\n# 3. 区块引用\n在段落的每行或者只在第一行使用符号 > ,还可使用多个嵌套引用\n### 代码\n```\n> 区块引用\n>> 嵌套引用\n>>> 三嵌套引用\n>>>> 四嵌套引用\n```\n### 效果\n> 区块引用\n>> 嵌套引用\n>>> 三嵌套引用\n>>>> 四嵌套引用\n# 4. 代码区块\n代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）\n\nfun main(args: Array<String>) {   \n   println(\"Hello World!\")   \n\n   println(\"sum = ${sum(34, 67)}\")  \n   println(\"sum = ${sum(34, 67)}\")  \n   println(\"sum = ${sum(34, 6, 57, 34)}\")  \n\n   printSum(237, 57)  \n   printSum(234, 567, 8)  \n   vars(1, 4, 6, 78, 0, 6, 9, 8)  \n\n\n   val sumLambda: (Int, Int) -> Int = { x, y -> x + y }  \n   println(\"sumLambda = ${sumLambda(3, 6)}\")  \n\n   testFor()  \n\n\n   val a: Int = 1000  \n   println(a === a)//true 值相等，对象地址相等  \n\n   //经过了装箱，创建了两个不同的对象  \n   val boxedA: Int? = a  \n   val anotherBoxedA: Int? = a  \n\n   //虽然经过了装箱，但是值是相等的，都是10000  \n   println(boxedA === anotherBoxedA) //  false，值相等，对象地址不一样  \n   println(boxedA == anotherBoxedA) // true，值相等  \n}  \n\n注意⚠️：需要和普通段落之间存在空行！\n# 5. 强调\n在强调内容两侧分别加上 *或者 -\n### 代码\n```\n*斜体* ，_斜体_\n**加粗**，__粗体__\n```\n### 效果\n> *斜体* ，_斜体_  \n> **加粗**，__粗体__\n# 6. 列表\n## 无序\n使用 . 、+、或- 标记无序列表\n### 代码\n```\n-   第一项\n+   第二项\n-   第三项\n+   第四项\n-   第五项\n+   第六项\n```\n### 效果\n> -   第一项\n> +   第二项\n> -   第三项\n> +   第四项\n> -   第五项\n> +   第六项   \n\n**注意：标记后面最少有一个_空格_或_制表符_。若不在引用区块\n中，必须和前方段落之间存在空行\n## 有序\n### 代码\n```\n1. 第一项\n2. 第二项\n3. 第三项\n4. 第四项\n5. 第五项\n6. 第六项\n```\n### 效果\n> 1. 第一项\n> 2. 第二项\n> 3. 第三项\n> 4. 第四项\n> 5. 第五项\n> 6. 第六项\n# 7. 分割线\n分割线最常使用就是三个或以上的 * ， ======还可以使用  - 和 _\n### 代码\n```\n***\n---\n_____ \n======\n```\n### 效果\n> ***\n> ---\n> _____ \n> =======\n# 8. 链接\n## 行内式\n### 代码\n```\n[GitHub](http://github.com)\n自动生成连接  <http://www.github.com/>\n```\n### 效果\n> [GitHub](http://github.com)  \n> 自动生成连接  <http://www.github.com/>\n## 参考式\n### 代码\n```\n[GitHub][1]\n[1]:http://github.com\n自动生成连接  <http://www.github.com/>\n```\n### 效果\n> [GitHub][1]  \n> [1]:http://github.com  \n> 自动生成连接  <http://www.github.com/>\n\n注意：上述的 [1]:http://github.com 不出现在区块中\n\n# 9. 图片\n添加图片形式和链接相似，只需要在链接的基础上前方加一个 ！号\n### 代码\n```\n![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)\n//格式: ![Alt Text](url)\n```\n### 效果\n> ![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)\n\n# 10. 反斜杠 '\\\\'\n相当于反转义作用。使符号成为普通符号\n\n# 11. 符号 ``\n起到标记作用，如标签：  \nCtrl+A 、Ctrl+C、Ctrl+V\n# 12. 表格\n```\n第一格表头 | 第二格表头\n---------| -------------\n内容单元格 第一列第一格 | 内容单元格第二列第一格\n内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格\n内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格\n内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格\n```\n### 效果\n> 第一格表头 | 第二格表头\n> ---------| -------------\n> 内容单元格 第一列第一格 | 内容单元格第二列第一格\n> 内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格\n> 内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格\n> 内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格\n\n# 13. 流程图\n```\nst=>start: Start:>https://www.jpjbp.com/\nio=>inputoutput: verification\nop=>operation: Your Operation\ncond=>condition: Yes or No?\nsub=>subroutine: Your Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io\n```\n### 效果\nst=>start: Start:>https://www.jpjbp.com/\nio=>inputoutput: verification\nop=>operation: Your Operation\ncond=>condition: Yes or No?\nsub=>subroutine: Your Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io\n\n更多语法参考： [流程图语法参考](http://flowchart.js.org)","slug":"markdown","published":1,"updated":"2019-07-19T06:47:22.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck01v9ugv00013si291947359","content":"<p>markdown的使用<br>▸ 标题<br>▸ 段落<br>▸ 区块引用<br>▸ 代码区块<br>▸ 强调<br>▸ 列表<br>▸ 分割线<br>▸ 链接<br>▸ 图片<br>▸ 反斜杠<br>▸ 符号<br>▸ 表格<br>▸ 流程图</p>\n<h1 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1. 标题\"></a>1. 标题</h1><h2 id=\"1-1-使用-和-，标记一级和二级-标题。\"><a href=\"#1-1-使用-和-，标记一级和二级-标题。\" class=\"headerlink\" title=\"1.1. 使用= 和 -，标记一级和二级 标题。\"></a>1.1. 使用= 和 -，标记一级和二级 标题。</h2><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一级标题</span><br><span class=\"line\">=</span><br><span class=\"line\">二级标题</span><br><span class=\"line\">-</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p>一级标题<br>=<br>二级标题<br>-</p>\n</blockquote>\n<h2 id=\"1-2-使用-可以表示-1-6级-标题。\"><a href=\"#1-2-使用-可以表示-1-6级-标题。\" class=\"headerlink\" title=\"1.2. 使用 #,可以表示 1-6级 标题。\"></a>1.2. 使用 #,可以表示 1-6级 标题。</h2><h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 第一级标题 `&lt;h1&gt;` </span><br><span class=\"line\">## 第二级标题 `&lt;h2&gt;` </span><br><span class=\"line\">### 第三级标题 `&lt;h3&gt;` </span><br><span class=\"line\">#### 第二四级标题 `&lt;h4&gt;` </span><br><span class=\"line\">##### 第五级标题 `&lt;h5&gt;` </span><br><span class=\"line\">###### 第六级标题 `&lt;h6&gt;`</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-1\"><a href=\"#效果-1\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<h1 id=\"第一级标题-lt-h1-gt\"><a href=\"#第一级标题-lt-h1-gt\" class=\"headerlink\" title=\"第一级标题 &lt;h1&gt;\"></a>第一级标题 <code>&lt;h1&gt;</code></h1><h2 id=\"第二级标题-lt-h2-gt\"><a href=\"#第二级标题-lt-h2-gt\" class=\"headerlink\" title=\"第二级标题 &lt;h2&gt;\"></a>第二级标题 <code>&lt;h2&gt;</code></h2><h3 id=\"第三级标题-lt-h3-gt\"><a href=\"#第三级标题-lt-h3-gt\" class=\"headerlink\" title=\"第三级标题 &lt;h3&gt;\"></a>第三级标题 <code>&lt;h3&gt;</code></h3><h4 id=\"第二四级标题-lt-h4-gt\"><a href=\"#第二四级标题-lt-h4-gt\" class=\"headerlink\" title=\"第二四级标题 &lt;h4&gt;\"></a>第二四级标题 <code>&lt;h4&gt;</code></h4><h5 id=\"第五级标题-lt-h5-gt\"><a href=\"#第五级标题-lt-h5-gt\" class=\"headerlink\" title=\"第五级标题 &lt;h5&gt;\"></a>第五级标题 <code>&lt;h5&gt;</code></h5><h6 id=\"第六级标题-lt-h6-gt\"><a href=\"#第六级标题-lt-h6-gt\" class=\"headerlink\" title=\"第六级标题 &lt;h6&gt;\"></a>第六级标题 <code>&lt;h6&gt;</code></h6></blockquote>\n<h1 id=\"2-段落\"><a href=\"#2-段落\" class=\"headerlink\" title=\"2. 段落\"></a>2. 段落</h1><p>段落的前后要有空行，所谓的空行是指没有文字内容。<br>若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一段文字¶¶↵第二段文字</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-2\"><a href=\"#效果-2\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p>第一段文字<br>第二段文字</p>\n</blockquote>\n<h1 id=\"3-区块引用\"><a href=\"#3-区块引用\" class=\"headerlink\" title=\"3. 区块引用\"></a>3. 区块引用</h1><p>在段落的每行或者只在第一行使用符号 &gt; ,还可使用多个嵌套引用</p>\n<h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 区块引用</span><br><span class=\"line\">&gt;&gt; 嵌套引用</span><br><span class=\"line\">&gt;&gt;&gt; 三嵌套引用</span><br><span class=\"line\">&gt;&gt;&gt;&gt; 四嵌套引用</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-3\"><a href=\"#效果-3\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p>区块引用</p>\n<blockquote>\n<p>嵌套引用</p>\n<blockquote>\n<p>三嵌套引用</p>\n<blockquote>\n<p>四嵌套引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"4-代码区块\"><a href=\"#4-代码区块\" class=\"headerlink\" title=\"4. 代码区块\"></a>4. 代码区块</h1><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）</p>\n<p>fun main(args: Array<string>) {<br>   println(“Hello World!”)   </string></p>\n<p>   println(“sum = ${sum(34, 67)}”)<br>   println(“sum = ${sum(34, 67)}”)<br>   println(“sum = ${sum(34, 6, 57, 34)}”)  </p>\n<p>   printSum(237, 57)<br>   printSum(234, 567, 8)<br>   vars(1, 4, 6, 78, 0, 6, 9, 8)  </p>\n<p>   val sumLambda: (Int, Int) -&gt; Int = { x, y -&gt; x + y }<br>   println(“sumLambda = ${sumLambda(3, 6)}”)  </p>\n<p>   testFor()  </p>\n<p>   val a: Int = 1000<br>   println(a === a)//true 值相等，对象地址相等  </p>\n<p>   //经过了装箱，创建了两个不同的对象<br>   val boxedA: Int? = a<br>   val anotherBoxedA: Int? = a  </p>\n<p>   //虽然经过了装箱，但是值是相等的，都是10000<br>   println(boxedA === anotherBoxedA) //  false，值相等，对象地址不一样<br>   println(boxedA == anotherBoxedA) // true，值相等<br>}  </p>\n<p>注意⚠️：需要和普通段落之间存在空行！</p>\n<h1 id=\"5-强调\"><a href=\"#5-强调\" class=\"headerlink\" title=\"5. 强调\"></a>5. 强调</h1><p>在强调内容两侧分别加上 *或者 -</p>\n<h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*斜体* ，_斜体_</span><br><span class=\"line\">**加粗**，__粗体__</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-4\"><a href=\"#效果-4\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p><em>斜体</em> ，_斜体_<br><strong>加粗</strong>，<strong>粗体</strong></p>\n</blockquote>\n<h1 id=\"6-列表\"><a href=\"#6-列表\" class=\"headerlink\" title=\"6. 列表\"></a>6. 列表</h1><h2 id=\"无序\"><a href=\"#无序\" class=\"headerlink\" title=\"无序\"></a>无序</h2><p>使用 . 、+、或- 标记无序列表</p>\n<h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-   第一项</span><br><span class=\"line\">+   第二项</span><br><span class=\"line\">-   第三项</span><br><span class=\"line\">+   第四项</span><br><span class=\"line\">-   第五项</span><br><span class=\"line\">+   第六项</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-5\"><a href=\"#效果-5\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<ul>\n<li>第一项</li>\n</ul>\n<ul>\n<li>第二项</li>\n</ul>\n<ul>\n<li>第三项</li>\n</ul>\n<ul>\n<li>第四项</li>\n</ul>\n<ul>\n<li>第五项</li>\n</ul>\n<ul>\n<li>第六项   </li>\n</ul>\n</blockquote>\n<p>**注意：标记后面最少有一个_空格_或<em>制表符</em>。若不在引用区块<br>中，必须和前方段落之间存在空行</p>\n<h2 id=\"有序\"><a href=\"#有序\" class=\"headerlink\" title=\"有序\"></a>有序</h2><h3 id=\"代码-6\"><a href=\"#代码-6\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 第一项</span><br><span class=\"line\">2. 第二项</span><br><span class=\"line\">3. 第三项</span><br><span class=\"line\">4. 第四项</span><br><span class=\"line\">5. 第五项</span><br><span class=\"line\">6. 第六项</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-6\"><a href=\"#效果-6\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<ol>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n<li>第四项</li>\n<li>第五项</li>\n<li>第六项</li>\n</ol>\n</blockquote>\n<h1 id=\"7-分割线\"><a href=\"#7-分割线\" class=\"headerlink\" title=\"7. 分割线\"></a>7. 分割线</h1><p>分割线最常使用就是三个或以上的 * ， ======还可以使用  - 和 _</p>\n<h3 id=\"代码-7\"><a href=\"#代码-7\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">***</span><br><span class=\"line\">---</span><br><span class=\"line\">_____ </span><br><span class=\"line\">======</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-7\"><a href=\"#效果-7\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<hr>\n<hr>\n<hr>\n<p>=======</p>\n</blockquote>\n<h1 id=\"8-链接\"><a href=\"#8-链接\" class=\"headerlink\" title=\"8. 链接\"></a>8. 链接</h1><h2 id=\"行内式\"><a href=\"#行内式\" class=\"headerlink\" title=\"行内式\"></a>行内式</h2><h3 id=\"代码-8\"><a href=\"#代码-8\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[GitHub](http://github.com)</span><br><span class=\"line\">自动生成连接  &lt;http://www.github.com/&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-8\"><a href=\"#效果-8\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p><a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a><br>自动生成连接  <a href=\"http://www.github.com/\" target=\"_blank\" rel=\"noopener\">http://www.github.com/</a></p>\n</blockquote>\n<h2 id=\"参考式\"><a href=\"#参考式\" class=\"headerlink\" title=\"参考式\"></a>参考式</h2><h3 id=\"代码-9\"><a href=\"#代码-9\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[GitHub][1]</span><br><span class=\"line\">[1]:http://github.com</span><br><span class=\"line\">自动生成连接  &lt;http://www.github.com/&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-9\"><a href=\"#效果-9\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p>[GitHub][1]<br>[1]:<a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">http://github.com</a><br>自动生成连接  <a href=\"http://www.github.com/\" target=\"_blank\" rel=\"noopener\">http://www.github.com/</a></p>\n</blockquote>\n<p>注意：上述的 [1]:<a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">http://github.com</a> 不出现在区块中</p>\n<h1 id=\"9-图片\"><a href=\"#9-图片\" class=\"headerlink\" title=\"9. 图片\"></a>9. 图片</h1><p>添加图片形式和链接相似，只需要在链接的基础上前方加一个 ！号</p>\n<h3 id=\"代码-10\"><a href=\"#代码-10\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)</span><br><span class=\"line\">//格式: ![Alt Text](url)</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-10\"><a href=\"#效果-10\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p><img src=\"http://zh.mweb.im/asset/img/set-up-git.gif\" alt=\"GitHub set up\"></p>\n</blockquote>\n<h1 id=\"10-反斜杠-‘-‘\"><a href=\"#10-反斜杠-‘-‘\" class=\"headerlink\" title=\"10. 反斜杠 ‘\\‘\"></a>10. 反斜杠 ‘\\‘</h1><p>相当于反转义作用。使符号成为普通符号</p>\n<h1 id=\"11-符号\"><a href=\"#11-符号\" class=\"headerlink\" title=\"11. 符号 \"></a>11. 符号 <code></code></h1><p>起到标记作用，如标签：<br>Ctrl+A 、Ctrl+C、Ctrl+V</p>\n<h1 id=\"12-表格\"><a href=\"#12-表格\" class=\"headerlink\" title=\"12. 表格\"></a>12. 表格</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一格表头 | 第二格表头</span><br><span class=\"line\">---------| -------------</span><br><span class=\"line\">内容单元格 第一列第一格 | 内容单元格第二列第一格</span><br><span class=\"line\">内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格</span><br><span class=\"line\">内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格</span><br><span class=\"line\">内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-11\"><a href=\"#效果-11\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<table>\n<thead>\n<tr>\n<th>第一格表头</th>\n<th>第二格表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内容单元格 第一列第一格</td>\n<td>内容单元格第二列第一格</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第二格 多加文字</td>\n<td>内容单元格第二列第二格</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第三格 多加文字</td>\n<td>内容单元格第二列第三格</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第四格 多加文字</td>\n<td>内容单元格第二列第四格</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h1 id=\"13-流程图\"><a href=\"#13-流程图\" class=\"headerlink\" title=\"13. 流程图\"></a>13. 流程图</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: Start:&gt;https://www.jpjbp.com/</span><br><span class=\"line\">io=&gt;inputoutput: verification</span><br><span class=\"line\">op=&gt;operation: Your Operation</span><br><span class=\"line\">cond=&gt;condition: Yes or No?</span><br><span class=\"line\">sub=&gt;subroutine: Your Subroutine</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;io-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub-&gt;io</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-12\"><a href=\"#效果-12\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p>st=&gt;start: Start:&gt;<a href=\"https://www.jpjbp.com/\" target=\"_blank\" rel=\"noopener\">https://www.jpjbp.com/</a><br>io=&gt;inputoutput: verification<br>op=&gt;operation: Your Operation<br>cond=&gt;condition: Yes or No?<br>sub=&gt;subroutine: Your Subroutine<br>e=&gt;end</p>\n<p>st-&gt;io-&gt;op-&gt;cond<br>cond(yes)-&gt;e<br>cond(no)-&gt;sub-&gt;io</p>\n<p>更多语法参考： <a href=\"http://flowchart.js.org\" target=\"_blank\" rel=\"noopener\">流程图语法参考</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>markdown的使用<br>▸ 标题<br>▸ 段落<br>▸ 区块引用<br>▸ 代码区块<br>▸ 强调<br>▸ 列表<br>▸ 分割线<br>▸ 链接<br>▸ 图片<br>▸ 反斜杠<br>▸ 符号<br>▸ 表格<br>▸ 流程图</p>\n<h1 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1. 标题\"></a>1. 标题</h1><h2 id=\"1-1-使用-和-，标记一级和二级-标题。\"><a href=\"#1-1-使用-和-，标记一级和二级-标题。\" class=\"headerlink\" title=\"1.1. 使用= 和 -，标记一级和二级 标题。\"></a>1.1. 使用= 和 -，标记一级和二级 标题。</h2><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一级标题</span><br><span class=\"line\">=</span><br><span class=\"line\">二级标题</span><br><span class=\"line\">-</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p>一级标题<br>=<br>二级标题<br>-</p>\n</blockquote>\n<h2 id=\"1-2-使用-可以表示-1-6级-标题。\"><a href=\"#1-2-使用-可以表示-1-6级-标题。\" class=\"headerlink\" title=\"1.2. 使用 #,可以表示 1-6级 标题。\"></a>1.2. 使用 #,可以表示 1-6级 标题。</h2><h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 第一级标题 `&lt;h1&gt;` </span><br><span class=\"line\">## 第二级标题 `&lt;h2&gt;` </span><br><span class=\"line\">### 第三级标题 `&lt;h3&gt;` </span><br><span class=\"line\">#### 第二四级标题 `&lt;h4&gt;` </span><br><span class=\"line\">##### 第五级标题 `&lt;h5&gt;` </span><br><span class=\"line\">###### 第六级标题 `&lt;h6&gt;`</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-1\"><a href=\"#效果-1\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<h1 id=\"第一级标题-lt-h1-gt\"><a href=\"#第一级标题-lt-h1-gt\" class=\"headerlink\" title=\"第一级标题 &lt;h1&gt;\"></a>第一级标题 <code>&lt;h1&gt;</code></h1><h2 id=\"第二级标题-lt-h2-gt\"><a href=\"#第二级标题-lt-h2-gt\" class=\"headerlink\" title=\"第二级标题 &lt;h2&gt;\"></a>第二级标题 <code>&lt;h2&gt;</code></h2><h3 id=\"第三级标题-lt-h3-gt\"><a href=\"#第三级标题-lt-h3-gt\" class=\"headerlink\" title=\"第三级标题 &lt;h3&gt;\"></a>第三级标题 <code>&lt;h3&gt;</code></h3><h4 id=\"第二四级标题-lt-h4-gt\"><a href=\"#第二四级标题-lt-h4-gt\" class=\"headerlink\" title=\"第二四级标题 &lt;h4&gt;\"></a>第二四级标题 <code>&lt;h4&gt;</code></h4><h5 id=\"第五级标题-lt-h5-gt\"><a href=\"#第五级标题-lt-h5-gt\" class=\"headerlink\" title=\"第五级标题 &lt;h5&gt;\"></a>第五级标题 <code>&lt;h5&gt;</code></h5><h6 id=\"第六级标题-lt-h6-gt\"><a href=\"#第六级标题-lt-h6-gt\" class=\"headerlink\" title=\"第六级标题 &lt;h6&gt;\"></a>第六级标题 <code>&lt;h6&gt;</code></h6></blockquote>\n<h1 id=\"2-段落\"><a href=\"#2-段落\" class=\"headerlink\" title=\"2. 段落\"></a>2. 段落</h1><p>段落的前后要有空行，所谓的空行是指没有文字内容。<br>若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一段文字¶¶↵第二段文字</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-2\"><a href=\"#效果-2\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p>第一段文字<br>第二段文字</p>\n</blockquote>\n<h1 id=\"3-区块引用\"><a href=\"#3-区块引用\" class=\"headerlink\" title=\"3. 区块引用\"></a>3. 区块引用</h1><p>在段落的每行或者只在第一行使用符号 &gt; ,还可使用多个嵌套引用</p>\n<h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 区块引用</span><br><span class=\"line\">&gt;&gt; 嵌套引用</span><br><span class=\"line\">&gt;&gt;&gt; 三嵌套引用</span><br><span class=\"line\">&gt;&gt;&gt;&gt; 四嵌套引用</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-3\"><a href=\"#效果-3\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p>区块引用</p>\n<blockquote>\n<p>嵌套引用</p>\n<blockquote>\n<p>三嵌套引用</p>\n<blockquote>\n<p>四嵌套引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"4-代码区块\"><a href=\"#4-代码区块\" class=\"headerlink\" title=\"4. 代码区块\"></a>4. 代码区块</h1><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）</p>\n<p>fun main(args: Array<string>) {<br>   println(“Hello World!”)   </string></p>\n<p>   println(“sum = ${sum(34, 67)}”)<br>   println(“sum = ${sum(34, 67)}”)<br>   println(“sum = ${sum(34, 6, 57, 34)}”)  </p>\n<p>   printSum(237, 57)<br>   printSum(234, 567, 8)<br>   vars(1, 4, 6, 78, 0, 6, 9, 8)  </p>\n<p>   val sumLambda: (Int, Int) -&gt; Int = { x, y -&gt; x + y }<br>   println(“sumLambda = ${sumLambda(3, 6)}”)  </p>\n<p>   testFor()  </p>\n<p>   val a: Int = 1000<br>   println(a === a)//true 值相等，对象地址相等  </p>\n<p>   //经过了装箱，创建了两个不同的对象<br>   val boxedA: Int? = a<br>   val anotherBoxedA: Int? = a  </p>\n<p>   //虽然经过了装箱，但是值是相等的，都是10000<br>   println(boxedA === anotherBoxedA) //  false，值相等，对象地址不一样<br>   println(boxedA == anotherBoxedA) // true，值相等<br>}  </p>\n<p>注意⚠️：需要和普通段落之间存在空行！</p>\n<h1 id=\"5-强调\"><a href=\"#5-强调\" class=\"headerlink\" title=\"5. 强调\"></a>5. 强调</h1><p>在强调内容两侧分别加上 *或者 -</p>\n<h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*斜体* ，_斜体_</span><br><span class=\"line\">**加粗**，__粗体__</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-4\"><a href=\"#效果-4\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p><em>斜体</em> ，_斜体_<br><strong>加粗</strong>，<strong>粗体</strong></p>\n</blockquote>\n<h1 id=\"6-列表\"><a href=\"#6-列表\" class=\"headerlink\" title=\"6. 列表\"></a>6. 列表</h1><h2 id=\"无序\"><a href=\"#无序\" class=\"headerlink\" title=\"无序\"></a>无序</h2><p>使用 . 、+、或- 标记无序列表</p>\n<h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-   第一项</span><br><span class=\"line\">+   第二项</span><br><span class=\"line\">-   第三项</span><br><span class=\"line\">+   第四项</span><br><span class=\"line\">-   第五项</span><br><span class=\"line\">+   第六项</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-5\"><a href=\"#效果-5\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<ul>\n<li>第一项</li>\n</ul>\n<ul>\n<li>第二项</li>\n</ul>\n<ul>\n<li>第三项</li>\n</ul>\n<ul>\n<li>第四项</li>\n</ul>\n<ul>\n<li>第五项</li>\n</ul>\n<ul>\n<li>第六项   </li>\n</ul>\n</blockquote>\n<p>**注意：标记后面最少有一个_空格_或<em>制表符</em>。若不在引用区块<br>中，必须和前方段落之间存在空行</p>\n<h2 id=\"有序\"><a href=\"#有序\" class=\"headerlink\" title=\"有序\"></a>有序</h2><h3 id=\"代码-6\"><a href=\"#代码-6\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 第一项</span><br><span class=\"line\">2. 第二项</span><br><span class=\"line\">3. 第三项</span><br><span class=\"line\">4. 第四项</span><br><span class=\"line\">5. 第五项</span><br><span class=\"line\">6. 第六项</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-6\"><a href=\"#效果-6\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<ol>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n<li>第四项</li>\n<li>第五项</li>\n<li>第六项</li>\n</ol>\n</blockquote>\n<h1 id=\"7-分割线\"><a href=\"#7-分割线\" class=\"headerlink\" title=\"7. 分割线\"></a>7. 分割线</h1><p>分割线最常使用就是三个或以上的 * ， ======还可以使用  - 和 _</p>\n<h3 id=\"代码-7\"><a href=\"#代码-7\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">***</span><br><span class=\"line\">---</span><br><span class=\"line\">_____ </span><br><span class=\"line\">======</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-7\"><a href=\"#效果-7\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<hr>\n<hr>\n<hr>\n<p>=======</p>\n</blockquote>\n<h1 id=\"8-链接\"><a href=\"#8-链接\" class=\"headerlink\" title=\"8. 链接\"></a>8. 链接</h1><h2 id=\"行内式\"><a href=\"#行内式\" class=\"headerlink\" title=\"行内式\"></a>行内式</h2><h3 id=\"代码-8\"><a href=\"#代码-8\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[GitHub](http://github.com)</span><br><span class=\"line\">自动生成连接  &lt;http://www.github.com/&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-8\"><a href=\"#效果-8\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p><a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a><br>自动生成连接  <a href=\"http://www.github.com/\" target=\"_blank\" rel=\"noopener\">http://www.github.com/</a></p>\n</blockquote>\n<h2 id=\"参考式\"><a href=\"#参考式\" class=\"headerlink\" title=\"参考式\"></a>参考式</h2><h3 id=\"代码-9\"><a href=\"#代码-9\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[GitHub][1]</span><br><span class=\"line\">[1]:http://github.com</span><br><span class=\"line\">自动生成连接  &lt;http://www.github.com/&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-9\"><a href=\"#效果-9\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p>[GitHub][1]<br>[1]:<a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">http://github.com</a><br>自动生成连接  <a href=\"http://www.github.com/\" target=\"_blank\" rel=\"noopener\">http://www.github.com/</a></p>\n</blockquote>\n<p>注意：上述的 [1]:<a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">http://github.com</a> 不出现在区块中</p>\n<h1 id=\"9-图片\"><a href=\"#9-图片\" class=\"headerlink\" title=\"9. 图片\"></a>9. 图片</h1><p>添加图片形式和链接相似，只需要在链接的基础上前方加一个 ！号</p>\n<h3 id=\"代码-10\"><a href=\"#代码-10\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)</span><br><span class=\"line\">//格式: ![Alt Text](url)</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-10\"><a href=\"#效果-10\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<p><img src=\"http://zh.mweb.im/asset/img/set-up-git.gif\" alt=\"GitHub set up\"></p>\n</blockquote>\n<h1 id=\"10-反斜杠-‘-‘\"><a href=\"#10-反斜杠-‘-‘\" class=\"headerlink\" title=\"10. 反斜杠 ‘\\‘\"></a>10. 反斜杠 ‘\\‘</h1><p>相当于反转义作用。使符号成为普通符号</p>\n<h1 id=\"11-符号\"><a href=\"#11-符号\" class=\"headerlink\" title=\"11. 符号 \"></a>11. 符号 <code></code></h1><p>起到标记作用，如标签：<br>Ctrl+A 、Ctrl+C、Ctrl+V</p>\n<h1 id=\"12-表格\"><a href=\"#12-表格\" class=\"headerlink\" title=\"12. 表格\"></a>12. 表格</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一格表头 | 第二格表头</span><br><span class=\"line\">---------| -------------</span><br><span class=\"line\">内容单元格 第一列第一格 | 内容单元格第二列第一格</span><br><span class=\"line\">内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格</span><br><span class=\"line\">内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格</span><br><span class=\"line\">内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-11\"><a href=\"#效果-11\" class=\"headerlink\" title=\"效果\"></a>效果</h3><blockquote>\n<table>\n<thead>\n<tr>\n<th>第一格表头</th>\n<th>第二格表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内容单元格 第一列第一格</td>\n<td>内容单元格第二列第一格</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第二格 多加文字</td>\n<td>内容单元格第二列第二格</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第三格 多加文字</td>\n<td>内容单元格第二列第三格</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第四格 多加文字</td>\n<td>内容单元格第二列第四格</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<h1 id=\"13-流程图\"><a href=\"#13-流程图\" class=\"headerlink\" title=\"13. 流程图\"></a>13. 流程图</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: Start:&gt;https://www.jpjbp.com/</span><br><span class=\"line\">io=&gt;inputoutput: verification</span><br><span class=\"line\">op=&gt;operation: Your Operation</span><br><span class=\"line\">cond=&gt;condition: Yes or No?</span><br><span class=\"line\">sub=&gt;subroutine: Your Subroutine</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;io-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub-&gt;io</span><br></pre></td></tr></table></figure>\n<h3 id=\"效果-12\"><a href=\"#效果-12\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p>st=&gt;start: Start:&gt;<a href=\"https://www.jpjbp.com/\" target=\"_blank\" rel=\"noopener\">https://www.jpjbp.com/</a><br>io=&gt;inputoutput: verification<br>op=&gt;operation: Your Operation<br>cond=&gt;condition: Yes or No?<br>sub=&gt;subroutine: Your Subroutine<br>e=&gt;end</p>\n<p>st-&gt;io-&gt;op-&gt;cond<br>cond(yes)-&gt;e<br>cond(no)-&gt;sub-&gt;io</p>\n<p>更多语法参考： <a href=\"http://flowchart.js.org\" target=\"_blank\" rel=\"noopener\">流程图语法参考</a></p>\n"},{"title":"nrm的使用","date":"2019-03-10T04:57:10.000Z","_content":"nrm是专门用来管理和快速切换私人配置的registry\n# 全局安装nrm\n``` bash\nnpm i nrm -g\n```\n如果是unix系统，比如mac或者其他linux，需要添加sudo，然后还要输入密码\n``` bash\nsudo npm i nrm -g\n```\n## nrm有一些默认配置，用nrm ls命令查看默认配置\n``` bash\nnrm ls\n```\n带*号即为当前使用的配置\n```\n  npm ---- https://registry.npmjs.org/\n* cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n```\n## 也可以直接用current命令查看当前使用的是哪个源\n``` bash\nnrm current\n```\n## 使用nrm切换源\n切到源http://registry.mirror.cqupt.edu.cn 命令：nrm use 源的别名，即\n``` bash\nnrm use rednpm\n```\n查看*变化了位置\n```\n  npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n* rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n```\n## 用nrm add 命令添加公司私有npm源\n如http://test.jd.com (肯定不能暴露公司的私有源，这里代替的)，起个别名叫jd\n``` bash\nnrm add jd http://test.jd.com\n```\n执行成功提示\n```\nadd registry jd success\n```\n接着查看nrm配置，发现最底部jd添加成功\n```\n  npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n* rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n  jd ----- https://test.jd.com/\n```\n需要用use去指向\n``` bash\nnrm use jd\n```\n看看ls\n```\n  npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n* jd - http://registry.m.jd.com/\n```\n## 可以用test测试速度，我们来测试cnpm的速度\n``` bash\nnrm test cnpm\nnrm test npm\n```\n输出：\n```\ncnpm --- 1095ms\nnpm ---- 1241ms\n```\n做做对比，npm还是慢\n\n## 删除源用del\n``` bash\nnrm del jd\n```\n由于你选中的是这个源，删除之后会自动替换\n```\n⸨░░░░░░░░░░░░░░░░░░⸩ ⠙ :\n    delete registry jd success\n\n                        \n\n   Registry has been set to: https://registry.npmjs.org/\n```\n再看看ls\n```\n* npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n```\n已经到最上面的源取了","source":"_posts/nrm.md","raw":"---\ntitle: nrm的使用\ndate: 2019-03-10 12:57:10\ntags: nrm\n---\nnrm是专门用来管理和快速切换私人配置的registry\n# 全局安装nrm\n``` bash\nnpm i nrm -g\n```\n如果是unix系统，比如mac或者其他linux，需要添加sudo，然后还要输入密码\n``` bash\nsudo npm i nrm -g\n```\n## nrm有一些默认配置，用nrm ls命令查看默认配置\n``` bash\nnrm ls\n```\n带*号即为当前使用的配置\n```\n  npm ---- https://registry.npmjs.org/\n* cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n```\n## 也可以直接用current命令查看当前使用的是哪个源\n``` bash\nnrm current\n```\n## 使用nrm切换源\n切到源http://registry.mirror.cqupt.edu.cn 命令：nrm use 源的别名，即\n``` bash\nnrm use rednpm\n```\n查看*变化了位置\n```\n  npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n* rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n```\n## 用nrm add 命令添加公司私有npm源\n如http://test.jd.com (肯定不能暴露公司的私有源，这里代替的)，起个别名叫jd\n``` bash\nnrm add jd http://test.jd.com\n```\n执行成功提示\n```\nadd registry jd success\n```\n接着查看nrm配置，发现最底部jd添加成功\n```\n  npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n* rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n  jd ----- https://test.jd.com/\n```\n需要用use去指向\n``` bash\nnrm use jd\n```\n看看ls\n```\n  npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n* jd - http://registry.m.jd.com/\n```\n## 可以用test测试速度，我们来测试cnpm的速度\n``` bash\nnrm test cnpm\nnrm test npm\n```\n输出：\n```\ncnpm --- 1095ms\nnpm ---- 1241ms\n```\n做做对比，npm还是慢\n\n## 删除源用del\n``` bash\nnrm del jd\n```\n由于你选中的是这个源，删除之后会自动替换\n```\n⸨░░░░░░░░░░░░░░░░░░⸩ ⠙ :\n    delete registry jd success\n\n                        \n\n   Registry has been set to: https://registry.npmjs.org/\n```\n再看看ls\n```\n* npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n```\n已经到最上面的源取了","slug":"nrm","published":1,"updated":"2019-07-19T06:47:22.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck01v9ugx00023si2vp6bqhfr","content":"<p>nrm是专门用来管理和快速切换私人配置的registry</p>\n<h1 id=\"全局安装nrm\"><a href=\"#全局安装nrm\" class=\"headerlink\" title=\"全局安装nrm\"></a>全局安装nrm</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i nrm -g</span><br></pre></td></tr></table></figure>\n<p>如果是unix系统，比如mac或者其他linux，需要添加sudo，然后还要输入密码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm i nrm -g</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"nrm有一些默认配置，用nrm-ls命令查看默认配置\"><a href=\"#nrm有一些默认配置，用nrm-ls命令查看默认配置\" class=\"headerlink\" title=\"nrm有一些默认配置，用nrm ls命令查看默认配置\"></a>nrm有一些默认配置，用nrm ls命令查看默认配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm ls</span><br></pre></td></tr></table></figure>\n<p>带*号即为当前使用的配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">* cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"也可以直接用current命令查看当前使用的是哪个源\"><a href=\"#也可以直接用current命令查看当前使用的是哪个源\" class=\"headerlink\" title=\"也可以直接用current命令查看当前使用的是哪个源\"></a>也可以直接用current命令查看当前使用的是哪个源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm current</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用nrm切换源\"><a href=\"#使用nrm切换源\" class=\"headerlink\" title=\"使用nrm切换源\"></a>使用nrm切换源</h2><p>切到源<a href=\"http://registry.mirror.cqupt.edu.cn\" target=\"_blank\" rel=\"noopener\">http://registry.mirror.cqupt.edu.cn</a> 命令：nrm use 源的别名，即<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm use rednpm</span><br></pre></td></tr></table></figure></p>\n<p>查看*变化了位置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">* rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"用nrm-add-命令添加公司私有npm源\"><a href=\"#用nrm-add-命令添加公司私有npm源\" class=\"headerlink\" title=\"用nrm add 命令添加公司私有npm源\"></a>用nrm add 命令添加公司私有npm源</h2><p>如<a href=\"http://test.jd.com\" target=\"_blank\" rel=\"noopener\">http://test.jd.com</a> (肯定不能暴露公司的私有源，这里代替的)，起个别名叫jd<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm add jd http://test.jd.com</span><br></pre></td></tr></table></figure></p>\n<p>执行成功提示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add registry jd success</span><br></pre></td></tr></table></figure></p>\n<p>接着查看nrm配置，发现最底部jd添加成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">* rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br><span class=\"line\">  jd ----- https://test.jd.com/</span><br></pre></td></tr></table></figure></p>\n<p>需要用use去指向<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm use jd</span><br></pre></td></tr></table></figure></p>\n<p>看看ls<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br><span class=\"line\">* jd - http://registry.m.jd.com/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"可以用test测试速度，我们来测试cnpm的速度\"><a href=\"#可以用test测试速度，我们来测试cnpm的速度\" class=\"headerlink\" title=\"可以用test测试速度，我们来测试cnpm的速度\"></a>可以用test测试速度，我们来测试cnpm的速度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm <span class=\"built_in\">test</span> cnpm</span><br><span class=\"line\">nrm <span class=\"built_in\">test</span> npm</span><br></pre></td></tr></table></figure>\n<p>输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm --- 1095ms</span><br><span class=\"line\">npm ---- 1241ms</span><br></pre></td></tr></table></figure></p>\n<p>做做对比，npm还是慢</p>\n<h2 id=\"删除源用del\"><a href=\"#删除源用del\" class=\"headerlink\" title=\"删除源用del\"></a>删除源用del</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm del jd</span><br></pre></td></tr></table></figure>\n<p>由于你选中的是这个源，删除之后会自动替换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">⸨░░░░░░░░░░░░░░░░░░⸩ ⠙ :</span><br><span class=\"line\">    delete registry jd success</span><br><span class=\"line\"></span><br><span class=\"line\">                        </span><br><span class=\"line\"></span><br><span class=\"line\">   Registry has been set to: https://registry.npmjs.org/</span><br></pre></td></tr></table></figure></p>\n<p>再看看ls<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure></p>\n<p>已经到最上面的源取了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>nrm是专门用来管理和快速切换私人配置的registry</p>\n<h1 id=\"全局安装nrm\"><a href=\"#全局安装nrm\" class=\"headerlink\" title=\"全局安装nrm\"></a>全局安装nrm</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i nrm -g</span><br></pre></td></tr></table></figure>\n<p>如果是unix系统，比如mac或者其他linux，需要添加sudo，然后还要输入密码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm i nrm -g</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"nrm有一些默认配置，用nrm-ls命令查看默认配置\"><a href=\"#nrm有一些默认配置，用nrm-ls命令查看默认配置\" class=\"headerlink\" title=\"nrm有一些默认配置，用nrm ls命令查看默认配置\"></a>nrm有一些默认配置，用nrm ls命令查看默认配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm ls</span><br></pre></td></tr></table></figure>\n<p>带*号即为当前使用的配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">* cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"也可以直接用current命令查看当前使用的是哪个源\"><a href=\"#也可以直接用current命令查看当前使用的是哪个源\" class=\"headerlink\" title=\"也可以直接用current命令查看当前使用的是哪个源\"></a>也可以直接用current命令查看当前使用的是哪个源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm current</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用nrm切换源\"><a href=\"#使用nrm切换源\" class=\"headerlink\" title=\"使用nrm切换源\"></a>使用nrm切换源</h2><p>切到源<a href=\"http://registry.mirror.cqupt.edu.cn\" target=\"_blank\" rel=\"noopener\">http://registry.mirror.cqupt.edu.cn</a> 命令：nrm use 源的别名，即<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm use rednpm</span><br></pre></td></tr></table></figure></p>\n<p>查看*变化了位置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">* rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"用nrm-add-命令添加公司私有npm源\"><a href=\"#用nrm-add-命令添加公司私有npm源\" class=\"headerlink\" title=\"用nrm add 命令添加公司私有npm源\"></a>用nrm add 命令添加公司私有npm源</h2><p>如<a href=\"http://test.jd.com\" target=\"_blank\" rel=\"noopener\">http://test.jd.com</a> (肯定不能暴露公司的私有源，这里代替的)，起个别名叫jd<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm add jd http://test.jd.com</span><br></pre></td></tr></table></figure></p>\n<p>执行成功提示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add registry jd success</span><br></pre></td></tr></table></figure></p>\n<p>接着查看nrm配置，发现最底部jd添加成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">* rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br><span class=\"line\">  jd ----- https://test.jd.com/</span><br></pre></td></tr></table></figure></p>\n<p>需要用use去指向<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm use jd</span><br></pre></td></tr></table></figure></p>\n<p>看看ls<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br><span class=\"line\">* jd - http://registry.m.jd.com/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"可以用test测试速度，我们来测试cnpm的速度\"><a href=\"#可以用test测试速度，我们来测试cnpm的速度\" class=\"headerlink\" title=\"可以用test测试速度，我们来测试cnpm的速度\"></a>可以用test测试速度，我们来测试cnpm的速度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm <span class=\"built_in\">test</span> cnpm</span><br><span class=\"line\">nrm <span class=\"built_in\">test</span> npm</span><br></pre></td></tr></table></figure>\n<p>输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm --- 1095ms</span><br><span class=\"line\">npm ---- 1241ms</span><br></pre></td></tr></table></figure></p>\n<p>做做对比，npm还是慢</p>\n<h2 id=\"删除源用del\"><a href=\"#删除源用del\" class=\"headerlink\" title=\"删除源用del\"></a>删除源用del</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm del jd</span><br></pre></td></tr></table></figure>\n<p>由于你选中的是这个源，删除之后会自动替换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">⸨░░░░░░░░░░░░░░░░░░⸩ ⠙ :</span><br><span class=\"line\">    delete registry jd success</span><br><span class=\"line\"></span><br><span class=\"line\">                        </span><br><span class=\"line\"></span><br><span class=\"line\">   Registry has been set to: https://registry.npmjs.org/</span><br></pre></td></tr></table></figure></p>\n<p>再看看ls<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure></p>\n<p>已经到最上面的源取了</p>\n"},{"title":"Hello World","date":"2019-02-01T03:52:58.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2019-02-01 11:52:58\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2019-07-25T10:46:57.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck01v9uh000043si2s7aptpa8","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"语法规范","date":"2019-07-24T03:52:58.000Z","_content":"\n语法规范  \n> syntax  \n> 英 [ˈsɪntæks] 美 [ˈsɪntæks]  \n> n.句法; 句法规则[分析]; 语构; 语法;  \n\n计算机里，经常出现这个错误，就是语法错误，一般来说就是自己写的不符合这种编程的语法\n```js\nconst if = 123;// SyntaxError: Unexpected token if\n{}.a;//SyntaxError: Unexpected token .\na()a;//SyntaxError: Unexpected identifier\nif()a;//SyntaxError: Unexpected token )\n……\n```\n--------------\n# ESLint\n有些规范建议直接在eslint设置规范  \n错误等级有的地方用的是数字，可以参考一下  \n> \"off\" 或者 0：关闭规则。  \n> \"warn\" 或者 1：打开规则，并且作为一个警告（不影响exit code）。  \n> \"error\" 或者 2：打开规则，并且作为一个错误（exit code将会是1）。  \n```js\n{\n  rules: {\n    'indent': [2, 2, {\n      'SwitchCase': 1\n    }],\n    'semi': [2, 'always'],\n  }\n}\n```\n如果想在vscode自动语法提示中标注错误和警告，需要在setting里面添加\n```json\n{\n  \"eslint.validate\": [\n    \"javascript\",{\n      \"language\": \"vue\"\n    },\"html\",\n    \"vue\"\n  ]\n}\n```\n## indent 缩进\n> indent  \n> 英 [ɪnˈdent]   美 [ɪnˈdent]  \n> vt.  切割…使呈锯齿状; 缩进排版;  \n常用方式有\n1. 一个tab（制表）\n```js\nif(true){\n/*tab*/console.log(\"exec\");\n}\n```\n2. 四个space（空格）\n```js\nif(true){\n    console.log(\"exec\");\n}\n```\n3. 两个space\n```js\nif(true){\n  console.log(\"exec\");\n}\n```\n建议使用两个空格，理由是\n* 用两个空格的人很多，并且在逐渐增加\n* 层级多了，也只是一层2个，不会让横向过长\n\n**eslint参数为**\n```js\n{\n  \"indent\": [\"error\", 2]\n}\n```\n## 分号\n> semicolon  \n> 英 [ˌsemiˈkəʊlən]   美 [ˈsemikoʊlən]  \n> n. 分号;   \n建议加分号，因为在很多情况下会有问题，尤其ASI\n```js\na = b + c\n(d + e).print()\n// 会解析成下面的\na = b + c(d + e).print();\n//-------------\na = b\n/hi/g.exec(c).map(d)\n// 会解析成下面的\na = b / hi / g.exec(c).map(d);\n//-------------\nsomeFunction()\n['ul', 'ol'].map(x => x + x)\n// 会解析成下面的\nconst propKey = ('ul','ol'); // comma operator\nassert.equal(propKey, 'ol');\nsomeFunction()[propKey].map(x => x + x);\n```\n**eslint参数为**\n```js\n{\n  'semi': ['error', 'always']\n}\n```\n# 命名\n## 变量以及属性的命名规则\n必须是统一码(Unicode)\n+ 字母:a-z,A-Z等\n+ “$”(美元符号)和“_”(下划线)\n  + “-”(横杠)不能用\n+ 数字:0-9等\n  + 不能以数字不能开头  \n```js\nconst строка = '';\nconst ε = 0.0001;\nlet 变量 = 0.0001;\nlet _tmp = 0;\nconst $foo2 = true;\nlet 0a = 1;// SyntaxError: Invalid or unexpected token\nlet a-b = 1;// SyntaxError: Unexpected token -\n```\n*小贴士*：\n不能用预留关键字做变量,比如if,ture,const  \n但是可以做属性\n```js\nconst if = 123;// SyntaxError: Unexpected token if\nconst obj = { if: 123 };\nobj.if// 123\n```\n所有js预留关键字\n```\nawait break case catch class const continue debugger default delete do else export extends finally for function if import in instanceof let new return static super switch this throw try typeof var void while with yield\n```\n没有在js中使用，但是也预留的关键字\n```\nenum implements package protected interface private public\n```\n不是预留但是也要避免，他们本来就已经定义了关键字\n```\nInfinity NaN undefined async\n```\n虽然可以用，但是要避免用全局变量作为局部变量\n```\nString, Math, etc.\n```\n## 变量样式\n+ 驼峰: threeConcatenatedWords\n  + Camel case\n+ 下划线(蛇形): three_concatenated_words\n  + Underscore case (also called snake case)\n+ 横线(肉串): three-concatenated-words\n  + Dash case (also called kebab case)\n\n我们变量一般选用驼峰，因为看起来简洁，也比下划线少打一些字  \n文件名，我们选择用横线，因为windows不区分大小写，比如git上提交的两个文件是myFile和myfile，在unix类的系统没事，但是在windows下会报错\n```ssh\nmy-module.js\n```\n## 大小写\n首字母小写\n```js\nlet myVar;// 变量\nfunction myFunction(){}// 函数\nlet obj = {};\nobj.myMethod// 方法\n```\n首字母大写\n```js\nclass MyClass {}// 类\n```\n大写加下划线\n```js\nconst EVENT_START = \"事件开始\"// 常量\n```\ncss请用肉串样式\n```css\nspecial-class:{}\n```\n```html\n<div class=\"special-class\"></div>\n```\nhtml标签以及属性也请用肉串样式\n```html\n<common-tree :section-name=\"remote.tree.sectionName\">\n  <div>...</div>\n<common-tree>\n```\n## 下划线\n成员变量\n```js\nclass MyClass{\n  construct(\n    this._memberVar = 1;\n  );\n}\n```\n实体元素写两个下划线，就是在场景中实际存在的内容\n```js\nclass MyClass{\n  construct(\n    this.__element = document.getElementById(\"elementID\");\n  );\n}\n```\n## 命名规范\n以下所有命名注意语义化，禁止使用a,b,name1,name2,拼音等命名方法\n1. 前缀应当为动词\n2. 可使用常见动词约定\n\n前缀 | 示例 | 作用 | 返回\n---------| ---------| ---------| -------------\ncan | canRead | 判断是否可执行某个动作(权限) | 函数返回一个布尔值。true：可执行；false：不可执行\nhas | hasTag | 判断是否含有某个值 | 函数返回一个布尔值。true：含有此值；false：不含有此值\nis | isExpire | 判断是否为某个值 | 函数返回一个布尔值。true：为某个值；false：不为某个值\nget | getUserByName | 获取某个值 | 函数返回一个非布尔值\nset | setUserName | 设置某个值 | 无返回值、返回是否设置成功或者返回链式对象\nload | loadImage | 加载某些数据 | 无返回值或者返回是否加载完成的结果\n\n\n# 注释\n## Dom注释\n方便在比较长的标签中，知道标签的开始位置以及结束位置\n```html\n<!-- 文章列表列表模块 开始 -->\n<div class=\"article-list\">\n...\n</div>\n<!-- 文章列表列表模块 结束 -->\n```\n## 函数注释：1.描述，2.入参，出参&类型\n写清楚函数介绍以及参数和返回\n```js\n/**\n * 函数描述\n *\n * @param {string} p1 参数1的说明\n * @param {string} p2 参数2的说明，比较长那就换行了\n * @param {number=} p3 参数3的说明（可选）\n * @return {Object} 返回值描述\n */\nfunction foo(p1, p2, p3) {\n  var p3 = p3 || 10;\n  return {\n    p1: p1,\n    p2: p2,\n    p3: p3\n  };\n}\n```\n## 变量以及逻辑注释\n放在变量后面，比放在前后多更好的可以形容变量\n```js\nlet choices = [];// 模板选择\nfor(const k in tpl){// 把json的键插入数组，用于inquirer的list选择\n  choices.push(k);\n}","source":"_posts/syntax.md","raw":"---\ntitle: 语法规范\ndate: 2019-07-24 11:52:58\ntags:\n---\n\n语法规范  \n> syntax  \n> 英 [ˈsɪntæks] 美 [ˈsɪntæks]  \n> n.句法; 句法规则[分析]; 语构; 语法;  \n\n计算机里，经常出现这个错误，就是语法错误，一般来说就是自己写的不符合这种编程的语法\n```js\nconst if = 123;// SyntaxError: Unexpected token if\n{}.a;//SyntaxError: Unexpected token .\na()a;//SyntaxError: Unexpected identifier\nif()a;//SyntaxError: Unexpected token )\n……\n```\n--------------\n# ESLint\n有些规范建议直接在eslint设置规范  \n错误等级有的地方用的是数字，可以参考一下  \n> \"off\" 或者 0：关闭规则。  \n> \"warn\" 或者 1：打开规则，并且作为一个警告（不影响exit code）。  \n> \"error\" 或者 2：打开规则，并且作为一个错误（exit code将会是1）。  \n```js\n{\n  rules: {\n    'indent': [2, 2, {\n      'SwitchCase': 1\n    }],\n    'semi': [2, 'always'],\n  }\n}\n```\n如果想在vscode自动语法提示中标注错误和警告，需要在setting里面添加\n```json\n{\n  \"eslint.validate\": [\n    \"javascript\",{\n      \"language\": \"vue\"\n    },\"html\",\n    \"vue\"\n  ]\n}\n```\n## indent 缩进\n> indent  \n> 英 [ɪnˈdent]   美 [ɪnˈdent]  \n> vt.  切割…使呈锯齿状; 缩进排版;  \n常用方式有\n1. 一个tab（制表）\n```js\nif(true){\n/*tab*/console.log(\"exec\");\n}\n```\n2. 四个space（空格）\n```js\nif(true){\n    console.log(\"exec\");\n}\n```\n3. 两个space\n```js\nif(true){\n  console.log(\"exec\");\n}\n```\n建议使用两个空格，理由是\n* 用两个空格的人很多，并且在逐渐增加\n* 层级多了，也只是一层2个，不会让横向过长\n\n**eslint参数为**\n```js\n{\n  \"indent\": [\"error\", 2]\n}\n```\n## 分号\n> semicolon  \n> 英 [ˌsemiˈkəʊlən]   美 [ˈsemikoʊlən]  \n> n. 分号;   \n建议加分号，因为在很多情况下会有问题，尤其ASI\n```js\na = b + c\n(d + e).print()\n// 会解析成下面的\na = b + c(d + e).print();\n//-------------\na = b\n/hi/g.exec(c).map(d)\n// 会解析成下面的\na = b / hi / g.exec(c).map(d);\n//-------------\nsomeFunction()\n['ul', 'ol'].map(x => x + x)\n// 会解析成下面的\nconst propKey = ('ul','ol'); // comma operator\nassert.equal(propKey, 'ol');\nsomeFunction()[propKey].map(x => x + x);\n```\n**eslint参数为**\n```js\n{\n  'semi': ['error', 'always']\n}\n```\n# 命名\n## 变量以及属性的命名规则\n必须是统一码(Unicode)\n+ 字母:a-z,A-Z等\n+ “$”(美元符号)和“_”(下划线)\n  + “-”(横杠)不能用\n+ 数字:0-9等\n  + 不能以数字不能开头  \n```js\nconst строка = '';\nconst ε = 0.0001;\nlet 变量 = 0.0001;\nlet _tmp = 0;\nconst $foo2 = true;\nlet 0a = 1;// SyntaxError: Invalid or unexpected token\nlet a-b = 1;// SyntaxError: Unexpected token -\n```\n*小贴士*：\n不能用预留关键字做变量,比如if,ture,const  \n但是可以做属性\n```js\nconst if = 123;// SyntaxError: Unexpected token if\nconst obj = { if: 123 };\nobj.if// 123\n```\n所有js预留关键字\n```\nawait break case catch class const continue debugger default delete do else export extends finally for function if import in instanceof let new return static super switch this throw try typeof var void while with yield\n```\n没有在js中使用，但是也预留的关键字\n```\nenum implements package protected interface private public\n```\n不是预留但是也要避免，他们本来就已经定义了关键字\n```\nInfinity NaN undefined async\n```\n虽然可以用，但是要避免用全局变量作为局部变量\n```\nString, Math, etc.\n```\n## 变量样式\n+ 驼峰: threeConcatenatedWords\n  + Camel case\n+ 下划线(蛇形): three_concatenated_words\n  + Underscore case (also called snake case)\n+ 横线(肉串): three-concatenated-words\n  + Dash case (also called kebab case)\n\n我们变量一般选用驼峰，因为看起来简洁，也比下划线少打一些字  \n文件名，我们选择用横线，因为windows不区分大小写，比如git上提交的两个文件是myFile和myfile，在unix类的系统没事，但是在windows下会报错\n```ssh\nmy-module.js\n```\n## 大小写\n首字母小写\n```js\nlet myVar;// 变量\nfunction myFunction(){}// 函数\nlet obj = {};\nobj.myMethod// 方法\n```\n首字母大写\n```js\nclass MyClass {}// 类\n```\n大写加下划线\n```js\nconst EVENT_START = \"事件开始\"// 常量\n```\ncss请用肉串样式\n```css\nspecial-class:{}\n```\n```html\n<div class=\"special-class\"></div>\n```\nhtml标签以及属性也请用肉串样式\n```html\n<common-tree :section-name=\"remote.tree.sectionName\">\n  <div>...</div>\n<common-tree>\n```\n## 下划线\n成员变量\n```js\nclass MyClass{\n  construct(\n    this._memberVar = 1;\n  );\n}\n```\n实体元素写两个下划线，就是在场景中实际存在的内容\n```js\nclass MyClass{\n  construct(\n    this.__element = document.getElementById(\"elementID\");\n  );\n}\n```\n## 命名规范\n以下所有命名注意语义化，禁止使用a,b,name1,name2,拼音等命名方法\n1. 前缀应当为动词\n2. 可使用常见动词约定\n\n前缀 | 示例 | 作用 | 返回\n---------| ---------| ---------| -------------\ncan | canRead | 判断是否可执行某个动作(权限) | 函数返回一个布尔值。true：可执行；false：不可执行\nhas | hasTag | 判断是否含有某个值 | 函数返回一个布尔值。true：含有此值；false：不含有此值\nis | isExpire | 判断是否为某个值 | 函数返回一个布尔值。true：为某个值；false：不为某个值\nget | getUserByName | 获取某个值 | 函数返回一个非布尔值\nset | setUserName | 设置某个值 | 无返回值、返回是否设置成功或者返回链式对象\nload | loadImage | 加载某些数据 | 无返回值或者返回是否加载完成的结果\n\n\n# 注释\n## Dom注释\n方便在比较长的标签中，知道标签的开始位置以及结束位置\n```html\n<!-- 文章列表列表模块 开始 -->\n<div class=\"article-list\">\n...\n</div>\n<!-- 文章列表列表模块 结束 -->\n```\n## 函数注释：1.描述，2.入参，出参&类型\n写清楚函数介绍以及参数和返回\n```js\n/**\n * 函数描述\n *\n * @param {string} p1 参数1的说明\n * @param {string} p2 参数2的说明，比较长那就换行了\n * @param {number=} p3 参数3的说明（可选）\n * @return {Object} 返回值描述\n */\nfunction foo(p1, p2, p3) {\n  var p3 = p3 || 10;\n  return {\n    p1: p1,\n    p2: p2,\n    p3: p3\n  };\n}\n```\n## 变量以及逻辑注释\n放在变量后面，比放在前后多更好的可以形容变量\n```js\nlet choices = [];// 模板选择\nfor(const k in tpl){// 把json的键插入数组，用于inquirer的list选择\n  choices.push(k);\n}","slug":"syntax","published":1,"updated":"2019-09-02T03:50:17.269Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck01v9uhb00083si21g355wt8","content":"<p>语法规范  </p>\n<blockquote>\n<p>syntax<br>英 [ˈsɪntæks] 美 [ˈsɪntæks]<br>n.句法; 句法规则[分析]; 语构; 语法;  </p>\n</blockquote>\n<p>计算机里，经常出现这个错误，就是语法错误，一般来说就是自己写的不符合这种编程的语法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">if</span> = <span class=\"number\">123</span>;<span class=\"comment\">// SyntaxError: Unexpected token if</span></span><br><span class=\"line\">&#123;&#125;.a;<span class=\"comment\">//SyntaxError: Unexpected token .</span></span><br><span class=\"line\">a()a;<span class=\"comment\">//SyntaxError: Unexpected identifier</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>()a;<span class=\"comment\">//SyntaxError: Unexpected token )</span></span><br><span class=\"line\">……</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"ESLint\"><a href=\"#ESLint\" class=\"headerlink\" title=\"ESLint\"></a>ESLint</h1><p>有些规范建议直接在eslint设置规范<br>错误等级有的地方用的是数字，可以参考一下  </p>\n<blockquote>\n<p>“off” 或者 0：关闭规则。<br>“warn” 或者 1：打开规则，并且作为一个警告（不影响exit code）。<br>“error” 或者 2：打开规则，并且作为一个错误（exit code将会是1）。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">'indent'</span>: [<span class=\"number\">2</span>, <span class=\"number\">2</span>, &#123;</span><br><span class=\"line\">      <span class=\"string\">'SwitchCase'</span>: <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">'semi'</span>: [<span class=\"number\">2</span>, <span class=\"string\">'always'</span>],</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>如果想在vscode自动语法提示中标注错误和警告，需要在setting里面添加<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"eslint.validate\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"javascript\"</span>,&#123;</span><br><span class=\"line\">      <span class=\"attr\">\"language\"</span>: <span class=\"string\">\"vue\"</span></span><br><span class=\"line\">    &#125;,<span class=\"string\">\"html\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"vue\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"indent-缩进\"><a href=\"#indent-缩进\" class=\"headerlink\" title=\"indent 缩进\"></a>indent 缩进</h2><blockquote>\n<p>indent<br>英 [ɪnˈdent]   美 [ɪnˈdent]<br>vt.  切割…使呈锯齿状; 缩进排版;<br>常用方式有</p>\n<ol>\n<li>一个tab（制表）<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\"><span class=\"comment\">/*tab*/</span><span class=\"built_in\">console</span>.log(<span class=\"string\">\"exec\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<ol start=\"2\">\n<li><p>四个space（空格）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"exec\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>两个space</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"exec\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>建议使用两个空格，理由是</p>\n<ul>\n<li>用两个空格的人很多，并且在逐渐增加</li>\n<li>层级多了，也只是一层2个，不会让横向过长</li>\n</ul>\n<p><strong>eslint参数为</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"indent\"</span>: [<span class=\"string\">\"error\"</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"分号\"><a href=\"#分号\" class=\"headerlink\" title=\"分号\"></a>分号</h2><blockquote>\n<p>semicolon<br>英 [ˌsemiˈkəʊlən]   美 [ˈsemikoʊlən]<br>n. 分号;<br>建议加分号，因为在很多情况下会有问题，尤其ASI<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = b + c</span><br><span class=\"line\">(d + e).print()</span><br><span class=\"line\"><span class=\"comment\">// 会解析成下面的</span></span><br><span class=\"line\">a = b + c(d + e).print();</span><br><span class=\"line\"><span class=\"comment\">//-------------</span></span><br><span class=\"line\">a = b</span><br><span class=\"line\">/hi/g.exec(c).map(d)</span><br><span class=\"line\"><span class=\"comment\">// 会解析成下面的</span></span><br><span class=\"line\">a = b / hi / g.exec(c).map(d);</span><br><span class=\"line\"><span class=\"comment\">//-------------</span></span><br><span class=\"line\">someFunction()</span><br><span class=\"line\">[<span class=\"string\">'ul'</span>, <span class=\"string\">'ol'</span>].map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x + x)</span><br><span class=\"line\"><span class=\"comment\">// 会解析成下面的</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> propKey = (<span class=\"string\">'ul'</span>,<span class=\"string\">'ol'</span>); <span class=\"comment\">// comma operator</span></span><br><span class=\"line\">assert.equal(propKey, <span class=\"string\">'ol'</span>);</span><br><span class=\"line\">someFunction()[propKey].map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x + x);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>eslint参数为</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'semi'</span>: [<span class=\"string\">'error'</span>, <span class=\"string\">'always'</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h1><h2 id=\"变量以及属性的命名规则\"><a href=\"#变量以及属性的命名规则\" class=\"headerlink\" title=\"变量以及属性的命名规则\"></a>变量以及属性的命名规则</h2><p>必须是统一码(Unicode)</p>\n<ul>\n<li>字母:a-z,A-Z等</li>\n<li>“$”(美元符号)和“_”(下划线)<ul>\n<li>“-”(横杠)不能用</li>\n</ul>\n</li>\n<li>数字:0-9等<ul>\n<li>不能以数字不能开头  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> строка = <span class=\"string\">''</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ε = <span class=\"number\">0.0001</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> 变量 = <span class=\"number\">0.0001</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> _tmp = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> $foo2 = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"number\">0</span>a = <span class=\"number\">1</span>;<span class=\"comment\">// SyntaxError: Invalid or unexpected token</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a-b = <span class=\"number\">1</span>;<span class=\"comment\">// SyntaxError: Unexpected token -</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><em>小贴士</em>：<br>不能用预留关键字做变量,比如if,ture,const<br>但是可以做属性<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">if</span> = <span class=\"number\">123</span>;<span class=\"comment\">// SyntaxError: Unexpected token if</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123; <span class=\"attr\">if</span>: <span class=\"number\">123</span> &#125;;</span><br><span class=\"line\">obj.if<span class=\"comment\">// 123</span></span><br></pre></td></tr></table></figure></p>\n<p>所有js预留关键字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">await break case catch class const continue debugger default delete do else export extends finally for function if import in instanceof let new return static super switch this throw try typeof var void while with yield</span><br></pre></td></tr></table></figure></p>\n<p>没有在js中使用，但是也预留的关键字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum implements package protected interface private public</span><br></pre></td></tr></table></figure></p>\n<p>不是预留但是也要避免，他们本来就已经定义了关键字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Infinity NaN undefined async</span><br></pre></td></tr></table></figure></p>\n<p>虽然可以用，但是要避免用全局变量作为局部变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String, Math, etc.</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"变量样式\"><a href=\"#变量样式\" class=\"headerlink\" title=\"变量样式\"></a>变量样式</h2><ul>\n<li>驼峰: threeConcatenatedWords<ul>\n<li>Camel case</li>\n</ul>\n</li>\n<li>下划线(蛇形): three_concatenated_words<ul>\n<li>Underscore case (also called snake case)</li>\n</ul>\n</li>\n<li>横线(肉串): three-concatenated-words<ul>\n<li>Dash case (also called kebab case)</li>\n</ul>\n</li>\n</ul>\n<p>我们变量一般选用驼峰，因为看起来简洁，也比下划线少打一些字<br>文件名，我们选择用横线，因为windows不区分大小写，比如git上提交的两个文件是myFile和myfile，在unix类的系统没事，但是在windows下会报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my-module.js</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"大小写\"><a href=\"#大小写\" class=\"headerlink\" title=\"大小写\"></a>大小写</h2><p>首字母小写<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myVar;<span class=\"comment\">// 变量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunction</span>(<span class=\"params\"></span>)</span>&#123;&#125;<span class=\"comment\">// 函数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\">obj.myMethod<span class=\"comment\">// 方法</span></span><br></pre></td></tr></table></figure></p>\n<p>首字母大写<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span> </span>&#123;&#125;<span class=\"comment\">// 类</span></span><br></pre></td></tr></table></figure></p>\n<p>大写加下划线<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> EVENT_START = <span class=\"string\">\"事件开始\"</span><span class=\"comment\">// 常量</span></span><br></pre></td></tr></table></figure></p>\n<p>css请用肉串样式<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">special-class</span>:&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"special-class\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>html标签以及属性也请用肉串样式<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">common-tree</span> <span class=\"attr\">:section-name</span>=<span class=\"string\">\"remote.tree.sectionName\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">common-tree</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h2><p>成员变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span>&#123;</span><br><span class=\"line\">  construct(</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._memberVar = <span class=\"number\">1</span>;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>实体元素写两个下划线，就是在场景中实际存在的内容<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span>&#123;</span><br><span class=\"line\">  construct(</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.__element = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"elementID\"</span>);</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"命名规范\"><a href=\"#命名规范\" class=\"headerlink\" title=\"命名规范\"></a>命名规范</h2><p>以下所有命名注意语义化，禁止使用a,b,name1,name2,拼音等命名方法</p>\n<ol>\n<li>前缀应当为动词</li>\n<li>可使用常见动词约定</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>前缀</th>\n<th>示例</th>\n<th>作用</th>\n<th>返回</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>can</td>\n<td>canRead</td>\n<td>判断是否可执行某个动作(权限)</td>\n<td>函数返回一个布尔值。true：可执行；false：不可执行</td>\n</tr>\n<tr>\n<td>has</td>\n<td>hasTag</td>\n<td>判断是否含有某个值</td>\n<td>函数返回一个布尔值。true：含有此值；false：不含有此值</td>\n</tr>\n<tr>\n<td>is</td>\n<td>isExpire</td>\n<td>判断是否为某个值</td>\n<td>函数返回一个布尔值。true：为某个值；false：不为某个值</td>\n</tr>\n<tr>\n<td>get</td>\n<td>getUserByName</td>\n<td>获取某个值</td>\n<td>函数返回一个非布尔值</td>\n</tr>\n<tr>\n<td>set</td>\n<td>setUserName</td>\n<td>设置某个值</td>\n<td>无返回值、返回是否设置成功或者返回链式对象</td>\n</tr>\n<tr>\n<td>load</td>\n<td>loadImage</td>\n<td>加载某些数据</td>\n<td>无返回值或者返回是否加载完成的结果</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><h2 id=\"Dom注释\"><a href=\"#Dom注释\" class=\"headerlink\" title=\"Dom注释\"></a>Dom注释</h2><p>方便在比较长的标签中，知道标签的开始位置以及结束位置<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 文章列表列表模块 开始 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"article-list\"</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 文章列表列表模块 结束 --&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"函数注释：1-描述，2-入参，出参-amp-类型\"><a href=\"#函数注释：1-描述，2-入参，出参-amp-类型\" class=\"headerlink\" title=\"函数注释：1.描述，2.入参，出参&amp;类型\"></a>函数注释：1.描述，2.入参，出参&amp;类型</h2><p>写清楚函数介绍以及参数和返回<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 函数描述</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;string&#125; p1 参数1的说明</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;string&#125; p2 参数2的说明，比较长那就换行了</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number=&#125; p3 参数3的说明（可选）</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;Object&#125; 返回值描述</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">p1, p2, p3</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> p3 = p3 || <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    p1: p1,</span><br><span class=\"line\">    p2: p2,</span><br><span class=\"line\">    p3: p3</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"变量以及逻辑注释\"><a href=\"#变量以及逻辑注释\" class=\"headerlink\" title=\"变量以及逻辑注释\"></a>变量以及逻辑注释</h2><p>放在变量后面，比放在前后多更好的可以形容变量<br><code>`</code>js<br>let choices = [];// 模板选择<br>for(const k in tpl){// 把json的键插入数组，用于inquirer的list选择<br>  choices.push(k);<br>}</p>\n","site":{"data":{}},"excerpt":"","more":"<p>语法规范  </p>\n<blockquote>\n<p>syntax<br>英 [ˈsɪntæks] 美 [ˈsɪntæks]<br>n.句法; 句法规则[分析]; 语构; 语法;  </p>\n</blockquote>\n<p>计算机里，经常出现这个错误，就是语法错误，一般来说就是自己写的不符合这种编程的语法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">if</span> = <span class=\"number\">123</span>;<span class=\"comment\">// SyntaxError: Unexpected token if</span></span><br><span class=\"line\">&#123;&#125;.a;<span class=\"comment\">//SyntaxError: Unexpected token .</span></span><br><span class=\"line\">a()a;<span class=\"comment\">//SyntaxError: Unexpected identifier</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>()a;<span class=\"comment\">//SyntaxError: Unexpected token )</span></span><br><span class=\"line\">……</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"ESLint\"><a href=\"#ESLint\" class=\"headerlink\" title=\"ESLint\"></a>ESLint</h1><p>有些规范建议直接在eslint设置规范<br>错误等级有的地方用的是数字，可以参考一下  </p>\n<blockquote>\n<p>“off” 或者 0：关闭规则。<br>“warn” 或者 1：打开规则，并且作为一个警告（不影响exit code）。<br>“error” 或者 2：打开规则，并且作为一个错误（exit code将会是1）。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">'indent'</span>: [<span class=\"number\">2</span>, <span class=\"number\">2</span>, &#123;</span><br><span class=\"line\">      <span class=\"string\">'SwitchCase'</span>: <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">'semi'</span>: [<span class=\"number\">2</span>, <span class=\"string\">'always'</span>],</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>如果想在vscode自动语法提示中标注错误和警告，需要在setting里面添加<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"eslint.validate\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"javascript\"</span>,&#123;</span><br><span class=\"line\">      <span class=\"attr\">\"language\"</span>: <span class=\"string\">\"vue\"</span></span><br><span class=\"line\">    &#125;,<span class=\"string\">\"html\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"vue\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"indent-缩进\"><a href=\"#indent-缩进\" class=\"headerlink\" title=\"indent 缩进\"></a>indent 缩进</h2><blockquote>\n<p>indent<br>英 [ɪnˈdent]   美 [ɪnˈdent]<br>vt.  切割…使呈锯齿状; 缩进排版;<br>常用方式有</p>\n<ol>\n<li>一个tab（制表）<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\"><span class=\"comment\">/*tab*/</span><span class=\"built_in\">console</span>.log(<span class=\"string\">\"exec\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<ol start=\"2\">\n<li><p>四个space（空格）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"exec\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>两个space</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"exec\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>建议使用两个空格，理由是</p>\n<ul>\n<li>用两个空格的人很多，并且在逐渐增加</li>\n<li>层级多了，也只是一层2个，不会让横向过长</li>\n</ul>\n<p><strong>eslint参数为</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"indent\"</span>: [<span class=\"string\">\"error\"</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"分号\"><a href=\"#分号\" class=\"headerlink\" title=\"分号\"></a>分号</h2><blockquote>\n<p>semicolon<br>英 [ˌsemiˈkəʊlən]   美 [ˈsemikoʊlən]<br>n. 分号;<br>建议加分号，因为在很多情况下会有问题，尤其ASI<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = b + c</span><br><span class=\"line\">(d + e).print()</span><br><span class=\"line\"><span class=\"comment\">// 会解析成下面的</span></span><br><span class=\"line\">a = b + c(d + e).print();</span><br><span class=\"line\"><span class=\"comment\">//-------------</span></span><br><span class=\"line\">a = b</span><br><span class=\"line\">/hi/g.exec(c).map(d)</span><br><span class=\"line\"><span class=\"comment\">// 会解析成下面的</span></span><br><span class=\"line\">a = b / hi / g.exec(c).map(d);</span><br><span class=\"line\"><span class=\"comment\">//-------------</span></span><br><span class=\"line\">someFunction()</span><br><span class=\"line\">[<span class=\"string\">'ul'</span>, <span class=\"string\">'ol'</span>].map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x + x)</span><br><span class=\"line\"><span class=\"comment\">// 会解析成下面的</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> propKey = (<span class=\"string\">'ul'</span>,<span class=\"string\">'ol'</span>); <span class=\"comment\">// comma operator</span></span><br><span class=\"line\">assert.equal(propKey, <span class=\"string\">'ol'</span>);</span><br><span class=\"line\">someFunction()[propKey].map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x + x);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>eslint参数为</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'semi'</span>: [<span class=\"string\">'error'</span>, <span class=\"string\">'always'</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h1><h2 id=\"变量以及属性的命名规则\"><a href=\"#变量以及属性的命名规则\" class=\"headerlink\" title=\"变量以及属性的命名规则\"></a>变量以及属性的命名规则</h2><p>必须是统一码(Unicode)</p>\n<ul>\n<li>字母:a-z,A-Z等</li>\n<li>“$”(美元符号)和“_”(下划线)<ul>\n<li>“-”(横杠)不能用</li>\n</ul>\n</li>\n<li>数字:0-9等<ul>\n<li>不能以数字不能开头  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> строка = <span class=\"string\">''</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ε = <span class=\"number\">0.0001</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> 变量 = <span class=\"number\">0.0001</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> _tmp = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> $foo2 = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"number\">0</span>a = <span class=\"number\">1</span>;<span class=\"comment\">// SyntaxError: Invalid or unexpected token</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a-b = <span class=\"number\">1</span>;<span class=\"comment\">// SyntaxError: Unexpected token -</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><em>小贴士</em>：<br>不能用预留关键字做变量,比如if,ture,const<br>但是可以做属性<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">if</span> = <span class=\"number\">123</span>;<span class=\"comment\">// SyntaxError: Unexpected token if</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123; <span class=\"attr\">if</span>: <span class=\"number\">123</span> &#125;;</span><br><span class=\"line\">obj.if<span class=\"comment\">// 123</span></span><br></pre></td></tr></table></figure></p>\n<p>所有js预留关键字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">await break case catch class const continue debugger default delete do else export extends finally for function if import in instanceof let new return static super switch this throw try typeof var void while with yield</span><br></pre></td></tr></table></figure></p>\n<p>没有在js中使用，但是也预留的关键字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum implements package protected interface private public</span><br></pre></td></tr></table></figure></p>\n<p>不是预留但是也要避免，他们本来就已经定义了关键字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Infinity NaN undefined async</span><br></pre></td></tr></table></figure></p>\n<p>虽然可以用，但是要避免用全局变量作为局部变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String, Math, etc.</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"变量样式\"><a href=\"#变量样式\" class=\"headerlink\" title=\"变量样式\"></a>变量样式</h2><ul>\n<li>驼峰: threeConcatenatedWords<ul>\n<li>Camel case</li>\n</ul>\n</li>\n<li>下划线(蛇形): three_concatenated_words<ul>\n<li>Underscore case (also called snake case)</li>\n</ul>\n</li>\n<li>横线(肉串): three-concatenated-words<ul>\n<li>Dash case (also called kebab case)</li>\n</ul>\n</li>\n</ul>\n<p>我们变量一般选用驼峰，因为看起来简洁，也比下划线少打一些字<br>文件名，我们选择用横线，因为windows不区分大小写，比如git上提交的两个文件是myFile和myfile，在unix类的系统没事，但是在windows下会报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my-module.js</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"大小写\"><a href=\"#大小写\" class=\"headerlink\" title=\"大小写\"></a>大小写</h2><p>首字母小写<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myVar;<span class=\"comment\">// 变量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunction</span>(<span class=\"params\"></span>)</span>&#123;&#125;<span class=\"comment\">// 函数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\">obj.myMethod<span class=\"comment\">// 方法</span></span><br></pre></td></tr></table></figure></p>\n<p>首字母大写<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span> </span>&#123;&#125;<span class=\"comment\">// 类</span></span><br></pre></td></tr></table></figure></p>\n<p>大写加下划线<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> EVENT_START = <span class=\"string\">\"事件开始\"</span><span class=\"comment\">// 常量</span></span><br></pre></td></tr></table></figure></p>\n<p>css请用肉串样式<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">special-class</span>:&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"special-class\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>html标签以及属性也请用肉串样式<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">common-tree</span> <span class=\"attr\">:section-name</span>=<span class=\"string\">\"remote.tree.sectionName\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">common-tree</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h2><p>成员变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span>&#123;</span><br><span class=\"line\">  construct(</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._memberVar = <span class=\"number\">1</span>;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>实体元素写两个下划线，就是在场景中实际存在的内容<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span>&#123;</span><br><span class=\"line\">  construct(</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.__element = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"elementID\"</span>);</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"命名规范\"><a href=\"#命名规范\" class=\"headerlink\" title=\"命名规范\"></a>命名规范</h2><p>以下所有命名注意语义化，禁止使用a,b,name1,name2,拼音等命名方法</p>\n<ol>\n<li>前缀应当为动词</li>\n<li>可使用常见动词约定</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>前缀</th>\n<th>示例</th>\n<th>作用</th>\n<th>返回</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>can</td>\n<td>canRead</td>\n<td>判断是否可执行某个动作(权限)</td>\n<td>函数返回一个布尔值。true：可执行；false：不可执行</td>\n</tr>\n<tr>\n<td>has</td>\n<td>hasTag</td>\n<td>判断是否含有某个值</td>\n<td>函数返回一个布尔值。true：含有此值；false：不含有此值</td>\n</tr>\n<tr>\n<td>is</td>\n<td>isExpire</td>\n<td>判断是否为某个值</td>\n<td>函数返回一个布尔值。true：为某个值；false：不为某个值</td>\n</tr>\n<tr>\n<td>get</td>\n<td>getUserByName</td>\n<td>获取某个值</td>\n<td>函数返回一个非布尔值</td>\n</tr>\n<tr>\n<td>set</td>\n<td>setUserName</td>\n<td>设置某个值</td>\n<td>无返回值、返回是否设置成功或者返回链式对象</td>\n</tr>\n<tr>\n<td>load</td>\n<td>loadImage</td>\n<td>加载某些数据</td>\n<td>无返回值或者返回是否加载完成的结果</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><h2 id=\"Dom注释\"><a href=\"#Dom注释\" class=\"headerlink\" title=\"Dom注释\"></a>Dom注释</h2><p>方便在比较长的标签中，知道标签的开始位置以及结束位置<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 文章列表列表模块 开始 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"article-list\"</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 文章列表列表模块 结束 --&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"函数注释：1-描述，2-入参，出参-amp-类型\"><a href=\"#函数注释：1-描述，2-入参，出参-amp-类型\" class=\"headerlink\" title=\"函数注释：1.描述，2.入参，出参&amp;类型\"></a>函数注释：1.描述，2.入参，出参&amp;类型</h2><p>写清楚函数介绍以及参数和返回<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 函数描述</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;string&#125; p1 参数1的说明</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;string&#125; p2 参数2的说明，比较长那就换行了</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number=&#125; p3 参数3的说明（可选）</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;Object&#125; 返回值描述</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">p1, p2, p3</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> p3 = p3 || <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    p1: p1,</span><br><span class=\"line\">    p2: p2,</span><br><span class=\"line\">    p3: p3</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"变量以及逻辑注释\"><a href=\"#变量以及逻辑注释\" class=\"headerlink\" title=\"变量以及逻辑注释\"></a>变量以及逻辑注释</h2><p>放在变量后面，比放在前后多更好的可以形容变量<br><code>`</code>js<br>let choices = [];// 模板选择<br>for(const k in tpl){// 把json的键插入数组，用于inquirer的list选择<br>  choices.push(k);<br>}</p>\n"},{"title":"eslint完整解析","date":"2019-09-02T03:35:33.000Z","_content":"# ESLint配置详细解析\n我们项目用的vue以及想相关的解析  \n> 如果出现下面这样的报错\n```\nerror  Requires a space before '}'  block-spacing\n```\n> 按照最后一个关键词，就可以找到正确的写法  \n\n下面就是所有的配置\n# accessor-pairs\n对象中强制配对set和get\n```\n'accessor-pairs': 2\n```\n就是对象中不能设置了set却没有get，但是有get没有set是可以的\n```js\n// 错误\nvar o = {\n  set a(value) {\n    this.val = value;\n  }\n};\n\n// 正确\nvar o = {\n  set a(value) {\n    this.val = value;\n  },\n  get a() {\n    return this.val;\n  }\n};\n\n// 正确\nvar o = {\n  get a() {\n    return this.val;\n  }\n};\n```\n# space\n空格\n## arrow-spacing\n箭头函数前后空格\n```\n'arrow-spacing': [2, {\n  'before': true,\n  'after': true\n}]\n```\n我们要求箭头函数必须前后有空格\n```js\n// { \"before\": true, \"after\": true }前后都要有空格\n(a) => {}\n\n// { \"before\": false, \"after\": false }前后都不能有空格\n(a)=>{}\n```\n## block-spacing\n大括号之内的空格或者换行\n```\n'block-spacing': [2, 'always']\n```\n我们要求大括号之内前后必须有空格或者换行\n```js\n// 正确\nfunction foo() { return true; }\nif (foo) { bar = 0; }\nfunction baz() {\n  let i = 0;\n  return i;\n}\n// 错误\nfunction foo() {return true;}//两边都没空格\nif (foo) { bar = 0;}//右边没空格\nfunction baz() {let i = 0;//左边没有换行或者空格\n  return i;\n}\n```\n## key-spacing\n属性空格\n```\n'key-spacing': [2, {\n  'beforeColon': false,\n  'afterColon': true\n}]\n```\n默认是属性之前没有空格之后有空格\n```js\nvar obj = { \"foo\": 42 };\n```\n## keyword-spacing\n关键字空格\n```\n'keyword-spacing': [2, {\n  'before': true,\n  'after': true\n}]\n```\n关键字前后都加空格\n```js\n// 正确\nif (foo) {\n  //...\n} else if (bar) {\n  //...\n} else {\n  //...\n}\n\n//错误\nif (foo) {\n  //...\n}else if (bar) {// 关键字else前面没有空格\n  //...\n} else{// 关键字else后面没有空格\n  //...\n}\n```\n## generator-star-spacing\n生成器的星号空格\n```\n'generator-star-spacing': [2, {\n  'before': true,\n  'after': true\n}]\n```\n我们要求星号前后都有空格\n```js\n// 正确\nfunction * generator() {\n  yield \"44\";\n  yield \"55\";\n}\n\n// 错误\nfunction* generator() {\n  yield \"44\";\n  yield \"55\";\n}\n\n// 错误\nfunction *generator() {\n  yield \"44\";\n  yield \"55\";\n}\n```\n# yield-star-spacing\n生产的空格\n```\n'yield-star-spacing': [2, 'both']\n```\n生产跟生成器一样两边加空格\n```js\n//正确\nfunction * generator() {\n  yield * other();\n}\n//错误\n```\n## no-multi-spaces\n多空格\n```\n'no-multi-spaces': 2\n```\n禁止多空格\n```js\n//正确\nvar a = 1;\nif(foo === \"bar\") {}\na << b\nvar arr = [1, 2];\na ? b: c\n\n//错误\nvar a =  1; // 等号右边多了空格\nif(foo   === \"bar\") {}  // 全等左边多了空格\na <<  b // 逻辑左移右边两个空格\nvar arr = [1,  2];  // 数组元素中间多了空格\na ?  b: c //?后面多了空格\n```\n## space-before-blocks\n括号前的空格\n```\n'space-before-blocks': [2, 'always']\n```\n括号之前要有空格\n```js\n//正确\nif (a) {\n  b();\n}\nif (a) {\n  b();\n} else{\n  c();\n}\nfunction a() {}\nfor (;;) {\n    b();\n}\ntry {} catch(a) {}\n\n//错误\nif (a){\n  b();\n}\nfunction a(){}\nfor (;;){\n  b();\n}\ntry {} catch(a){}\nclass Foo{\n  constructor(){}\n}\n```\n## space-before-function-paren\n函数空格\n```\n'space-before-function-paren': [2, 'never']\n```\n定义函数函数的括号之前不写空格\n```js\n//正确\nfunction foo() {\n  // ...\n}\nvar bar = function() {\n  // ...\n};\nvar bar = function foo() {\n  // ...\n};\nclass Foo {\n  constructor() {\n    // ...\n  }\n}\nvar foo = {\n  bar() {\n    // ...\n  }\n};\nvar foo = async() => 1;\n\n//错误\nfunction foo () {\n  // ...\n}\nvar bar = function () {\n  // ...\n};\nvar bar = function foo () {\n  // ...\n};\nclass Foo {\n  constructor () {\n    // ...\n  }\n}\nvar foo = {\n  bar () {\n    // ...\n  }\n};\nvar foo = async () => 1;\n```\n## no-spaced-func\n函数空白\n```\n'no-spaced-func': 2\n```\n函数间不要有任何空白\n```js\n//正确\nfn()\n\n//错误\nfn ()\n\nfn\n()\n```\n## padded-blocks\n声明中的空白\n```\n'padded-blocks': [2, 'never']\n```\n声明中不要有空白\n```js\n//正确\nif (a) {\n  b();\n}\n\n//错误\nif (a) {\n\n  b();\n\n}\nif (a) {\n\n  b();\n}\nif (a) {\n  b();\n\n}\n```\n## no-trailing-spaces\n句尾空格\n```\n'no-trailing-spaces': 2\n```\n禁止在句尾也就是分号之后加空格\n```js\n//错误\nvar foo = 0;//•••••\nvar baz = 5;//••\n```\n## eol-last\n页面结尾\n```\n'eol-last': 2\n```\n页面的结尾必须有一个空行\n```js\n// 正确\nfunction doSmth() {\n  var foo = 2;\n}\\n\n```\n# brace-style\n括号样式\n```\n'brace-style': [2, '1tbs', {\n  'allowSingleLine': true\n}]\n```\n我们设置1tbs的的样式，以及允许单行\n```js\n// 正确\nfunction foo() {\n  return true;\n}\n\nif (foo) {\n  bar();\n}\n\nif (foo) {\n  bar();\n} else {\n  baz();\n}\n\ntry {\n  somethingRisky();\n} catch(e) {\n  handleError();\n}\n\n// 没有大括号，没有问题\nif (foo) bar();\nelse if (baz) boom();\n\n// 允许单行\nfunction nop() { return; }\n\nif (foo) { bar(); }\n\nif (foo) { bar(); } else { baz(); }\n\ntry { somethingRisky(); } catch(e) { handleError(); }\n\n//错误\nfunction foo()\n{// 大括号开始需要跟方法同一行\n  return true;\n}\n\nif (foo)\n{// 大括号开始需要跟控制同一行\n  bar();\n}\n\ntry\n{ // 大括号开始需要跟控制同一行\n  somethingRisky();\n} catch(e)\n{ // 大括号开始需要跟捕获同一行\n  handleError();\n}\n\nif (foo) {\n  bar();\n}// 大括号结束需要跟后续同一行\nelse {\n  baz();\n}\n```\n# camelcase\n驼峰样式\n```\n'camelcase': [0, {\n  'properties': 'always'\n}]\n```\n我们关闭了规则，虽然建议大家都要用驼峰命名变量，但是有时候我们引用的module不是驼峰的\n```js\nimport { no_camelcased as camelCased } from \"external-module\";\n\nvar myFavoriteColor   = \"#112C85\";\nvar _myFavoriteColor  = \"#112C85\";\nvar myFavoriteColor_  = \"#112C85\";\nvar MY_FAVORITE_COLOR = \"#112C85\";\nvar foo = bar.baz_boom;\nvar foo = { qux: bar.baz_boom };\n\nobj.do_something();\ndo_something();\nnew do_something();\n\nvar { category_id: category } = query;\n\nfunction foo({ isCamelCased }) {\n    // ...\n};\n\nfunction foo({ isCamelCased: isAlsoCamelCased }) {\n    // ...\n}\n\nfunction foo({ isCamelCased = 'default value' }) {\n    // ...\n};\n\nvar { categoryId = 1 } = query;\n\nvar { foo: isCamelCased } = bar;\n\nvar { foo: isCamelCased = 1 } = quz;\n```\n# comma\n逗号\n## comma-dangle\n尾部逗号，区别于默认\n```\n'comma-dangle': [1, 'never']\n```\n数组或者对象，尾部是不能有逗号的，但是为了方便调试，我们只是设置了警告，没有限定为错误\n```js\n// 正确\nvar foo = {\n    bar: \"baz\",\n    qux: \"quux\"\n};\n\nvar arr = [1,2];\n\nfoo({\n  bar: \"baz\",\n  qux: \"quux\"\n});\n\n// 错误\nvar foo = {\n    bar: \"baz\",\n    qux: \"quux\",\n};\n\nvar arr = [1,2,];\n\nfoo({\n  bar: \"baz\",\n  qux: \"quux\",\n});\n```\n## comma-spacing\n逗号空格\n```js\n'comma-spacing': [2, {\n  'before': false,\n  'after': true\n}]\n```\n我们设置的为逗号之前不能有空格，之后必须有空格\n```js\n// 正确\nvar foo = 1, bar = 2;\nvar arr = [1, 2];\nvar obj = {\"foo\": \"bar\", \"baz\": \"qur\"};\nfoo(a, b);\nnew Foo(a, b);\nfunction foo(a, b){}\n\n// 错误\nvar foo = 1 ,bar = 2;\nvar arr = [1 , 2];\nvar obj = {\"foo\": \"bar\" ,\"baz\": \"qur\"};\nfoo(a ,b);\nnew Foo(a ,b);\nfunction foo(a ,b){}\n```\n## comma-style\n逗号样式\n```\n'comma-style': [2, 'last']\n```\n每个单元以逗号结尾\n```js\n// 正确\nvar foo = 1, bar = 2;\n\nvar foo = 1,\n  bar = 2;\n\nvar foo = [\"apples\",\n  \"oranges\"];\n\nfunction bar() {\n  return {\n    \"a\": 1,\n    \"b:\": 2\n  };\n}\n\n// 错误\nvar foo = 1\n,\nbar = 2;\n\nvar foo = 1\n  , bar = 2;\n\nvar foo = [\"apples\"\n  , \"oranges\"];\n\nfunction bar() {\n  return {\n    \"a\": 1\n    ,\"b:\": 2\n  };\n}\n```\n# regular\n正则表达式\n## no-control-regex\n正则字节控制\n```\n'no-control-regex': 0\n```\n正常来说使用的正则字节是ascii(0-31)，但是现在后续多了很多，尤其是要用中文，所以我们关掉了这个\n```js\nvar pattern1 = /\\x1f/; //16进制1f就是10进制的31\nvar pattern2 = new RegExp(\"\\x1f\");\n```\n## no-empty-character-class\n禁止空字节\n```\n'no-empty-character-class': 2\n```\n正则表达式中不要有空字节\n```js\n// 正确\n/^abc/.test(\"abcdefg\"); // true\n\"abcdefg\".match(/^abc/); // [\"abc\"]\n\n/^abc[a-z]/.test(\"abcdefg\"); // true\n\"abcdefg\".match(/^abc[a-z]/); // [\"abcd\"]\n\n// 错误\n/^abc[]/.test(\"abcdefg\"); // false\n\"abcdefg\".match(/^abc[]/); // null\n```\n## no-invalid-regexp\n无效的正则\n```\n'no-invalid-regexp': 2\n```\n错误的正则只有在执行时候才会报错，定义时候不会，所以我们加入验证\n```js\n// 正确\nRegExp('.');\nnew RegExp;\nthis.RegExp('[');\n\n// 错误\nRegExp('[');\nRegExp('.', 'z');\nnew RegExp('\\\\');\n```\n## no-regex-spaces\n正则空格\n```\n'no-regex-spaces': 2\n```\n禁止直接输入数量的空格，如果有请用{}定义数字\n```js\n//正确\nvar re = /foo {3}bar/;\nvar re = new RegExp(\"foo {3}bar\");\n\n//错误\nvar re = /foo   bar/;\nvar re = new RegExp(\"foo   bar\");\n```\n# class\n类\n## constructor-super\n构造时候使用超类\n```js\n// 正确\nclass A {\n  constructor() { }\n}\n\nclass A extends B {\n  constructor() {\n    super();\n  }\n}\n\n// 错误\nclass A {\n  constructor() {\n    super();  // 语法错误，因为没有继承\n  }\n}\n\nclass A extends B {\n    constructor() { }  // 需要超类\n}\n```\n## new-cap\n类首字母大写\n```\n'new-cap': [2, {\n  'newIsCap': true,\n  'capIsNew': false\n}]\n```\n默认为首字母大写\n```js\n// 正确\nvar friend = new Person();\nvar friend = Person(); //并没有要求必须new\n// 错误\nvar friend = new person();// 类需要首字母大写\n```\n## new-parens\n插入语\n```\n'new-parens': 2\n```\njs里，new一个类，如果没有参数，可以不写后面的括号的，但是别的语言都不行，所以统一一下\n```js\n// 正确\nvar person = new Person();\nvar person = new (Person)();\nvar person = new Person(\"Name\");\n\n// 错误\nvar person = new Person;\nvar person = new (Person);\n```\n## no-class-assign\n类重定义\n```\n'no-class-assign': 2\n```\nclass的方式定义的类，不要再重新定义\n```js\n// 错误\nclass A { }\nA = 0;\n\nA = 0;\nclass A { }\n\nclass A {\n  b() {\n    A = 0;\n  }\n}\n\nlet A = class A {\n  b() {\n    A = 0;\n  }\n}\n```\n## no-dupe-class-members\n重复方法\n```\n'no-dupe-class-members': 2\n```\n不要再类里定义重复的方法\n```js\n// 错误\nclass Foo {\n  bar() { }\n  bar() { }\n}\n\nclass Foo {\n  bar() { }\n  get bar() { }\n}\n\nclass Foo {\n  static bar() { }\n  static bar() { }\n}\n```\n## no-dupe-keys\n重复键\n```\n'no-dupe-keys': 2\n```\n不要定义重复的键\n```js\n// 正确\n\n// 错误\nvar foo = {\n  bar: \"baz\",\n  bar: \"qux\"\n};\n\nvar foo = {\n  \"bar\": \"baz\",\n  bar: \"qux\"\n};\n\nvar foo = {\n  0x1: \"baz\",\n  1: \"qux\"\n};\n```\n\n# curly\n圆括号\n```\n'curly': [2, 'multi-line']\n```\n函数或者控制可以单行没有大括号，多行需要大括号\n```js\n// 正确\nif (foo) foo++; else doSomething();\n\nif (foo) foo++;\nelse if (bar) baz()\nelse doSomething();\n\ndo something();\nwhile (foo);\n\nwhile (foo\n  && bar) baz();\n\nif (foo) {\n  foo++;\n}\n\nif (foo) { foo++; }\n\nwhile (true) {\n  doSomething();\n  doSomethingElse();\n}\n\n// 错误\nif (foo)\n  doSomething();\nelse\n  doSomethingElse();\n\nif (foo) foo(\n  bar,\n  baz);\n```\n# dot-location\n圆点\n```\n'dot-location': [2, 'property']\n```\n属性为主体，圆点跟属性作为一个整体\n```js\n// 正确\nvar foo = object\n.property;\nvar bar = object.property;\n\n//错误\nvar foo = object.\nproperty;\n```\n# eqeqeq\n等式，专门应对不正确的等式类型\n```\n'eqeqeq': [2, 'allow-null']\n```\n我们要求必须同时应对类型，并且允许为空\n```js\n// 正确\na === b\nfoo === true\nbananas !== 1\nvalue === undefined\ntypeof foo === 'undefined'\n'hello' !== 'world'\n0 === 0\ntrue === true\nfoo === null\n\n// 错误\na == b\nfoo == true\nbananas != 1\nvalue == undefined\ntypeof foo == 'undefined'\n'hello' != 'world'\n0 == 0\ntrue == true\nfoo == null\n```\n可能你会觉得很多地方就是要数字和字符串都适用，那么做个处理就行了\n```js\ncode == 200 // 常用的判断request的code，但是有时候给的是数字有时候给的字符串\ncode === 200 || code === \"200\" // 我们加上一个字符串的判断就可以了\nparseInt( code ) === 200 // 或者专门吧code转化成数字，但是注意一下，字符串不能做16进制的转换，碰上非数字，后面的内容就会丢失\n```\n# handle-callback-err\n错误回调\n```\n'handle-callback-err': [2, '^(err|error)$']\n```\n有错误的话要有抛出操作，就是参数一旦有“err”或者“error”一定要针对这个错误做特殊处理\n```js\n// 正确\nfunction loadData (err, data) {\n  if (err) {\n    console.log(err.stack);\n  }\n  doSomething();\n}\n\nfunction generateError (err) {\n  if (err) {}\n}\n\n// 错误\nfunction loadData (err, data) {\n  doSomething(); // 没做错误处理\n}\n```\n# indent\n缩进\n## indent\n缩进\n```\n'indent': [2, 2, {\n  'SwitchCase': 1\n}]\n```\n建议使用两个空格，理由是\n* 用两个空格的人很多，并且在逐渐增加\n* 层级多了，也只是一层2个，不会让横向过长\n```js\nif(true){\n  console.log(\"exec\");\n}\nswitch(a){\n  case \"a\":\n    break;\n  case \"b\":\n    break;\n}\n```\n## no-mixed-spaces-and-tabs\n空格和tabs混排\n```\n'no-mixed-spaces-and-tabs': 2\n```\n禁止空格和tabs混排\n```js\n//正确\nfunction add(x, y) {\n  return x + y;\n}\n\n//错误\nfunction add(x, y) {\n /*tab*/return x + y;\n}\n```\n# jsx-quotes\n标签引号\n```\n'jsx-quotes': [2, 'prefer-single']\n```\n标签引号请用单引号\n```html\n<!-- 正确 -->\n<a b='c' />\n<a b=\"'\" />\n\n<!-- 错误 -->\n<a b=\"c\" />\n```\n# array\n数组\n## no-array-constructor\n数组构造\n```\n'no-array-constructor': 2\n```\n数组构造时候可以使用长度作为参数，也可以使用数组中的元素作为参数  \n> 但是这样会有冲突，如果数组中只放了一个数字，那么是长度还是元素呢？  \n> 所以我们禁止使用元素作为参数构造\n```js\n// 正确\nArray(500);\nnew Array(someOtherArray.length);\n\n// 错误\nArray(0, 1, 2);\nnew Array(0, 1, 2);\n```\n## no-sparse-arrays\n数组空元素\n```\n'no-sparse-arrays': 2\n```\n禁止设置数组的空元素\n```js\n//正确\nvar colors = [ \"red\", \"blue\", ]; // 结尾有个逗号不是语法错误\n\n//错误\nvar items = [,];\nvar colors = [ \"red\",, \"blue\" ];\n```\n# no-caller\n隐含参数\n```\n'no-caller': 2\n```\n未来版本会去除这个，并且在es5的严格模式中不能用，所以我们禁止\n```js\n// 正确\nfunction foo(n) {\n  if (n <= 0) {\n    return;\n  }\n  foo(n - 1);\n}\n[1,2,3,4,5].map(function factorial(n) {\n  return !(n > 1) ? 1 : factorial(n - 1) * n;\n});\n\n// 错误\nfunction foo(n) {\n  if (n <= 0) {\n    return;\n  }\n  arguments.callee(n - 1);\n}\n[1,2,3,4,5].map(function(n) {\n  return !(n > 1) ? 1 : arguments.callee(n - 1) * n;\n});\n```\n# no-console\n输出\n```\n'no-console': 'off'\n```\n虽然是关闭状态，但是最好做完一个阶段之后去掉输出\n# no-cond-assign\n条件定义变量\n```\n'no-cond-assign': 2\n```\n不要再条件里面定义变量\n```js\n// 正确\nvar x;\nif (x === 0) {\n    var b = 1;\n}\nfunction setHeight(someNode) {\n  \"use strict\";\n  do {\n    someNode.height = \"100px\";\n  } while ((someNode = someNode.parentNode) !== null);\n}\n\n\n// 错误\nvar x;\nif (x = 0) {\n    var b = 1;\n}\n\nfunction setHeight(someNode) {\n  \"use strict\";\n  do {\n    someNode.height = \"100px\";\n  } while (someNode = someNode.parentNode);\n}\n```\n# no-const-assign\n常量定义\n```\n'no-const-assign': 2\n```\n不要给常量再赋值\n```js\n// 错误\nconst a = 0;\na = 1;\n```\n\n# no-delete-var\n删除变量\n```\n'no-delete-var': 2\n```\ndelete是用来删除属性的，如果删除变量会有非预期的错误\n```js\n// 正确\nlet obj = { a:1 };\ndelete obj.a; //这时候obj是{}，没有了a属性\n\n// 错误\nvar x;\ndelete x;\n```\n# no-dupe-args\n重复参数\n```\n'no-dupe-args': 2\n```\n不要再函数中定义重复的参数\n```js\n// 正确\nfunction foo(a, b, c) {\n  console.log(a, b, c);\n}\nvar bar = function (a, b, c) {\n  console.log(a, b, c);\n};\n\n// 错误\nfunction foo(a, b, a) {\n  console.log(\"value of the second a:\", a);\n}\nvar bar = function (a, b, a) {\n  console.log(\"value of the second a:\", a);\n};\n```\n# no-duplicate-case\n相同的case\n```\n'no-duplicate-case': 2\n```\n不要设置相同的case\n```js\n// 正确\nswitch (a) {\n  case one:\n    break;\n  case 2:\n    break;\n  case 3:\n    break;\n  default:\n    break;\n}\n\n// 错误\nvar a = 1,\n  one = 1;\n\nswitch (a) {\n  case 1:         // 重复\n    break;\n  case 2:\n    break;\n  case 1:         // 重复\n    break;\n  default:\n    break;\n}\n\nswitch (a) {\n  case one:         // 重复\n    break;\n  case 2:\n    break;\n  case one:         // 重复\n    break;\n  default:\n    break;\n}\n\nswitch (a) {\n  case \"1\":         // 重复\n    break;\n  case \"2\":\n    break;\n  case \"1\":         // 重复\n    break;\n  default:\n    break;\n}\n```\n# no-empty-pattern\n空匹配\n```\n'no-empty-pattern': 2\n```\n禁止空匹配\n```js\n// 正确\nvar {a = {}} = foo; // 创建变量a\nvar {a = []} = foo;\nfunction foo({a = {}}) {}\nfunction foo({a = []}) {}\n\n// 错误\nvar {} = foo;\nvar [] = foo;\nvar {a: {}} = foo;  // 不会创建任何变量\nvar {a: []} = foo;\nfunction foo({}) {}\nfunction foo([]) {}\nfunction foo({a: {}}) {}\nfunction foo({a: []}) {}\n```\n# no-eval\n转化执行\n```\n'no-eval': 2\n```\n禁止使用eval\n```js\n// 正确\nvar obj = { x: \"foo\" },\n  key = \"x\",\n  value = obj[key];\n\n// 错误\nvar obj = { x: \"foo\" },\n  key = \"x\",\n  value = eval(\"obj.\" + key);\n\n(0, eval)(\"var a = 0\");\n\nvar foo = eval;\nfoo(\"var a = 0\");\n\nthis.eval(\"var a = 0\");\n```\n# no-ex-assign\n抛出异常定义\n```\n'no-ex-assign': 2\n```\n禁止冲定义抛出的异常\n```js\n// 正确\ntry {\n  // code\n} catch (e) {\n  var foo = 10;\n}\n\n// 错误\ntry {\n  // code\n} catch (e) {\n  e = 10;\n}\n```\n# no-extend-native\n原生扩展\n```\n'no-extend-native': 2\n```\n禁止原生扩展\n```js\n// 错误\nObject.prototype.a = \"a\";\nObject.defineProperty(Array.prototype, \"times\", { value: 999 });\n```\n因为如果做了原生扩展，所有的用到这个原生的内容都会有问题，比如\n```js\nObject.prototype.extra = 55;\n\nvar users = {\n  \"123\": \"Stan\",\n  \"456\": \"David\"\n};\n\n// 您并没有做别的\nfor (var id in users) {\n    console.log(id); // console的为：\"123\", \"456\", \"extra\"，因为你在原生Object里增加了一个extra\n}\n```\n# no-extra-bind\n绑定\n```\n'no-extra-bind': 2\n```\n禁止多余的绑定\n```js\n// 正确\nvar x = function () {\n  this.foo();\n}.bind(bar);\n\nvar x = function (a) {\n  return a + 1;\n}.bind(foo, bar);\n\n// 错误\nvar x = function () {\n  foo();\n}.bind(bar);\n\nvar x = (() => {\n  foo();\n}).bind(bar);\n\nvar x = (() => {\n  this.foo();\n}).bind(bar);\n\nvar x = function () {\n  (function () {\n    this.foo();\n  }());\n}.bind(bar);\n\nvar x = function () {\n  function foo() {\n    this.bar();\n  }\n}.bind(baz);\n```\n# no-extra-boolean-cast\n额外的按位计算\n```\n'no-extra-boolean-cast': 2\n```\n禁止额外的布尔操作\n```js\n// 正确\nvar foo = !!bar;\nvar foo = Boolean(bar);\n\nfunction foo() {\n  return !!bar;\n}\n\nvar foo = bar ? !!baz : !!bat;\n\n// 错误\nvar foo = !!!bar;\n\nvar foo = !!bar ? baz : bat;\n\nvar foo = Boolean(!!bar);\n\nvar foo = new Boolean(!!bar);\n\nif (!!foo) {\n  // ...\n}\n\nif (Boolean(foo)) {\n  // ...\n}\n\nwhile (!!foo) {\n  // ...\n}\n\ndo {\n  // ...\n} while (Boolean(foo));\n\nfor (; !!foo; ) {\n  // ...\n}\n```\n# no-extra-parens\n\n```\n'no-extra-parens': [2, 'functions']\n```\n禁止额外的插入\n```js\n// 正确\n(0).toString();\n(Object.prototype.toString.call());\n({}.toString.call());\n(function(){} ? a() : b());\n(/^a$/).test(x);\na = (b * c);\n(a * b) + c;\ntypeof (a);\n\n// 错误\n((function foo() {}))();\nvar y = (function () {return 1;});\n```\n# no-fallthrough\n抛出\n```\n'no-fallthrough': 2\n```\n禁止switch无抛出\n```js\n// 正确\nswitch(foo) {\n  case 1:\n    doSomething();\n    break;\n  case 2:\n    doSomething();\n}\n\nfunction bar(foo) {\n  switch(foo) {\n    case 1:\n      doSomething();\n      return;\n    case 2:\n      doSomething();\n  }\n}\n\nswitch(foo) {\n  case 1:\n    doSomething();\n    throw new Error(\"Boo!\");\n  case 2:\n    doSomething();\n}\n\nswitch(foo) {\n  case 1:\n  case 2:\n    doSomething();\n}\n\nswitch(foo) {\n  case 1:\n    doSomething();\n    // 其他抛出\n\n  case 2:\n    doSomething();\n}\n\n// 错误\nswitch(foo) {\n  case 1:\n    doSomething();\n  case 2:\n    doSomething();\n}\n```\n# no-floating-decimal\n浮点小数\n```\n'no-floating-decimal': 2\n```\n虽然有简写的方式，但是请用完整的方式写小数\n```js\n// 正确\nvar num = 0.5;\nvar num = 2.0;\nvar num = -0.7;\n\n// 错误\nvar num = .5;\nvar num = 2.;\nvar num = -.7;\n```\n# no-func-assign\n函数重定义\n```\n'no-func-assign': 2\n```\n不要给函数重定义\n```js\n// 正确\nvar foo = function () {}\nfoo = bar;\n\nfunction foo(foo) { // `foo` is shadowed.\n  foo = bar;\n}\n\nfunction foo() {\n  var foo = bar;  // `foo` is shadowed.\n}\n\n// 错误\nfunction foo() {}\nfoo = bar;\n\nfunction foo() {\n  foo = bar;\n}\nfoo = bar;\nfunction foo() {}\n```\n# no-implied-eval\n隐eval\n```\n'no-implied-eval': 2\n```\n需要避免所有使用eval的地方\n```js\n// 正确\nsetTimeout(function() {\n  alert(\"Hi!\");\n}, 100);\n\nsetInterval(function() {\n  alert(\"Hi!\");\n}, 100);\n\n// 错误\nsetTimeout(\"alert('Hi!');\", 100);\nsetInterval(\"alert('Hi!');\", 100);\nexecScript(\"alert('Hi!')\");\nwindow.setTimeout(\"count = 5\", 10);\nwindow.setInterval(\"foo = bar\", 10);\n```\n# no-inner-declarations\n内部定义\n```\n'no-inner-declarations': [2, 'functions']\n```\n不要使用内部定义，会有异步的隐患\n```js\n// 正确\nfunction doSomething() { }\n\nfunction doSomethingElse() {\n  function doAnotherThing() { }\n}\n\nif (test) {\n  asyncCall(id, function (err, data) { });\n}\n\nvar fn;\nif (test) {\n  fn = function fnExpression() { };\n}\n\n// 错误\nif (test) {\n  function doSomething() { }\n}\n\nfunction doSomethingElse() {\n  if (test) {\n    function doAnotherThing() { }\n  }\n}\n```\n# no-irregular-whitespace\n不合法的空白\n```\n'no-irregular-whitespace': 2\n```\n不要用不合法的空白\n```\n\\u000B - Line Tabulation (\\v) - <VT>\n\\u000C - Form Feed (\\f) - <FF>\n\\u00A0 - No-Break Space - <NBSP>\n\\u0085 - Next Line\n\\u1680 - Ogham Space Mark\n\\u180E - Mongolian Vowel Separator - <MVS>\n\\ufeff - Zero Width No-Break Space - <BOM>\n\\u2000 - En Quad\n\\u2001 - Em Quad\n\\u2002 - En Space - <ENSP>\n\\u2003 - Em Space - <EMSP>\n\\u2004 - Tree-Per-Em\n\\u2005 - Four-Per-Em\n\\u2006 - Six-Per-Em\n\\u2007 - Figure Space\n\\u2008 - Punctuation Space - <PUNCSP>\n\\u2009 - Thin Space\n\\u200A - Hair Space\n\\u200B - Zero Width Space - <ZWSP>\n\\u2028 - Line Separator\n\\u2029 - Paragraph Separator\n\\u202F - Narrow No-Break Space\n\\u205f - Medium Mathematical Space\n\\u3000 - Ideographic Space\n```\n```js\n// 正确\nfunction thing() {\n  return ' <NBSP>thing';\n}\nfunction thing() {\n  return '​<ZWSP>thing';\n}\nfunction thing() {\n  return 'th <NBSP>ing';\n}\n\n// 错误\nfunction thing() /*<NBSP>*/{\n  return 'test';\n}\n\nfunction thing( /*<NBSP>*/){\n  return 'test';\n}\n\nfunction thing /*<NBSP>*/(){\n  return 'test';\n}\n\nfunction thing᠎/*<MVS>*/(){\n  return 'test';\n}\n\nfunction thing() {\n  return 'test'; /*<ENSP>*/\n}\n\nfunction thing() {\n  return 'test'; /*<NBSP>*/\n}\n\nfunction thing() {\n  // Description <NBSP>: some descriptive text\n}\n\n/*\nDescription <NBSP>: some descriptive text\n*/\n\nfunction thing() {\n  return / <NBSP>regexp/;\n}\n\n/*eslint-env es6*/\nfunction thing() {\n  return `template <NBSP>string`;\n}\n```\n# no-iterator\n迭代器\n```\n'no-iterator': 2\n```\n不要自定义迭代器的属性，未来会有迭代器\n```js\n// 正确\nvar __iterator__ = foo; // Not using the `__iterator__` property.\n\n// 错误\nFoo.prototype.__iterator__ = function() {\n    return new FooIterator(this);\n};\nfoo.__iterator__ = function () {};\nfoo[\"__iterator__\"] = function () {};\n```\n# no-label-var\n函数标签\n```\n'no-label-var': 2\n```\n不要把函数标签跟变量冲突\n```js\n// 正确\nfunction foo() {\n  var q = t;\n}\nfunction bar() {\nq:\n  for(;;) {\n    break q;\n  }\n}\n\n// 错误\nvar x = foo;\nfunction bar() {\nx:\n  for (;;) {\n    break x;\n  }\n}\n```\n# no-labels\n标签\n```\n'no-labels': [2, {\n  'allowLoop': false,\n  'allowSwitch': false\n}]\n```\n循环和switch不要设置标签\n```js\n// 正确\nvar f = {\n  label: \"foo\"\n};\nwhile (true) {\n  break;\n}\nwhile (true) {\n  continue;\n}\n\n// 错误\nlabel:\n  while(true) {\n    // ...\n  }\n\nlabel:\n  while(true) {\n    break label;\n  }\n\nlabel:\n  while(true) {\n    continue label;\n  }\n\nlabel:\n  switch (a) {\n    case 0:\n      break label;\n    }\n\nlabel:\n  {\n    break label;\n  }\n\nlabel:\n  if (a) {\n    break label;\n  }\n```\n# no-lone-blocks\n空闭包\n```\n'no-lone-blocks': 2\n```\n不要使用空闭包\n```js\n//正确\nwhile (foo) {\n  bar();\n}\nif (foo) {\n  if (bar) {\n    baz();\n  }\n}\nfunction bar() {\n  baz();\n}\n{\n  let x = 1;\n}\n{\n  const y = 1;\n}\n{\n  class Foo {}\n}\naLabel: {\n}\n\n//错误\n{}\nif (foo) {\n  bar();\n  {\n    baz();\n  }\n}\nfunction bar() {\n  {\n    baz();\n  }\n}\n{\n  function foo() {}\n}\n{\n  aLabel: {\n  }\n}\n```\n# no-multi-str\n换行字符串\n```\n'no-multi-str': 2\n```\n换行请用\\n，不要用格式的字符串，很可能除了换行多了很多别的东西\n```js\n//正确\nvar x = \"Line 1\\n\" +\n  \"Line 2\";\n\n//错误\nvar x = \"Line 1 \\\n  Line 2\";\n```\n# no-multiple-empty-lines\n空行\n```\n'no-multiple-empty-lines': [2, {\n  'max': 1\n}]\n```\n禁止空行超过1\n```js\n//正确\nvar foo = 5;\n// 一行\nvar bar = 3;\n\n//错误\nvar foo = 5;\n// 超过了一行\n\nvar bar = 3;\n```\n# no-native-reassign\n原生定义\n```\n'no-native-reassign': 2\n```\n不要重定义环境\n```js\n//错误\nObject = null;\nundefined = 1;\nwindow = {};\nlength = 1;\ntop = 1;\n```\n# no-negated-in-lhs\n负运算\n```\n'no-negated-in-lhs': 2\n```\n非应该优先级最高，但是低于in表达式\n```js\n//正确\nif(!(key in object)) {\n  // key不在object对象中\n}\nif(('' + !key) in object) {\n  // 括号的优先级永远最高，但是key需要是字符串，所以需要转化成字符串\n}\n\n//错误\nif(!key in object) {\n  // 这个实际是(key in object)，但是大部分人看来认为是非key在object\n}\n```\n# no-new-object\nnew定义object\n```\n'no-new-object': 2\n```\n使用{}定义object比new Object()写的更方便\n```js\n//正确\nvar myObject = new CustomObject();\nvar myObject = {};\n\n//错误\nvar myObject = new Object();\nvar myObject = new Object;\n```\n# no-new-require\nnew定义require\n```\n'no-new-require': 2\n```\n禁止require的module直接new\n```js\n//正确\nvar AppHeader = require('app-header');\nvar appHeader = new AppHeader();\n\n//错误\nvar appHeader = new require('app-header');\n```\n# no-new-symbol\nsymbol类\n```\n'no-new-symbol': 2\n```\nsymbol是一个function并且不带构造\n```js\n//正确\nvar foo = Symbol('foo');\n\n//错误\nvar foo = new Symbol('foo');\n```\n# no-new-wrappers\n包装对象\n```\n'no-new-wrappers': 2\n```\n不需要构造的类型，都直接用函数方式\n```js\n//正确\nvar text = String(someValue);\nvar num = Number(someValue);\n\nvar object = new MyString();\n\n//错误\nvar stringObject = new String(\"Hello world\");\nvar numberObject = new Number(33);\nvar booleanObject = new Boolean(false);\n\nvar stringObject = new String;\nvar numberObject = new Number;\nvar booleanObject = new Boolean;\n```\n# no-obj-calls\n非函数类\n```\n'no-obj-calls': 2\n```\n全局类不要用函数方式调用\n```js\n//正确\nfunction area(r) {\n  return Math.PI * r * r;\n}\nvar object = JSON.parse(\"{}\");\nvar value = Reflect.get({ x: 1, y: 2 }, \"x\");\n\n//错误\nvar math = Math();\nvar json = JSON();\nvar reflect = Reflect();\n```\n# no-octal\n十进制数的导零\n```\n'no-octal': 2\n```\n禁止十进制数用导零\n```js\n//正确\nvar num  = \"071\";\n\n//错误\nvar num = 071;\nvar result = 5 + 07;\n```\n# no-octal-escape\n十进制转义\n```\n'no-octal-escape': 2\n```\n禁止十进制转义\n```js\n//正确\nvar foo = \"Copyright \\u00A9\";   // unicode码\nvar foo = \"Copyright \\xA9\";     // 十六进制\n\n//错误\nvar foo = \"Copyright \\251\"; // 十进制\n```\n# no-path-concat\n地址链接\n```\n'no-path-concat': 2\n```\n禁止直接把地址做链接\n```js\n//正确\nvar fullPath = dirname + \"/foo.js\";\nvar fullPath = path.join(__dirname, \"foo.js\");\nvar fullPath = path.resolve(__dirname, \"foo.js\");\n\n//错误\nvar fullPath = __dirname + \"/foo.js\";\nvar fullPath = __filename + \"/foo.js\";\n```\n# no-proto\n原型\n```\n'no-proto': 2\n```\n禁止直接操作或者定义原型\n```js\n//正确\nvar a = Object.getPrototypeOf(obj);\nObject.setPrototypeOf(obj, b);\nvar c = { __proto__: a };\n\n//错误\nvar a = obj.__proto__;\nvar a = obj[\"__proto__\"];\nobj.__proto__ = b;\nobj[\"__proto__\"] = b;\n```\n# no-redeclare\n变量重生命\n```\n'no-redeclare': 2\n```\n禁止变量重复声明\n```js\n//错误\nvar a = 3;\nvar a = 10;\n```\n# no-return-assign\n返回定义\n```\n'no-return-assign': [2, 'except-parens']\n```\n禁止在返回时候做定义\n```js\n//错误\nfunction doSomething() {\n  return foo = bar + 2;\n}\nfunction doSomething() {\n  return foo += 2;\n}\n```\n# no-self-assign\n自定义\n```\n'no-self-assign': 2\n```\n禁止自己给自己定义\n```js\n//错误\nfoo = foo;\n[a, b] = [a, b];\n[a, ...b] = [x, ...b];\n({a, b} = {a, x});\n```\n# no-self-compare\n自比较\n```\n'no-self-compare': 2\n```\n禁止自己跟自己比较\n```js\n//错误\nvar x = 10;\nif (x === x) {\n    x = 20;\n}\n```\n# no-sequences\n序列\n```\n'no-sequences': 2\n```\n禁止逗号操作\n```js\n//正确\nfoo = (doSomething(), val);\n(0, eval)(\"doSomething();\");\ndo {} while ((doSomething(), !!test));\nfor (i = 0, j = 10; i < j; i++, j--);\nif ((doSomething(), !!test));\nswitch ((val = foo(), val)) {}\nwhile ((val = foo(), val < 42));\n\n//错误\nfoo = doSomething(), val;\n0, eval(\"doSomething();\");\ndo {} while (doSomething(), !!test);\nfor (; doSomething(), !!test; );\nif (doSomething(), !!test);\nswitch (val = foo(), val) {}\nwhile (val = foo(), val < 42);\nwith (doSomething(), val) {}\n```\n# no-shadow-restricted-names\n严格命名\n```\n'no-shadow-restricted-names': 2\n```\n禁止使用预留字段命名\n```js\n//错误\nfunction NaN(){}\n!function(Infinity){};\nvar undefined = 5;\ntry {} catch(eval){}\n```\n# no-this-before-super\nthis在超类之前\n```\n'no-this-before-super': 2\n```\n禁止在超类之前使用this\n```js\n//正确\nclass A {\n  constructor() {\n    this.a = 0; // OK, 没有继承也就没有super\n  }\n}\nclass A extends B {\n  constructor() {\n    super();\n    this.a = 0; // OK, 成员变量赋值在super之后.\n  }\n}\nclass A extends B {\n  foo() {\n    this.a = 0; // OK. 使用this的作用域不是构造.\n  }\n}\n\n//错误\nclass A extends B {\n  constructor() {\n    this.a = 0; // super之前赋值成员变量\n    super();\n  }\n}\nclass A extends B {\n  constructor() {\n    this.foo(); // super之前调用方法\n    super();\n  }\n}\nclass A extends B {\n  constructor() {\n    super.foo();  // super之前调用静态方法\n    super();\n  }\n}\nclass A extends B {\n  constructor() {\n    super(this.foo());  // 参数传递之前并未super\n  }\n}\n```\n# no-throw-literal\n抛出异常\n```\n'no-throw-literal': 2\n```\n抛出错误需要是Error\n```js\n//正确\nthrow new Error();\n\nthrow new Error(\"error\");\n\nvar e = new Error(\"error\");\nthrow e;\n\ntry {\n  throw new Error(\"error\");\n} catch (e) {\n  throw e;  //  catch的参数就是Error类\n}\n\n//错误\nthrow \"error\";\nthrow 0;\nthrow undefined;\nthrow null;\nvar err = new Error();\nthrow \"an \" + err;\n// err is recast to a string literal\nvar err = new Error();\nthrow `${err}`\n```\n# no-undef\n未定义变量\n```\n'no-undef': 2\n```\n禁止使用未定义变量\n```js\n//错误\nb = 10; // 变量b没有定义，严格模式下语法错误\n```\n# no-undef-init\n未定义赋值\n```\n'no-undef-init': 2\n```\n禁止赋值为undefined\n```js\n//正确\nvar foo;\nlet bar;\nconst baz = undefined;\n\n//错误\nvar foo = undefined;\nlet bar = undefined;\n```\n# no-unexpected-multiline\n多行\n```\n'no-unexpected-multiline': 2\n```\n禁止不必要的多行\n```js\n//正确\nvar foo = bar;\n(1 || 2).baz();\n\nvar foo = bar\n;(1 || 2).baz()\n\nvar hello = 'world';\n[1, 2, 3].forEach(addNumber);\n\nvar hello = 'world'\nvoid [1, 2, 3].forEach(addNumber);\n\nlet x = function() {};\n`hello`\n\nlet tag = function() {}\ntag `hello`\n\n//错误\nvar foo = bar\n(1 || 2).baz();\n\nvar hello = 'world'\n[1, 2, 3].forEach(addNumber);\n\nlet x = function() {}\n`hello`\n\nlet x = function() {}\nx\n`hello`\n\nlet x = foo\n/regex/g.test(bar)\n```\n# no-unmodified-loop-condition\n循环中未修改的条件\n```\n'no-unmodified-loop-condition': 2\n```\n禁止循环中出现未修改的条件\n```js\n//正确\nwhile (node) {\n  doSomething(node);\n  node = node.parent;\n}\nfor (var j = 0; j < items.length; ++j) {\n  doSomething(items[j]);\n}\nwhile (node !== root) {\n  doSomething(node);\n  node = node.parent; // node在循环中改变\n}\nwhile (node ? A : B) {\n  doSomething(node);\n  node = node.parent; // 三元表达式在循环中改变\n}\nwhile (obj.foo) {\n  doSomething(obj); // doSomething函数可能修改obj的foo属性\n}\nwhile (check(obj)) { // check函数可能返回多样的值\n  doSomething(obj);\n}\n\n//错误\nwhile (node) {\n  doSomething(node);\n}\nnode = other; // 条件在循环外改变\n\nfor (var j = 0; j < items.length; ++i) { // 条件j和items没有在循环中改变\n  doSomething(items[j]);\n}\nwhile (node !== root) { // 条件node和root没有在循环中改变\n  doSomething(node);\n}\n```\n# no-unneeded-ternary\n不必要的三元表达式\n```\n'no-unneeded-ternary': [2, {\n  'defaultAssignment': false\n}]\n```\n禁止不必要的三元表达式\n```js\n//正确\nvar a = x === 2 ? \"Yes\" : \"No\";\nvar a = x !== false;\nvar a = x ? \"Yes\" : \"No\";\nvar a = x ? y : x;\nvar a = x ? x : 1;\n\n//错误\nvar a = x === 2 ? true : false; // 直接写 var a = x === 2 就行了\nvar a = x ? true : false; // 直接写 var a = x 就行了\nvar a = f(x ? x : 1); // 直接写 f(x || 1) 就行了\n```\n# no-unreachable\n未到达\n```\n'no-unreachable': 2\n```\n禁止未到达部分还有表达式，比如return、throw、break、continue之后的表达式\n```js\n//错误\nfunction foo() {\n  return true;\n  console.log(\"done\");\n}\n\nfunction bar() {\n  throw new Error(\"Oops!\");\n  console.log(\"done\");\n}\n\nwhile(value) {\n  break;\n  console.log(\"done\");\n}\n\nthrow new Error(\"Oops!\");\nconsole.log(\"done\");\n\nfunction baz() {\n  if (Math.random() < 0.5) {\n    return;\n  } else {\n    throw new Error();\n  }\n  console.log(\"done\");\n}\n```\n# no-unsafe-finally\n不安全的finally\n```\n'no-unsafe-finally': 2\n```\n禁止在finally中使用 return、throw、break 和 continue \n```js\n//正确\n\n//错误\nlet foo = function() {\n  try {\n    return 1;\n  } catch(err) {\n    return 2;\n  } finally {\n    return 3;\n  }\n};\nlet foo = function() {\n  try {\n    return 1;\n  } catch(err) {\n    return 2;\n  } finally {\n    throw new Error;\n  }\n};\n```\n# no-unused-vars\n未使用的变量\n```\n'no-unused-vars': [1, {\n  'vars': 'local',\n  'args': 'none'\n}]\n```\n未使用的变量，我们为了方便调试，因为很多时候我们预先留好参数，修改了级别为警告\n```js\n//错误\n(function(a, b, c) { // c没有使用\n  return a + b;\n})(1, 2);\n```\n# no-useless-call\n不必要的调用\n```\n'no-useless-call': 2\n```\n禁止不必要的call和apply\n```js\n//正确\nfoo.call(obj, 1, 2, 3);\nfoo.apply(obj, [1, 2, 3]);\nobj.foo.call(null, 1, 2, 3);\nobj.foo.apply(null, [1, 2, 3]);\nobj.foo.call(otherObj, 1, 2, 3);\nobj.foo.apply(otherObj, [1, 2, 3]);\n\n// argument list 是有效的\nfoo.apply(undefined, args);\nfoo.apply(null, args);\nobj.foo.apply(obj, args);\n\n//错误\n// 这跟foo(1, 2, 3)一样\nfoo.call(undefined, 1, 2, 3);\nfoo.apply(undefined, [1, 2, 3]);\nfoo.call(null, 1, 2, 3);\nfoo.apply(null, [1, 2, 3]);\n// 这跟foo(1, 2, 3)一样\nobj.foo.call(obj, 1, 2, 3);\nobj.foo.apply(obj, [1, 2, 3]);\n```\n# no-useless-computed-key\n```\n'no-useless-computed-key': 2\n```\n```js\n//正确\nvar foo = {\"a\": \"b\"};\n\n//错误\nvar foo = {[\"a\"]: \"b\"};\n```\n# no-useless-constructor\n无用的构造\n```\n'no-useless-constructor': 2\n```\n禁止无用的构造\n```js\n//错误\nclass A {\n  constructor () { // 构造没任何用\n  }\n}\n\nclass A extends B {\n  constructor (...args) {\n    super(...args); // 不写这个也会有这个构造\n  }\n}\n```\n# no-useless-escape\n不必要的转义\n```\n'no-useless-escape': 0\n```\n禁止不必要的转义\n```js\n//正确\n\"\\\"\";\n'\\'';\n\"\\x12\";\n\"\\u00a9\";\n\"\\371\";\n\"xs\\u2111\";\n`\\``;\n`\\${${foo}}`;\n`$\\{${foo}}`;\n/\\\\/g;\n/\\t/g;\n/\\w\\$\\*\\^\\./;\n\n//错误\n\"\\'\";\n'\\\"';\n\"\\#\";\n\"\\e\";\n`\\\"`;\n`\\\"${foo}\\\"`;\n`\\#{foo}`;\n/\\!/;\n/\\@/;\n```\n# no-whitespace-before-property\n属性前的空格\n```\n'no-whitespace-before-property': 2\n```\n属性前不要有空格\n```js\n//正确\nfoo.bar\nfoo[bar]\nfoo[ bar ]\nfoo.bar.baz\nfoo\n  .bar().baz()\nfoo\n  .bar()\n  .baz()\nfoo.\n  bar().\n  baz()\n\n//错误\nfoo [bar]\nfoo. bar\nfoo .bar\nfoo. bar. baz\nfoo. bar()\n  .baz()\nfoo\n  .bar(). baz()\n```\n# no-with\n不使用with\n```\n'no-with': 2\n```\nwith有潜在的风险，现在已经有很多方式可以代替with了\n```js\n//正确\nconst r = ({x, y}) => Math.sqrt(x * x + y * y);\n\n//错误\nwith (point) {\n  r = Math.sqrt(x * x + y * y); // r是否point的属性呢？\n}\n```\n# one-var\n单变量\n```\n'one-var': [2, {\n  'initialized': 'never'\n}]\n```\n为了浏览方便，可以一次定义多个变量，但是不要一次给多个变量赋值\n```js\n//正确\nfunction foo() {\n  var foo = true;\n  var bar = false;\n  var a, b, c; // Uninitialized variables are ignored\n}\n\n//错误\nfunction foo() {\n  var foo = true,\n    bar = false;\n}\n```\n# operator-linebreak\n操作符\n```\n'operator-linebreak': [2, 'after', {\n  'overrides': {\n    '?': 'before',\n    ':': 'before'\n  }\n}]\n```\n操作符紧跟之后，三元表达式在之前\n```js\n//正确\nfoo = 1 + 2;\nfoo = 1 +\n  2;\nfoo =\n  5;\nif (someCondition ||\n  otherCondition) {\n}\nanswer = everything ?\n  42 :\n  foo;\n\n//错误\nfoo = 1\n+\n2;\nfoo = 1\n  + 2;\nfoo\n  = 5;\nif (someCondition\n  || otherCondition) {\n}\nanswer = everything\n  ? 42\n  : foo;\n```\n# quotes\n引号\n```\n'quotes': [2, 'single', {\n  'avoidEscape': true,\n  'allowTemplateLiterals': true\n}]\n```\n为了统一，请字符串用单引号，但是为了防止转义是可以用双引号的\n```js\n//正确\nvar single = 'single';\nvar backtick = `back${x}tick`; // 允许模板\nvar unescaped = \"a string containing 'single' quotes\"; // 为了避免转义单引号，可以用双引号\n\n//错误\nvar double = \"double\";\n```\n# semi\n分号\n```\n'semi': [2, 'always']\n```\n必须加分号\n```js\n//正确\nvar website = \"eslint.org\";\n\n//错误\nvar name = \"ESLint\"\n```\n# semi-spacing\n分号空白\n```\n'semi-spacing': [2, {\n  'before': false,\n  'after': true\n}]\n```\n左边不能有空白，右边必须有空白\n```js\n//正确\nvar foo;\nvar foo; var bar;\nthrow new Error(\"error\");\nwhile (a) { break; }\nfor (i = 0; i < 10; i++) {}\nfor (;;) {}\nif (true) {;}\n;foo();\n\n//错误\nvar foo ;\nvar foo;var bar;\nthrow new Error(\"error\") ;\nwhile (a) { break ; }\nfor (i = 0 ; i < 10 ; i++) {}\nfor (i = 0;i < 10;i++) {}\n```\n# space-in-parens\n参数空白\n```\n'space-in-parens': [2, 'never']\n```\n函数的参数括号两边不留空白\n```js\n//正确\nfoo();\nfoo('bar');\nvar foo = (1 + 2) * 3;\n(function () { return 'bar'; }());\n\n//错误\nfoo( 'bar');\nfoo('bar' );\nfoo( 'bar' );\nvar foo = ( 1 + 2 ) * 3;\n( function () { return 'bar'; }() );\n```\n# space-infix-ops\n操作符空白\n```\n'space-infix-ops': 2\n```\n操作符两边留空白\n```js\n//正确\na + b\na       + b\na ? b : c\nconst a = {b:1};\nvar {a = 0} = bar;\nfunction foo(a = 0) { }\n\n//错误\na+b\na+ b\na +b\na?b:c\nconst a={b:1};\nvar {a=0}=bar;\nfunction foo(a=0) { }\n```\n# space-unary-ops\n单元操作符空格\n```\n'space-unary-ops': [2, {\n  'words': true,\n  'nonwords': false\n}]\n```\n```js\n//正确\ndelete foo.bar; // 文字操作符需要有空格\nnew Foo; // 文字操作符需要有空格\nvoid 0; // 文字操作符需要有空格\n++foo; // 非文字操作符不能有空格\nfoo--; // 非文字操作符不能有空格\n-foo; // 非文字操作符不能有空格\n+\"3\"; // 非文字操作符不能有空格\n\n//错误\ntypeof!foo;\nvoid{foo:0};\nnew[foo][0];\ndelete(foo.bar);\n++ foo;\nfoo --;\n- foo;\n+ \"3\";\n```\n# spaced-comment\n注释的空格\n```\n'spaced-comment': [2, 'always', {\n  'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n}]\n```\n注释需要加个空格\n```js\n//正确\n// This is a comment with a whitespace at the beginning\n/* This is a comment with a whitespace at the beginning */\n/*\n * This is a comment with a whitespace at the beginning\n */\n/*\nThis comment has a newline\n*/\n\n//错误\n//This is a comment with no whitespace at the beginning\n/*This is a comment with no whitespace at the beginning */\n```\n# template-curly-spacing\n模板中的变量\n```\n'template-curly-spacing': [2, 'never']\n```\n模板中的变量不要加空格\n```js\n//正确\n`hello, ${people.name}!`;\n`hello, ${\n  people.name\n}!`;\n\n//错误\n`hello, ${ people.name}!`;\n`hello, ${people.name }!`;\n`hello, ${ people.name }!`;\n```\n# use-isnan\n非数字\n```\n'use-isnan': 2\n```\n判断非数字，请使用isNaN函数\n```js\n//正确\nif (isNaN(foo)) {\n  // ...\n}\nif (!isNaN(foo)) {\n  // ...\n}\n\n//错误\nif (foo == NaN) {\n  // ...\n}\nif (foo != NaN) {\n  // ...\n}\n```\n# valid-typeof\n正确的类型\n```\n'valid-typeof': 2\n```\n请使用正确的类型\n```js\n//正确\ntypeof foo === \"string\"\ntypeof bar == \"undefined\"\ntypeof foo === baz\ntypeof bar === typeof qux\n\n//错误\ntypeof foo === \"strnig\"\ntypeof foo == \"undefimed\"\ntypeof bar != \"nunber\"\ntypeof bar !== \"fucntion\"\n```\n# wrap-iife\n闭包调用\n```\n'wrap-iife': [2, 'any']\n```\n直接调用函数需要括号括起来\n```js\n//正确\nvar x = (function () { return { y: 1 };}());\nvar x = (function () { return { y: 1 };})();\n\n//错误\nvar x = function () { return { y: 1 };}();\n```\n# yoda\n```\n'yoda': [2, 'never']\n```\n条件里，变量在左，对比的值在右\n```js\n//正确\nif (5 & value) {\n  // ...\n}\nif (value === \"red\") {\n  // ...\n}\n\n//错误\nif (\"red\" === color) {\n  // ...\n}\nif (true == flag) {\n  // ...\n}\nif (5 > count) {\n  // ...\n}\nif (-1 < str.indexOf(substr)) {\n  // ...\n}\nif (0 <= x && x < 1) {\n  // ...\n}\n```\n# prefer-const\n常量\n```\n'prefer-const': 1\n```\n没有被重定义的变量请用const，但是开发过程中经常有暂时没有重定义的变量，所以修改了警告级别\n```js\n//错误\nlet a = 3;\nconsole.log(a);\n\nlet a;\na = 0;\nconsole.log(a);\n\nfor (let i in [1, 2, 3]) { // 遍历时候i不会被重定义\n    console.log(i);\n}\n\nfor (let a of [1, 2, 3]) { // 遍历时候i不会被重定义\n    console.log(a);\n}\n```\n# no-debugger\n调试\n```\n'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0\n```\n在正式环境中不能有调试，开发环境关闭\n```js\nfunction isTruthy(x) {\n  debugger;\n  return Boolean(x);\n}\n```\n# object-curly-spacing\n对象空格\n```\n'object-curly-spacing': [2, 'always', {\n  objectsInObjects: false\n}]\n```\n定义对象的大括号内两边加空格\n```js\n//正确\nvar obj = {};\nvar obj = { 'foo': 'bar' };\nvar obj = { 'foo': { 'bar': 'baz' }, 'qux': 'quxx' };\nvar obj = {\n  'foo': 'bar'\n};\nvar { x } = y;\nimport { foo } from 'bar';\n\n//错误\nvar obj = {'foo': 'bar'};\nvar obj = {'foo': 'bar' };\nvar obj = { baz: {'foo': 'qux'}, bar};\nvar obj = {baz: { 'foo': 'qux' }, bar};\nvar obj = {'foo': 'bar'\n};\nvar obj = {\n  'foo':'bar'};\nvar {x} = y;\nimport {foo } from 'bar';\n```\n# array-bracket-spacing\n数组空格\n```\n'array-bracket-spacing': [2, 'never']\n```\n定义数字的中括号内，无空格\n```js\n//正确\nvar arr = [];\nvar arr = ['foo', 'bar'];\nvar arr = [\n  'foo',\n  'bar'\n];\n\n//错误\nvar arr = [ 'foo', 'bar' ];\nvar arr = ['foo', 'bar' ];\nvar arr = [ ['foo'], 'bar'];\nvar arr = [[ 'foo' ], 'bar'];\n```\n","source":"_posts/eslint.md","raw":"---\ntitle: eslint完整解析\ndate: 2019-09-02 11:35:33\ntags: eslint\n---\n# ESLint配置详细解析\n我们项目用的vue以及想相关的解析  \n> 如果出现下面这样的报错\n```\nerror  Requires a space before '}'  block-spacing\n```\n> 按照最后一个关键词，就可以找到正确的写法  \n\n下面就是所有的配置\n# accessor-pairs\n对象中强制配对set和get\n```\n'accessor-pairs': 2\n```\n就是对象中不能设置了set却没有get，但是有get没有set是可以的\n```js\n// 错误\nvar o = {\n  set a(value) {\n    this.val = value;\n  }\n};\n\n// 正确\nvar o = {\n  set a(value) {\n    this.val = value;\n  },\n  get a() {\n    return this.val;\n  }\n};\n\n// 正确\nvar o = {\n  get a() {\n    return this.val;\n  }\n};\n```\n# space\n空格\n## arrow-spacing\n箭头函数前后空格\n```\n'arrow-spacing': [2, {\n  'before': true,\n  'after': true\n}]\n```\n我们要求箭头函数必须前后有空格\n```js\n// { \"before\": true, \"after\": true }前后都要有空格\n(a) => {}\n\n// { \"before\": false, \"after\": false }前后都不能有空格\n(a)=>{}\n```\n## block-spacing\n大括号之内的空格或者换行\n```\n'block-spacing': [2, 'always']\n```\n我们要求大括号之内前后必须有空格或者换行\n```js\n// 正确\nfunction foo() { return true; }\nif (foo) { bar = 0; }\nfunction baz() {\n  let i = 0;\n  return i;\n}\n// 错误\nfunction foo() {return true;}//两边都没空格\nif (foo) { bar = 0;}//右边没空格\nfunction baz() {let i = 0;//左边没有换行或者空格\n  return i;\n}\n```\n## key-spacing\n属性空格\n```\n'key-spacing': [2, {\n  'beforeColon': false,\n  'afterColon': true\n}]\n```\n默认是属性之前没有空格之后有空格\n```js\nvar obj = { \"foo\": 42 };\n```\n## keyword-spacing\n关键字空格\n```\n'keyword-spacing': [2, {\n  'before': true,\n  'after': true\n}]\n```\n关键字前后都加空格\n```js\n// 正确\nif (foo) {\n  //...\n} else if (bar) {\n  //...\n} else {\n  //...\n}\n\n//错误\nif (foo) {\n  //...\n}else if (bar) {// 关键字else前面没有空格\n  //...\n} else{// 关键字else后面没有空格\n  //...\n}\n```\n## generator-star-spacing\n生成器的星号空格\n```\n'generator-star-spacing': [2, {\n  'before': true,\n  'after': true\n}]\n```\n我们要求星号前后都有空格\n```js\n// 正确\nfunction * generator() {\n  yield \"44\";\n  yield \"55\";\n}\n\n// 错误\nfunction* generator() {\n  yield \"44\";\n  yield \"55\";\n}\n\n// 错误\nfunction *generator() {\n  yield \"44\";\n  yield \"55\";\n}\n```\n# yield-star-spacing\n生产的空格\n```\n'yield-star-spacing': [2, 'both']\n```\n生产跟生成器一样两边加空格\n```js\n//正确\nfunction * generator() {\n  yield * other();\n}\n//错误\n```\n## no-multi-spaces\n多空格\n```\n'no-multi-spaces': 2\n```\n禁止多空格\n```js\n//正确\nvar a = 1;\nif(foo === \"bar\") {}\na << b\nvar arr = [1, 2];\na ? b: c\n\n//错误\nvar a =  1; // 等号右边多了空格\nif(foo   === \"bar\") {}  // 全等左边多了空格\na <<  b // 逻辑左移右边两个空格\nvar arr = [1,  2];  // 数组元素中间多了空格\na ?  b: c //?后面多了空格\n```\n## space-before-blocks\n括号前的空格\n```\n'space-before-blocks': [2, 'always']\n```\n括号之前要有空格\n```js\n//正确\nif (a) {\n  b();\n}\nif (a) {\n  b();\n} else{\n  c();\n}\nfunction a() {}\nfor (;;) {\n    b();\n}\ntry {} catch(a) {}\n\n//错误\nif (a){\n  b();\n}\nfunction a(){}\nfor (;;){\n  b();\n}\ntry {} catch(a){}\nclass Foo{\n  constructor(){}\n}\n```\n## space-before-function-paren\n函数空格\n```\n'space-before-function-paren': [2, 'never']\n```\n定义函数函数的括号之前不写空格\n```js\n//正确\nfunction foo() {\n  // ...\n}\nvar bar = function() {\n  // ...\n};\nvar bar = function foo() {\n  // ...\n};\nclass Foo {\n  constructor() {\n    // ...\n  }\n}\nvar foo = {\n  bar() {\n    // ...\n  }\n};\nvar foo = async() => 1;\n\n//错误\nfunction foo () {\n  // ...\n}\nvar bar = function () {\n  // ...\n};\nvar bar = function foo () {\n  // ...\n};\nclass Foo {\n  constructor () {\n    // ...\n  }\n}\nvar foo = {\n  bar () {\n    // ...\n  }\n};\nvar foo = async () => 1;\n```\n## no-spaced-func\n函数空白\n```\n'no-spaced-func': 2\n```\n函数间不要有任何空白\n```js\n//正确\nfn()\n\n//错误\nfn ()\n\nfn\n()\n```\n## padded-blocks\n声明中的空白\n```\n'padded-blocks': [2, 'never']\n```\n声明中不要有空白\n```js\n//正确\nif (a) {\n  b();\n}\n\n//错误\nif (a) {\n\n  b();\n\n}\nif (a) {\n\n  b();\n}\nif (a) {\n  b();\n\n}\n```\n## no-trailing-spaces\n句尾空格\n```\n'no-trailing-spaces': 2\n```\n禁止在句尾也就是分号之后加空格\n```js\n//错误\nvar foo = 0;//•••••\nvar baz = 5;//••\n```\n## eol-last\n页面结尾\n```\n'eol-last': 2\n```\n页面的结尾必须有一个空行\n```js\n// 正确\nfunction doSmth() {\n  var foo = 2;\n}\\n\n```\n# brace-style\n括号样式\n```\n'brace-style': [2, '1tbs', {\n  'allowSingleLine': true\n}]\n```\n我们设置1tbs的的样式，以及允许单行\n```js\n// 正确\nfunction foo() {\n  return true;\n}\n\nif (foo) {\n  bar();\n}\n\nif (foo) {\n  bar();\n} else {\n  baz();\n}\n\ntry {\n  somethingRisky();\n} catch(e) {\n  handleError();\n}\n\n// 没有大括号，没有问题\nif (foo) bar();\nelse if (baz) boom();\n\n// 允许单行\nfunction nop() { return; }\n\nif (foo) { bar(); }\n\nif (foo) { bar(); } else { baz(); }\n\ntry { somethingRisky(); } catch(e) { handleError(); }\n\n//错误\nfunction foo()\n{// 大括号开始需要跟方法同一行\n  return true;\n}\n\nif (foo)\n{// 大括号开始需要跟控制同一行\n  bar();\n}\n\ntry\n{ // 大括号开始需要跟控制同一行\n  somethingRisky();\n} catch(e)\n{ // 大括号开始需要跟捕获同一行\n  handleError();\n}\n\nif (foo) {\n  bar();\n}// 大括号结束需要跟后续同一行\nelse {\n  baz();\n}\n```\n# camelcase\n驼峰样式\n```\n'camelcase': [0, {\n  'properties': 'always'\n}]\n```\n我们关闭了规则，虽然建议大家都要用驼峰命名变量，但是有时候我们引用的module不是驼峰的\n```js\nimport { no_camelcased as camelCased } from \"external-module\";\n\nvar myFavoriteColor   = \"#112C85\";\nvar _myFavoriteColor  = \"#112C85\";\nvar myFavoriteColor_  = \"#112C85\";\nvar MY_FAVORITE_COLOR = \"#112C85\";\nvar foo = bar.baz_boom;\nvar foo = { qux: bar.baz_boom };\n\nobj.do_something();\ndo_something();\nnew do_something();\n\nvar { category_id: category } = query;\n\nfunction foo({ isCamelCased }) {\n    // ...\n};\n\nfunction foo({ isCamelCased: isAlsoCamelCased }) {\n    // ...\n}\n\nfunction foo({ isCamelCased = 'default value' }) {\n    // ...\n};\n\nvar { categoryId = 1 } = query;\n\nvar { foo: isCamelCased } = bar;\n\nvar { foo: isCamelCased = 1 } = quz;\n```\n# comma\n逗号\n## comma-dangle\n尾部逗号，区别于默认\n```\n'comma-dangle': [1, 'never']\n```\n数组或者对象，尾部是不能有逗号的，但是为了方便调试，我们只是设置了警告，没有限定为错误\n```js\n// 正确\nvar foo = {\n    bar: \"baz\",\n    qux: \"quux\"\n};\n\nvar arr = [1,2];\n\nfoo({\n  bar: \"baz\",\n  qux: \"quux\"\n});\n\n// 错误\nvar foo = {\n    bar: \"baz\",\n    qux: \"quux\",\n};\n\nvar arr = [1,2,];\n\nfoo({\n  bar: \"baz\",\n  qux: \"quux\",\n});\n```\n## comma-spacing\n逗号空格\n```js\n'comma-spacing': [2, {\n  'before': false,\n  'after': true\n}]\n```\n我们设置的为逗号之前不能有空格，之后必须有空格\n```js\n// 正确\nvar foo = 1, bar = 2;\nvar arr = [1, 2];\nvar obj = {\"foo\": \"bar\", \"baz\": \"qur\"};\nfoo(a, b);\nnew Foo(a, b);\nfunction foo(a, b){}\n\n// 错误\nvar foo = 1 ,bar = 2;\nvar arr = [1 , 2];\nvar obj = {\"foo\": \"bar\" ,\"baz\": \"qur\"};\nfoo(a ,b);\nnew Foo(a ,b);\nfunction foo(a ,b){}\n```\n## comma-style\n逗号样式\n```\n'comma-style': [2, 'last']\n```\n每个单元以逗号结尾\n```js\n// 正确\nvar foo = 1, bar = 2;\n\nvar foo = 1,\n  bar = 2;\n\nvar foo = [\"apples\",\n  \"oranges\"];\n\nfunction bar() {\n  return {\n    \"a\": 1,\n    \"b:\": 2\n  };\n}\n\n// 错误\nvar foo = 1\n,\nbar = 2;\n\nvar foo = 1\n  , bar = 2;\n\nvar foo = [\"apples\"\n  , \"oranges\"];\n\nfunction bar() {\n  return {\n    \"a\": 1\n    ,\"b:\": 2\n  };\n}\n```\n# regular\n正则表达式\n## no-control-regex\n正则字节控制\n```\n'no-control-regex': 0\n```\n正常来说使用的正则字节是ascii(0-31)，但是现在后续多了很多，尤其是要用中文，所以我们关掉了这个\n```js\nvar pattern1 = /\\x1f/; //16进制1f就是10进制的31\nvar pattern2 = new RegExp(\"\\x1f\");\n```\n## no-empty-character-class\n禁止空字节\n```\n'no-empty-character-class': 2\n```\n正则表达式中不要有空字节\n```js\n// 正确\n/^abc/.test(\"abcdefg\"); // true\n\"abcdefg\".match(/^abc/); // [\"abc\"]\n\n/^abc[a-z]/.test(\"abcdefg\"); // true\n\"abcdefg\".match(/^abc[a-z]/); // [\"abcd\"]\n\n// 错误\n/^abc[]/.test(\"abcdefg\"); // false\n\"abcdefg\".match(/^abc[]/); // null\n```\n## no-invalid-regexp\n无效的正则\n```\n'no-invalid-regexp': 2\n```\n错误的正则只有在执行时候才会报错，定义时候不会，所以我们加入验证\n```js\n// 正确\nRegExp('.');\nnew RegExp;\nthis.RegExp('[');\n\n// 错误\nRegExp('[');\nRegExp('.', 'z');\nnew RegExp('\\\\');\n```\n## no-regex-spaces\n正则空格\n```\n'no-regex-spaces': 2\n```\n禁止直接输入数量的空格，如果有请用{}定义数字\n```js\n//正确\nvar re = /foo {3}bar/;\nvar re = new RegExp(\"foo {3}bar\");\n\n//错误\nvar re = /foo   bar/;\nvar re = new RegExp(\"foo   bar\");\n```\n# class\n类\n## constructor-super\n构造时候使用超类\n```js\n// 正确\nclass A {\n  constructor() { }\n}\n\nclass A extends B {\n  constructor() {\n    super();\n  }\n}\n\n// 错误\nclass A {\n  constructor() {\n    super();  // 语法错误，因为没有继承\n  }\n}\n\nclass A extends B {\n    constructor() { }  // 需要超类\n}\n```\n## new-cap\n类首字母大写\n```\n'new-cap': [2, {\n  'newIsCap': true,\n  'capIsNew': false\n}]\n```\n默认为首字母大写\n```js\n// 正确\nvar friend = new Person();\nvar friend = Person(); //并没有要求必须new\n// 错误\nvar friend = new person();// 类需要首字母大写\n```\n## new-parens\n插入语\n```\n'new-parens': 2\n```\njs里，new一个类，如果没有参数，可以不写后面的括号的，但是别的语言都不行，所以统一一下\n```js\n// 正确\nvar person = new Person();\nvar person = new (Person)();\nvar person = new Person(\"Name\");\n\n// 错误\nvar person = new Person;\nvar person = new (Person);\n```\n## no-class-assign\n类重定义\n```\n'no-class-assign': 2\n```\nclass的方式定义的类，不要再重新定义\n```js\n// 错误\nclass A { }\nA = 0;\n\nA = 0;\nclass A { }\n\nclass A {\n  b() {\n    A = 0;\n  }\n}\n\nlet A = class A {\n  b() {\n    A = 0;\n  }\n}\n```\n## no-dupe-class-members\n重复方法\n```\n'no-dupe-class-members': 2\n```\n不要再类里定义重复的方法\n```js\n// 错误\nclass Foo {\n  bar() { }\n  bar() { }\n}\n\nclass Foo {\n  bar() { }\n  get bar() { }\n}\n\nclass Foo {\n  static bar() { }\n  static bar() { }\n}\n```\n## no-dupe-keys\n重复键\n```\n'no-dupe-keys': 2\n```\n不要定义重复的键\n```js\n// 正确\n\n// 错误\nvar foo = {\n  bar: \"baz\",\n  bar: \"qux\"\n};\n\nvar foo = {\n  \"bar\": \"baz\",\n  bar: \"qux\"\n};\n\nvar foo = {\n  0x1: \"baz\",\n  1: \"qux\"\n};\n```\n\n# curly\n圆括号\n```\n'curly': [2, 'multi-line']\n```\n函数或者控制可以单行没有大括号，多行需要大括号\n```js\n// 正确\nif (foo) foo++; else doSomething();\n\nif (foo) foo++;\nelse if (bar) baz()\nelse doSomething();\n\ndo something();\nwhile (foo);\n\nwhile (foo\n  && bar) baz();\n\nif (foo) {\n  foo++;\n}\n\nif (foo) { foo++; }\n\nwhile (true) {\n  doSomething();\n  doSomethingElse();\n}\n\n// 错误\nif (foo)\n  doSomething();\nelse\n  doSomethingElse();\n\nif (foo) foo(\n  bar,\n  baz);\n```\n# dot-location\n圆点\n```\n'dot-location': [2, 'property']\n```\n属性为主体，圆点跟属性作为一个整体\n```js\n// 正确\nvar foo = object\n.property;\nvar bar = object.property;\n\n//错误\nvar foo = object.\nproperty;\n```\n# eqeqeq\n等式，专门应对不正确的等式类型\n```\n'eqeqeq': [2, 'allow-null']\n```\n我们要求必须同时应对类型，并且允许为空\n```js\n// 正确\na === b\nfoo === true\nbananas !== 1\nvalue === undefined\ntypeof foo === 'undefined'\n'hello' !== 'world'\n0 === 0\ntrue === true\nfoo === null\n\n// 错误\na == b\nfoo == true\nbananas != 1\nvalue == undefined\ntypeof foo == 'undefined'\n'hello' != 'world'\n0 == 0\ntrue == true\nfoo == null\n```\n可能你会觉得很多地方就是要数字和字符串都适用，那么做个处理就行了\n```js\ncode == 200 // 常用的判断request的code，但是有时候给的是数字有时候给的字符串\ncode === 200 || code === \"200\" // 我们加上一个字符串的判断就可以了\nparseInt( code ) === 200 // 或者专门吧code转化成数字，但是注意一下，字符串不能做16进制的转换，碰上非数字，后面的内容就会丢失\n```\n# handle-callback-err\n错误回调\n```\n'handle-callback-err': [2, '^(err|error)$']\n```\n有错误的话要有抛出操作，就是参数一旦有“err”或者“error”一定要针对这个错误做特殊处理\n```js\n// 正确\nfunction loadData (err, data) {\n  if (err) {\n    console.log(err.stack);\n  }\n  doSomething();\n}\n\nfunction generateError (err) {\n  if (err) {}\n}\n\n// 错误\nfunction loadData (err, data) {\n  doSomething(); // 没做错误处理\n}\n```\n# indent\n缩进\n## indent\n缩进\n```\n'indent': [2, 2, {\n  'SwitchCase': 1\n}]\n```\n建议使用两个空格，理由是\n* 用两个空格的人很多，并且在逐渐增加\n* 层级多了，也只是一层2个，不会让横向过长\n```js\nif(true){\n  console.log(\"exec\");\n}\nswitch(a){\n  case \"a\":\n    break;\n  case \"b\":\n    break;\n}\n```\n## no-mixed-spaces-and-tabs\n空格和tabs混排\n```\n'no-mixed-spaces-and-tabs': 2\n```\n禁止空格和tabs混排\n```js\n//正确\nfunction add(x, y) {\n  return x + y;\n}\n\n//错误\nfunction add(x, y) {\n /*tab*/return x + y;\n}\n```\n# jsx-quotes\n标签引号\n```\n'jsx-quotes': [2, 'prefer-single']\n```\n标签引号请用单引号\n```html\n<!-- 正确 -->\n<a b='c' />\n<a b=\"'\" />\n\n<!-- 错误 -->\n<a b=\"c\" />\n```\n# array\n数组\n## no-array-constructor\n数组构造\n```\n'no-array-constructor': 2\n```\n数组构造时候可以使用长度作为参数，也可以使用数组中的元素作为参数  \n> 但是这样会有冲突，如果数组中只放了一个数字，那么是长度还是元素呢？  \n> 所以我们禁止使用元素作为参数构造\n```js\n// 正确\nArray(500);\nnew Array(someOtherArray.length);\n\n// 错误\nArray(0, 1, 2);\nnew Array(0, 1, 2);\n```\n## no-sparse-arrays\n数组空元素\n```\n'no-sparse-arrays': 2\n```\n禁止设置数组的空元素\n```js\n//正确\nvar colors = [ \"red\", \"blue\", ]; // 结尾有个逗号不是语法错误\n\n//错误\nvar items = [,];\nvar colors = [ \"red\",, \"blue\" ];\n```\n# no-caller\n隐含参数\n```\n'no-caller': 2\n```\n未来版本会去除这个，并且在es5的严格模式中不能用，所以我们禁止\n```js\n// 正确\nfunction foo(n) {\n  if (n <= 0) {\n    return;\n  }\n  foo(n - 1);\n}\n[1,2,3,4,5].map(function factorial(n) {\n  return !(n > 1) ? 1 : factorial(n - 1) * n;\n});\n\n// 错误\nfunction foo(n) {\n  if (n <= 0) {\n    return;\n  }\n  arguments.callee(n - 1);\n}\n[1,2,3,4,5].map(function(n) {\n  return !(n > 1) ? 1 : arguments.callee(n - 1) * n;\n});\n```\n# no-console\n输出\n```\n'no-console': 'off'\n```\n虽然是关闭状态，但是最好做完一个阶段之后去掉输出\n# no-cond-assign\n条件定义变量\n```\n'no-cond-assign': 2\n```\n不要再条件里面定义变量\n```js\n// 正确\nvar x;\nif (x === 0) {\n    var b = 1;\n}\nfunction setHeight(someNode) {\n  \"use strict\";\n  do {\n    someNode.height = \"100px\";\n  } while ((someNode = someNode.parentNode) !== null);\n}\n\n\n// 错误\nvar x;\nif (x = 0) {\n    var b = 1;\n}\n\nfunction setHeight(someNode) {\n  \"use strict\";\n  do {\n    someNode.height = \"100px\";\n  } while (someNode = someNode.parentNode);\n}\n```\n# no-const-assign\n常量定义\n```\n'no-const-assign': 2\n```\n不要给常量再赋值\n```js\n// 错误\nconst a = 0;\na = 1;\n```\n\n# no-delete-var\n删除变量\n```\n'no-delete-var': 2\n```\ndelete是用来删除属性的，如果删除变量会有非预期的错误\n```js\n// 正确\nlet obj = { a:1 };\ndelete obj.a; //这时候obj是{}，没有了a属性\n\n// 错误\nvar x;\ndelete x;\n```\n# no-dupe-args\n重复参数\n```\n'no-dupe-args': 2\n```\n不要再函数中定义重复的参数\n```js\n// 正确\nfunction foo(a, b, c) {\n  console.log(a, b, c);\n}\nvar bar = function (a, b, c) {\n  console.log(a, b, c);\n};\n\n// 错误\nfunction foo(a, b, a) {\n  console.log(\"value of the second a:\", a);\n}\nvar bar = function (a, b, a) {\n  console.log(\"value of the second a:\", a);\n};\n```\n# no-duplicate-case\n相同的case\n```\n'no-duplicate-case': 2\n```\n不要设置相同的case\n```js\n// 正确\nswitch (a) {\n  case one:\n    break;\n  case 2:\n    break;\n  case 3:\n    break;\n  default:\n    break;\n}\n\n// 错误\nvar a = 1,\n  one = 1;\n\nswitch (a) {\n  case 1:         // 重复\n    break;\n  case 2:\n    break;\n  case 1:         // 重复\n    break;\n  default:\n    break;\n}\n\nswitch (a) {\n  case one:         // 重复\n    break;\n  case 2:\n    break;\n  case one:         // 重复\n    break;\n  default:\n    break;\n}\n\nswitch (a) {\n  case \"1\":         // 重复\n    break;\n  case \"2\":\n    break;\n  case \"1\":         // 重复\n    break;\n  default:\n    break;\n}\n```\n# no-empty-pattern\n空匹配\n```\n'no-empty-pattern': 2\n```\n禁止空匹配\n```js\n// 正确\nvar {a = {}} = foo; // 创建变量a\nvar {a = []} = foo;\nfunction foo({a = {}}) {}\nfunction foo({a = []}) {}\n\n// 错误\nvar {} = foo;\nvar [] = foo;\nvar {a: {}} = foo;  // 不会创建任何变量\nvar {a: []} = foo;\nfunction foo({}) {}\nfunction foo([]) {}\nfunction foo({a: {}}) {}\nfunction foo({a: []}) {}\n```\n# no-eval\n转化执行\n```\n'no-eval': 2\n```\n禁止使用eval\n```js\n// 正确\nvar obj = { x: \"foo\" },\n  key = \"x\",\n  value = obj[key];\n\n// 错误\nvar obj = { x: \"foo\" },\n  key = \"x\",\n  value = eval(\"obj.\" + key);\n\n(0, eval)(\"var a = 0\");\n\nvar foo = eval;\nfoo(\"var a = 0\");\n\nthis.eval(\"var a = 0\");\n```\n# no-ex-assign\n抛出异常定义\n```\n'no-ex-assign': 2\n```\n禁止冲定义抛出的异常\n```js\n// 正确\ntry {\n  // code\n} catch (e) {\n  var foo = 10;\n}\n\n// 错误\ntry {\n  // code\n} catch (e) {\n  e = 10;\n}\n```\n# no-extend-native\n原生扩展\n```\n'no-extend-native': 2\n```\n禁止原生扩展\n```js\n// 错误\nObject.prototype.a = \"a\";\nObject.defineProperty(Array.prototype, \"times\", { value: 999 });\n```\n因为如果做了原生扩展，所有的用到这个原生的内容都会有问题，比如\n```js\nObject.prototype.extra = 55;\n\nvar users = {\n  \"123\": \"Stan\",\n  \"456\": \"David\"\n};\n\n// 您并没有做别的\nfor (var id in users) {\n    console.log(id); // console的为：\"123\", \"456\", \"extra\"，因为你在原生Object里增加了一个extra\n}\n```\n# no-extra-bind\n绑定\n```\n'no-extra-bind': 2\n```\n禁止多余的绑定\n```js\n// 正确\nvar x = function () {\n  this.foo();\n}.bind(bar);\n\nvar x = function (a) {\n  return a + 1;\n}.bind(foo, bar);\n\n// 错误\nvar x = function () {\n  foo();\n}.bind(bar);\n\nvar x = (() => {\n  foo();\n}).bind(bar);\n\nvar x = (() => {\n  this.foo();\n}).bind(bar);\n\nvar x = function () {\n  (function () {\n    this.foo();\n  }());\n}.bind(bar);\n\nvar x = function () {\n  function foo() {\n    this.bar();\n  }\n}.bind(baz);\n```\n# no-extra-boolean-cast\n额外的按位计算\n```\n'no-extra-boolean-cast': 2\n```\n禁止额外的布尔操作\n```js\n// 正确\nvar foo = !!bar;\nvar foo = Boolean(bar);\n\nfunction foo() {\n  return !!bar;\n}\n\nvar foo = bar ? !!baz : !!bat;\n\n// 错误\nvar foo = !!!bar;\n\nvar foo = !!bar ? baz : bat;\n\nvar foo = Boolean(!!bar);\n\nvar foo = new Boolean(!!bar);\n\nif (!!foo) {\n  // ...\n}\n\nif (Boolean(foo)) {\n  // ...\n}\n\nwhile (!!foo) {\n  // ...\n}\n\ndo {\n  // ...\n} while (Boolean(foo));\n\nfor (; !!foo; ) {\n  // ...\n}\n```\n# no-extra-parens\n\n```\n'no-extra-parens': [2, 'functions']\n```\n禁止额外的插入\n```js\n// 正确\n(0).toString();\n(Object.prototype.toString.call());\n({}.toString.call());\n(function(){} ? a() : b());\n(/^a$/).test(x);\na = (b * c);\n(a * b) + c;\ntypeof (a);\n\n// 错误\n((function foo() {}))();\nvar y = (function () {return 1;});\n```\n# no-fallthrough\n抛出\n```\n'no-fallthrough': 2\n```\n禁止switch无抛出\n```js\n// 正确\nswitch(foo) {\n  case 1:\n    doSomething();\n    break;\n  case 2:\n    doSomething();\n}\n\nfunction bar(foo) {\n  switch(foo) {\n    case 1:\n      doSomething();\n      return;\n    case 2:\n      doSomething();\n  }\n}\n\nswitch(foo) {\n  case 1:\n    doSomething();\n    throw new Error(\"Boo!\");\n  case 2:\n    doSomething();\n}\n\nswitch(foo) {\n  case 1:\n  case 2:\n    doSomething();\n}\n\nswitch(foo) {\n  case 1:\n    doSomething();\n    // 其他抛出\n\n  case 2:\n    doSomething();\n}\n\n// 错误\nswitch(foo) {\n  case 1:\n    doSomething();\n  case 2:\n    doSomething();\n}\n```\n# no-floating-decimal\n浮点小数\n```\n'no-floating-decimal': 2\n```\n虽然有简写的方式，但是请用完整的方式写小数\n```js\n// 正确\nvar num = 0.5;\nvar num = 2.0;\nvar num = -0.7;\n\n// 错误\nvar num = .5;\nvar num = 2.;\nvar num = -.7;\n```\n# no-func-assign\n函数重定义\n```\n'no-func-assign': 2\n```\n不要给函数重定义\n```js\n// 正确\nvar foo = function () {}\nfoo = bar;\n\nfunction foo(foo) { // `foo` is shadowed.\n  foo = bar;\n}\n\nfunction foo() {\n  var foo = bar;  // `foo` is shadowed.\n}\n\n// 错误\nfunction foo() {}\nfoo = bar;\n\nfunction foo() {\n  foo = bar;\n}\nfoo = bar;\nfunction foo() {}\n```\n# no-implied-eval\n隐eval\n```\n'no-implied-eval': 2\n```\n需要避免所有使用eval的地方\n```js\n// 正确\nsetTimeout(function() {\n  alert(\"Hi!\");\n}, 100);\n\nsetInterval(function() {\n  alert(\"Hi!\");\n}, 100);\n\n// 错误\nsetTimeout(\"alert('Hi!');\", 100);\nsetInterval(\"alert('Hi!');\", 100);\nexecScript(\"alert('Hi!')\");\nwindow.setTimeout(\"count = 5\", 10);\nwindow.setInterval(\"foo = bar\", 10);\n```\n# no-inner-declarations\n内部定义\n```\n'no-inner-declarations': [2, 'functions']\n```\n不要使用内部定义，会有异步的隐患\n```js\n// 正确\nfunction doSomething() { }\n\nfunction doSomethingElse() {\n  function doAnotherThing() { }\n}\n\nif (test) {\n  asyncCall(id, function (err, data) { });\n}\n\nvar fn;\nif (test) {\n  fn = function fnExpression() { };\n}\n\n// 错误\nif (test) {\n  function doSomething() { }\n}\n\nfunction doSomethingElse() {\n  if (test) {\n    function doAnotherThing() { }\n  }\n}\n```\n# no-irregular-whitespace\n不合法的空白\n```\n'no-irregular-whitespace': 2\n```\n不要用不合法的空白\n```\n\\u000B - Line Tabulation (\\v) - <VT>\n\\u000C - Form Feed (\\f) - <FF>\n\\u00A0 - No-Break Space - <NBSP>\n\\u0085 - Next Line\n\\u1680 - Ogham Space Mark\n\\u180E - Mongolian Vowel Separator - <MVS>\n\\ufeff - Zero Width No-Break Space - <BOM>\n\\u2000 - En Quad\n\\u2001 - Em Quad\n\\u2002 - En Space - <ENSP>\n\\u2003 - Em Space - <EMSP>\n\\u2004 - Tree-Per-Em\n\\u2005 - Four-Per-Em\n\\u2006 - Six-Per-Em\n\\u2007 - Figure Space\n\\u2008 - Punctuation Space - <PUNCSP>\n\\u2009 - Thin Space\n\\u200A - Hair Space\n\\u200B - Zero Width Space - <ZWSP>\n\\u2028 - Line Separator\n\\u2029 - Paragraph Separator\n\\u202F - Narrow No-Break Space\n\\u205f - Medium Mathematical Space\n\\u3000 - Ideographic Space\n```\n```js\n// 正确\nfunction thing() {\n  return ' <NBSP>thing';\n}\nfunction thing() {\n  return '​<ZWSP>thing';\n}\nfunction thing() {\n  return 'th <NBSP>ing';\n}\n\n// 错误\nfunction thing() /*<NBSP>*/{\n  return 'test';\n}\n\nfunction thing( /*<NBSP>*/){\n  return 'test';\n}\n\nfunction thing /*<NBSP>*/(){\n  return 'test';\n}\n\nfunction thing᠎/*<MVS>*/(){\n  return 'test';\n}\n\nfunction thing() {\n  return 'test'; /*<ENSP>*/\n}\n\nfunction thing() {\n  return 'test'; /*<NBSP>*/\n}\n\nfunction thing() {\n  // Description <NBSP>: some descriptive text\n}\n\n/*\nDescription <NBSP>: some descriptive text\n*/\n\nfunction thing() {\n  return / <NBSP>regexp/;\n}\n\n/*eslint-env es6*/\nfunction thing() {\n  return `template <NBSP>string`;\n}\n```\n# no-iterator\n迭代器\n```\n'no-iterator': 2\n```\n不要自定义迭代器的属性，未来会有迭代器\n```js\n// 正确\nvar __iterator__ = foo; // Not using the `__iterator__` property.\n\n// 错误\nFoo.prototype.__iterator__ = function() {\n    return new FooIterator(this);\n};\nfoo.__iterator__ = function () {};\nfoo[\"__iterator__\"] = function () {};\n```\n# no-label-var\n函数标签\n```\n'no-label-var': 2\n```\n不要把函数标签跟变量冲突\n```js\n// 正确\nfunction foo() {\n  var q = t;\n}\nfunction bar() {\nq:\n  for(;;) {\n    break q;\n  }\n}\n\n// 错误\nvar x = foo;\nfunction bar() {\nx:\n  for (;;) {\n    break x;\n  }\n}\n```\n# no-labels\n标签\n```\n'no-labels': [2, {\n  'allowLoop': false,\n  'allowSwitch': false\n}]\n```\n循环和switch不要设置标签\n```js\n// 正确\nvar f = {\n  label: \"foo\"\n};\nwhile (true) {\n  break;\n}\nwhile (true) {\n  continue;\n}\n\n// 错误\nlabel:\n  while(true) {\n    // ...\n  }\n\nlabel:\n  while(true) {\n    break label;\n  }\n\nlabel:\n  while(true) {\n    continue label;\n  }\n\nlabel:\n  switch (a) {\n    case 0:\n      break label;\n    }\n\nlabel:\n  {\n    break label;\n  }\n\nlabel:\n  if (a) {\n    break label;\n  }\n```\n# no-lone-blocks\n空闭包\n```\n'no-lone-blocks': 2\n```\n不要使用空闭包\n```js\n//正确\nwhile (foo) {\n  bar();\n}\nif (foo) {\n  if (bar) {\n    baz();\n  }\n}\nfunction bar() {\n  baz();\n}\n{\n  let x = 1;\n}\n{\n  const y = 1;\n}\n{\n  class Foo {}\n}\naLabel: {\n}\n\n//错误\n{}\nif (foo) {\n  bar();\n  {\n    baz();\n  }\n}\nfunction bar() {\n  {\n    baz();\n  }\n}\n{\n  function foo() {}\n}\n{\n  aLabel: {\n  }\n}\n```\n# no-multi-str\n换行字符串\n```\n'no-multi-str': 2\n```\n换行请用\\n，不要用格式的字符串，很可能除了换行多了很多别的东西\n```js\n//正确\nvar x = \"Line 1\\n\" +\n  \"Line 2\";\n\n//错误\nvar x = \"Line 1 \\\n  Line 2\";\n```\n# no-multiple-empty-lines\n空行\n```\n'no-multiple-empty-lines': [2, {\n  'max': 1\n}]\n```\n禁止空行超过1\n```js\n//正确\nvar foo = 5;\n// 一行\nvar bar = 3;\n\n//错误\nvar foo = 5;\n// 超过了一行\n\nvar bar = 3;\n```\n# no-native-reassign\n原生定义\n```\n'no-native-reassign': 2\n```\n不要重定义环境\n```js\n//错误\nObject = null;\nundefined = 1;\nwindow = {};\nlength = 1;\ntop = 1;\n```\n# no-negated-in-lhs\n负运算\n```\n'no-negated-in-lhs': 2\n```\n非应该优先级最高，但是低于in表达式\n```js\n//正确\nif(!(key in object)) {\n  // key不在object对象中\n}\nif(('' + !key) in object) {\n  // 括号的优先级永远最高，但是key需要是字符串，所以需要转化成字符串\n}\n\n//错误\nif(!key in object) {\n  // 这个实际是(key in object)，但是大部分人看来认为是非key在object\n}\n```\n# no-new-object\nnew定义object\n```\n'no-new-object': 2\n```\n使用{}定义object比new Object()写的更方便\n```js\n//正确\nvar myObject = new CustomObject();\nvar myObject = {};\n\n//错误\nvar myObject = new Object();\nvar myObject = new Object;\n```\n# no-new-require\nnew定义require\n```\n'no-new-require': 2\n```\n禁止require的module直接new\n```js\n//正确\nvar AppHeader = require('app-header');\nvar appHeader = new AppHeader();\n\n//错误\nvar appHeader = new require('app-header');\n```\n# no-new-symbol\nsymbol类\n```\n'no-new-symbol': 2\n```\nsymbol是一个function并且不带构造\n```js\n//正确\nvar foo = Symbol('foo');\n\n//错误\nvar foo = new Symbol('foo');\n```\n# no-new-wrappers\n包装对象\n```\n'no-new-wrappers': 2\n```\n不需要构造的类型，都直接用函数方式\n```js\n//正确\nvar text = String(someValue);\nvar num = Number(someValue);\n\nvar object = new MyString();\n\n//错误\nvar stringObject = new String(\"Hello world\");\nvar numberObject = new Number(33);\nvar booleanObject = new Boolean(false);\n\nvar stringObject = new String;\nvar numberObject = new Number;\nvar booleanObject = new Boolean;\n```\n# no-obj-calls\n非函数类\n```\n'no-obj-calls': 2\n```\n全局类不要用函数方式调用\n```js\n//正确\nfunction area(r) {\n  return Math.PI * r * r;\n}\nvar object = JSON.parse(\"{}\");\nvar value = Reflect.get({ x: 1, y: 2 }, \"x\");\n\n//错误\nvar math = Math();\nvar json = JSON();\nvar reflect = Reflect();\n```\n# no-octal\n十进制数的导零\n```\n'no-octal': 2\n```\n禁止十进制数用导零\n```js\n//正确\nvar num  = \"071\";\n\n//错误\nvar num = 071;\nvar result = 5 + 07;\n```\n# no-octal-escape\n十进制转义\n```\n'no-octal-escape': 2\n```\n禁止十进制转义\n```js\n//正确\nvar foo = \"Copyright \\u00A9\";   // unicode码\nvar foo = \"Copyright \\xA9\";     // 十六进制\n\n//错误\nvar foo = \"Copyright \\251\"; // 十进制\n```\n# no-path-concat\n地址链接\n```\n'no-path-concat': 2\n```\n禁止直接把地址做链接\n```js\n//正确\nvar fullPath = dirname + \"/foo.js\";\nvar fullPath = path.join(__dirname, \"foo.js\");\nvar fullPath = path.resolve(__dirname, \"foo.js\");\n\n//错误\nvar fullPath = __dirname + \"/foo.js\";\nvar fullPath = __filename + \"/foo.js\";\n```\n# no-proto\n原型\n```\n'no-proto': 2\n```\n禁止直接操作或者定义原型\n```js\n//正确\nvar a = Object.getPrototypeOf(obj);\nObject.setPrototypeOf(obj, b);\nvar c = { __proto__: a };\n\n//错误\nvar a = obj.__proto__;\nvar a = obj[\"__proto__\"];\nobj.__proto__ = b;\nobj[\"__proto__\"] = b;\n```\n# no-redeclare\n变量重生命\n```\n'no-redeclare': 2\n```\n禁止变量重复声明\n```js\n//错误\nvar a = 3;\nvar a = 10;\n```\n# no-return-assign\n返回定义\n```\n'no-return-assign': [2, 'except-parens']\n```\n禁止在返回时候做定义\n```js\n//错误\nfunction doSomething() {\n  return foo = bar + 2;\n}\nfunction doSomething() {\n  return foo += 2;\n}\n```\n# no-self-assign\n自定义\n```\n'no-self-assign': 2\n```\n禁止自己给自己定义\n```js\n//错误\nfoo = foo;\n[a, b] = [a, b];\n[a, ...b] = [x, ...b];\n({a, b} = {a, x});\n```\n# no-self-compare\n自比较\n```\n'no-self-compare': 2\n```\n禁止自己跟自己比较\n```js\n//错误\nvar x = 10;\nif (x === x) {\n    x = 20;\n}\n```\n# no-sequences\n序列\n```\n'no-sequences': 2\n```\n禁止逗号操作\n```js\n//正确\nfoo = (doSomething(), val);\n(0, eval)(\"doSomething();\");\ndo {} while ((doSomething(), !!test));\nfor (i = 0, j = 10; i < j; i++, j--);\nif ((doSomething(), !!test));\nswitch ((val = foo(), val)) {}\nwhile ((val = foo(), val < 42));\n\n//错误\nfoo = doSomething(), val;\n0, eval(\"doSomething();\");\ndo {} while (doSomething(), !!test);\nfor (; doSomething(), !!test; );\nif (doSomething(), !!test);\nswitch (val = foo(), val) {}\nwhile (val = foo(), val < 42);\nwith (doSomething(), val) {}\n```\n# no-shadow-restricted-names\n严格命名\n```\n'no-shadow-restricted-names': 2\n```\n禁止使用预留字段命名\n```js\n//错误\nfunction NaN(){}\n!function(Infinity){};\nvar undefined = 5;\ntry {} catch(eval){}\n```\n# no-this-before-super\nthis在超类之前\n```\n'no-this-before-super': 2\n```\n禁止在超类之前使用this\n```js\n//正确\nclass A {\n  constructor() {\n    this.a = 0; // OK, 没有继承也就没有super\n  }\n}\nclass A extends B {\n  constructor() {\n    super();\n    this.a = 0; // OK, 成员变量赋值在super之后.\n  }\n}\nclass A extends B {\n  foo() {\n    this.a = 0; // OK. 使用this的作用域不是构造.\n  }\n}\n\n//错误\nclass A extends B {\n  constructor() {\n    this.a = 0; // super之前赋值成员变量\n    super();\n  }\n}\nclass A extends B {\n  constructor() {\n    this.foo(); // super之前调用方法\n    super();\n  }\n}\nclass A extends B {\n  constructor() {\n    super.foo();  // super之前调用静态方法\n    super();\n  }\n}\nclass A extends B {\n  constructor() {\n    super(this.foo());  // 参数传递之前并未super\n  }\n}\n```\n# no-throw-literal\n抛出异常\n```\n'no-throw-literal': 2\n```\n抛出错误需要是Error\n```js\n//正确\nthrow new Error();\n\nthrow new Error(\"error\");\n\nvar e = new Error(\"error\");\nthrow e;\n\ntry {\n  throw new Error(\"error\");\n} catch (e) {\n  throw e;  //  catch的参数就是Error类\n}\n\n//错误\nthrow \"error\";\nthrow 0;\nthrow undefined;\nthrow null;\nvar err = new Error();\nthrow \"an \" + err;\n// err is recast to a string literal\nvar err = new Error();\nthrow `${err}`\n```\n# no-undef\n未定义变量\n```\n'no-undef': 2\n```\n禁止使用未定义变量\n```js\n//错误\nb = 10; // 变量b没有定义，严格模式下语法错误\n```\n# no-undef-init\n未定义赋值\n```\n'no-undef-init': 2\n```\n禁止赋值为undefined\n```js\n//正确\nvar foo;\nlet bar;\nconst baz = undefined;\n\n//错误\nvar foo = undefined;\nlet bar = undefined;\n```\n# no-unexpected-multiline\n多行\n```\n'no-unexpected-multiline': 2\n```\n禁止不必要的多行\n```js\n//正确\nvar foo = bar;\n(1 || 2).baz();\n\nvar foo = bar\n;(1 || 2).baz()\n\nvar hello = 'world';\n[1, 2, 3].forEach(addNumber);\n\nvar hello = 'world'\nvoid [1, 2, 3].forEach(addNumber);\n\nlet x = function() {};\n`hello`\n\nlet tag = function() {}\ntag `hello`\n\n//错误\nvar foo = bar\n(1 || 2).baz();\n\nvar hello = 'world'\n[1, 2, 3].forEach(addNumber);\n\nlet x = function() {}\n`hello`\n\nlet x = function() {}\nx\n`hello`\n\nlet x = foo\n/regex/g.test(bar)\n```\n# no-unmodified-loop-condition\n循环中未修改的条件\n```\n'no-unmodified-loop-condition': 2\n```\n禁止循环中出现未修改的条件\n```js\n//正确\nwhile (node) {\n  doSomething(node);\n  node = node.parent;\n}\nfor (var j = 0; j < items.length; ++j) {\n  doSomething(items[j]);\n}\nwhile (node !== root) {\n  doSomething(node);\n  node = node.parent; // node在循环中改变\n}\nwhile (node ? A : B) {\n  doSomething(node);\n  node = node.parent; // 三元表达式在循环中改变\n}\nwhile (obj.foo) {\n  doSomething(obj); // doSomething函数可能修改obj的foo属性\n}\nwhile (check(obj)) { // check函数可能返回多样的值\n  doSomething(obj);\n}\n\n//错误\nwhile (node) {\n  doSomething(node);\n}\nnode = other; // 条件在循环外改变\n\nfor (var j = 0; j < items.length; ++i) { // 条件j和items没有在循环中改变\n  doSomething(items[j]);\n}\nwhile (node !== root) { // 条件node和root没有在循环中改变\n  doSomething(node);\n}\n```\n# no-unneeded-ternary\n不必要的三元表达式\n```\n'no-unneeded-ternary': [2, {\n  'defaultAssignment': false\n}]\n```\n禁止不必要的三元表达式\n```js\n//正确\nvar a = x === 2 ? \"Yes\" : \"No\";\nvar a = x !== false;\nvar a = x ? \"Yes\" : \"No\";\nvar a = x ? y : x;\nvar a = x ? x : 1;\n\n//错误\nvar a = x === 2 ? true : false; // 直接写 var a = x === 2 就行了\nvar a = x ? true : false; // 直接写 var a = x 就行了\nvar a = f(x ? x : 1); // 直接写 f(x || 1) 就行了\n```\n# no-unreachable\n未到达\n```\n'no-unreachable': 2\n```\n禁止未到达部分还有表达式，比如return、throw、break、continue之后的表达式\n```js\n//错误\nfunction foo() {\n  return true;\n  console.log(\"done\");\n}\n\nfunction bar() {\n  throw new Error(\"Oops!\");\n  console.log(\"done\");\n}\n\nwhile(value) {\n  break;\n  console.log(\"done\");\n}\n\nthrow new Error(\"Oops!\");\nconsole.log(\"done\");\n\nfunction baz() {\n  if (Math.random() < 0.5) {\n    return;\n  } else {\n    throw new Error();\n  }\n  console.log(\"done\");\n}\n```\n# no-unsafe-finally\n不安全的finally\n```\n'no-unsafe-finally': 2\n```\n禁止在finally中使用 return、throw、break 和 continue \n```js\n//正确\n\n//错误\nlet foo = function() {\n  try {\n    return 1;\n  } catch(err) {\n    return 2;\n  } finally {\n    return 3;\n  }\n};\nlet foo = function() {\n  try {\n    return 1;\n  } catch(err) {\n    return 2;\n  } finally {\n    throw new Error;\n  }\n};\n```\n# no-unused-vars\n未使用的变量\n```\n'no-unused-vars': [1, {\n  'vars': 'local',\n  'args': 'none'\n}]\n```\n未使用的变量，我们为了方便调试，因为很多时候我们预先留好参数，修改了级别为警告\n```js\n//错误\n(function(a, b, c) { // c没有使用\n  return a + b;\n})(1, 2);\n```\n# no-useless-call\n不必要的调用\n```\n'no-useless-call': 2\n```\n禁止不必要的call和apply\n```js\n//正确\nfoo.call(obj, 1, 2, 3);\nfoo.apply(obj, [1, 2, 3]);\nobj.foo.call(null, 1, 2, 3);\nobj.foo.apply(null, [1, 2, 3]);\nobj.foo.call(otherObj, 1, 2, 3);\nobj.foo.apply(otherObj, [1, 2, 3]);\n\n// argument list 是有效的\nfoo.apply(undefined, args);\nfoo.apply(null, args);\nobj.foo.apply(obj, args);\n\n//错误\n// 这跟foo(1, 2, 3)一样\nfoo.call(undefined, 1, 2, 3);\nfoo.apply(undefined, [1, 2, 3]);\nfoo.call(null, 1, 2, 3);\nfoo.apply(null, [1, 2, 3]);\n// 这跟foo(1, 2, 3)一样\nobj.foo.call(obj, 1, 2, 3);\nobj.foo.apply(obj, [1, 2, 3]);\n```\n# no-useless-computed-key\n```\n'no-useless-computed-key': 2\n```\n```js\n//正确\nvar foo = {\"a\": \"b\"};\n\n//错误\nvar foo = {[\"a\"]: \"b\"};\n```\n# no-useless-constructor\n无用的构造\n```\n'no-useless-constructor': 2\n```\n禁止无用的构造\n```js\n//错误\nclass A {\n  constructor () { // 构造没任何用\n  }\n}\n\nclass A extends B {\n  constructor (...args) {\n    super(...args); // 不写这个也会有这个构造\n  }\n}\n```\n# no-useless-escape\n不必要的转义\n```\n'no-useless-escape': 0\n```\n禁止不必要的转义\n```js\n//正确\n\"\\\"\";\n'\\'';\n\"\\x12\";\n\"\\u00a9\";\n\"\\371\";\n\"xs\\u2111\";\n`\\``;\n`\\${${foo}}`;\n`$\\{${foo}}`;\n/\\\\/g;\n/\\t/g;\n/\\w\\$\\*\\^\\./;\n\n//错误\n\"\\'\";\n'\\\"';\n\"\\#\";\n\"\\e\";\n`\\\"`;\n`\\\"${foo}\\\"`;\n`\\#{foo}`;\n/\\!/;\n/\\@/;\n```\n# no-whitespace-before-property\n属性前的空格\n```\n'no-whitespace-before-property': 2\n```\n属性前不要有空格\n```js\n//正确\nfoo.bar\nfoo[bar]\nfoo[ bar ]\nfoo.bar.baz\nfoo\n  .bar().baz()\nfoo\n  .bar()\n  .baz()\nfoo.\n  bar().\n  baz()\n\n//错误\nfoo [bar]\nfoo. bar\nfoo .bar\nfoo. bar. baz\nfoo. bar()\n  .baz()\nfoo\n  .bar(). baz()\n```\n# no-with\n不使用with\n```\n'no-with': 2\n```\nwith有潜在的风险，现在已经有很多方式可以代替with了\n```js\n//正确\nconst r = ({x, y}) => Math.sqrt(x * x + y * y);\n\n//错误\nwith (point) {\n  r = Math.sqrt(x * x + y * y); // r是否point的属性呢？\n}\n```\n# one-var\n单变量\n```\n'one-var': [2, {\n  'initialized': 'never'\n}]\n```\n为了浏览方便，可以一次定义多个变量，但是不要一次给多个变量赋值\n```js\n//正确\nfunction foo() {\n  var foo = true;\n  var bar = false;\n  var a, b, c; // Uninitialized variables are ignored\n}\n\n//错误\nfunction foo() {\n  var foo = true,\n    bar = false;\n}\n```\n# operator-linebreak\n操作符\n```\n'operator-linebreak': [2, 'after', {\n  'overrides': {\n    '?': 'before',\n    ':': 'before'\n  }\n}]\n```\n操作符紧跟之后，三元表达式在之前\n```js\n//正确\nfoo = 1 + 2;\nfoo = 1 +\n  2;\nfoo =\n  5;\nif (someCondition ||\n  otherCondition) {\n}\nanswer = everything ?\n  42 :\n  foo;\n\n//错误\nfoo = 1\n+\n2;\nfoo = 1\n  + 2;\nfoo\n  = 5;\nif (someCondition\n  || otherCondition) {\n}\nanswer = everything\n  ? 42\n  : foo;\n```\n# quotes\n引号\n```\n'quotes': [2, 'single', {\n  'avoidEscape': true,\n  'allowTemplateLiterals': true\n}]\n```\n为了统一，请字符串用单引号，但是为了防止转义是可以用双引号的\n```js\n//正确\nvar single = 'single';\nvar backtick = `back${x}tick`; // 允许模板\nvar unescaped = \"a string containing 'single' quotes\"; // 为了避免转义单引号，可以用双引号\n\n//错误\nvar double = \"double\";\n```\n# semi\n分号\n```\n'semi': [2, 'always']\n```\n必须加分号\n```js\n//正确\nvar website = \"eslint.org\";\n\n//错误\nvar name = \"ESLint\"\n```\n# semi-spacing\n分号空白\n```\n'semi-spacing': [2, {\n  'before': false,\n  'after': true\n}]\n```\n左边不能有空白，右边必须有空白\n```js\n//正确\nvar foo;\nvar foo; var bar;\nthrow new Error(\"error\");\nwhile (a) { break; }\nfor (i = 0; i < 10; i++) {}\nfor (;;) {}\nif (true) {;}\n;foo();\n\n//错误\nvar foo ;\nvar foo;var bar;\nthrow new Error(\"error\") ;\nwhile (a) { break ; }\nfor (i = 0 ; i < 10 ; i++) {}\nfor (i = 0;i < 10;i++) {}\n```\n# space-in-parens\n参数空白\n```\n'space-in-parens': [2, 'never']\n```\n函数的参数括号两边不留空白\n```js\n//正确\nfoo();\nfoo('bar');\nvar foo = (1 + 2) * 3;\n(function () { return 'bar'; }());\n\n//错误\nfoo( 'bar');\nfoo('bar' );\nfoo( 'bar' );\nvar foo = ( 1 + 2 ) * 3;\n( function () { return 'bar'; }() );\n```\n# space-infix-ops\n操作符空白\n```\n'space-infix-ops': 2\n```\n操作符两边留空白\n```js\n//正确\na + b\na       + b\na ? b : c\nconst a = {b:1};\nvar {a = 0} = bar;\nfunction foo(a = 0) { }\n\n//错误\na+b\na+ b\na +b\na?b:c\nconst a={b:1};\nvar {a=0}=bar;\nfunction foo(a=0) { }\n```\n# space-unary-ops\n单元操作符空格\n```\n'space-unary-ops': [2, {\n  'words': true,\n  'nonwords': false\n}]\n```\n```js\n//正确\ndelete foo.bar; // 文字操作符需要有空格\nnew Foo; // 文字操作符需要有空格\nvoid 0; // 文字操作符需要有空格\n++foo; // 非文字操作符不能有空格\nfoo--; // 非文字操作符不能有空格\n-foo; // 非文字操作符不能有空格\n+\"3\"; // 非文字操作符不能有空格\n\n//错误\ntypeof!foo;\nvoid{foo:0};\nnew[foo][0];\ndelete(foo.bar);\n++ foo;\nfoo --;\n- foo;\n+ \"3\";\n```\n# spaced-comment\n注释的空格\n```\n'spaced-comment': [2, 'always', {\n  'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n}]\n```\n注释需要加个空格\n```js\n//正确\n// This is a comment with a whitespace at the beginning\n/* This is a comment with a whitespace at the beginning */\n/*\n * This is a comment with a whitespace at the beginning\n */\n/*\nThis comment has a newline\n*/\n\n//错误\n//This is a comment with no whitespace at the beginning\n/*This is a comment with no whitespace at the beginning */\n```\n# template-curly-spacing\n模板中的变量\n```\n'template-curly-spacing': [2, 'never']\n```\n模板中的变量不要加空格\n```js\n//正确\n`hello, ${people.name}!`;\n`hello, ${\n  people.name\n}!`;\n\n//错误\n`hello, ${ people.name}!`;\n`hello, ${people.name }!`;\n`hello, ${ people.name }!`;\n```\n# use-isnan\n非数字\n```\n'use-isnan': 2\n```\n判断非数字，请使用isNaN函数\n```js\n//正确\nif (isNaN(foo)) {\n  // ...\n}\nif (!isNaN(foo)) {\n  // ...\n}\n\n//错误\nif (foo == NaN) {\n  // ...\n}\nif (foo != NaN) {\n  // ...\n}\n```\n# valid-typeof\n正确的类型\n```\n'valid-typeof': 2\n```\n请使用正确的类型\n```js\n//正确\ntypeof foo === \"string\"\ntypeof bar == \"undefined\"\ntypeof foo === baz\ntypeof bar === typeof qux\n\n//错误\ntypeof foo === \"strnig\"\ntypeof foo == \"undefimed\"\ntypeof bar != \"nunber\"\ntypeof bar !== \"fucntion\"\n```\n# wrap-iife\n闭包调用\n```\n'wrap-iife': [2, 'any']\n```\n直接调用函数需要括号括起来\n```js\n//正确\nvar x = (function () { return { y: 1 };}());\nvar x = (function () { return { y: 1 };})();\n\n//错误\nvar x = function () { return { y: 1 };}();\n```\n# yoda\n```\n'yoda': [2, 'never']\n```\n条件里，变量在左，对比的值在右\n```js\n//正确\nif (5 & value) {\n  // ...\n}\nif (value === \"red\") {\n  // ...\n}\n\n//错误\nif (\"red\" === color) {\n  // ...\n}\nif (true == flag) {\n  // ...\n}\nif (5 > count) {\n  // ...\n}\nif (-1 < str.indexOf(substr)) {\n  // ...\n}\nif (0 <= x && x < 1) {\n  // ...\n}\n```\n# prefer-const\n常量\n```\n'prefer-const': 1\n```\n没有被重定义的变量请用const，但是开发过程中经常有暂时没有重定义的变量，所以修改了警告级别\n```js\n//错误\nlet a = 3;\nconsole.log(a);\n\nlet a;\na = 0;\nconsole.log(a);\n\nfor (let i in [1, 2, 3]) { // 遍历时候i不会被重定义\n    console.log(i);\n}\n\nfor (let a of [1, 2, 3]) { // 遍历时候i不会被重定义\n    console.log(a);\n}\n```\n# no-debugger\n调试\n```\n'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0\n```\n在正式环境中不能有调试，开发环境关闭\n```js\nfunction isTruthy(x) {\n  debugger;\n  return Boolean(x);\n}\n```\n# object-curly-spacing\n对象空格\n```\n'object-curly-spacing': [2, 'always', {\n  objectsInObjects: false\n}]\n```\n定义对象的大括号内两边加空格\n```js\n//正确\nvar obj = {};\nvar obj = { 'foo': 'bar' };\nvar obj = { 'foo': { 'bar': 'baz' }, 'qux': 'quxx' };\nvar obj = {\n  'foo': 'bar'\n};\nvar { x } = y;\nimport { foo } from 'bar';\n\n//错误\nvar obj = {'foo': 'bar'};\nvar obj = {'foo': 'bar' };\nvar obj = { baz: {'foo': 'qux'}, bar};\nvar obj = {baz: { 'foo': 'qux' }, bar};\nvar obj = {'foo': 'bar'\n};\nvar obj = {\n  'foo':'bar'};\nvar {x} = y;\nimport {foo } from 'bar';\n```\n# array-bracket-spacing\n数组空格\n```\n'array-bracket-spacing': [2, 'never']\n```\n定义数字的中括号内，无空格\n```js\n//正确\nvar arr = [];\nvar arr = ['foo', 'bar'];\nvar arr = [\n  'foo',\n  'bar'\n];\n\n//错误\nvar arr = [ 'foo', 'bar' ];\nvar arr = ['foo', 'bar' ];\nvar arr = [ ['foo'], 'bar'];\nvar arr = [[ 'foo' ], 'bar'];\n```\n","slug":"eslint","published":1,"updated":"2019-09-02T03:43:55.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck01v9ui1000b3si2cx06xrgu","content":"<h1 id=\"ESLint配置详细解析\"><a href=\"#ESLint配置详细解析\" class=\"headerlink\" title=\"ESLint配置详细解析\"></a>ESLint配置详细解析</h1><p>我们项目用的vue以及想相关的解析  </p>\n<blockquote>\n<p>如果出现下面这样的报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">error  Requires a space before &apos;&#125;&apos;  block-spacing</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>按照最后一个关键词，就可以找到正确的写法  </p>\n</blockquote>\n<p>下面就是所有的配置</p>\n<h1 id=\"accessor-pairs\"><a href=\"#accessor-pairs\" class=\"headerlink\" title=\"accessor-pairs\"></a>accessor-pairs</h1><p>对象中强制配对set和get<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;accessor-pairs&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>就是对象中不能设置了set却没有get，但是有get没有set是可以的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">set</span> a(value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.val = value;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">set</span> a(value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.val = value;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">get</span> a() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.val;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">get</span> a() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.val;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"space\"><a href=\"#space\" class=\"headerlink\" title=\"space\"></a>space</h1><p>空格</p>\n<h2 id=\"arrow-spacing\"><a href=\"#arrow-spacing\" class=\"headerlink\" title=\"arrow-spacing\"></a>arrow-spacing</h2><p>箭头函数前后空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;arrow-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;before&apos;: true,</span><br><span class=\"line\">  &apos;after&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们要求箭头函数必须前后有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &#123; \"before\": true, \"after\": true &#125;前后都要有空格</span></span><br><span class=\"line\">(a) =&gt; &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &#123; \"before\": false, \"after\": false &#125;前后都不能有空格</span></span><br><span class=\"line\">(a)=&gt;&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"block-spacing\"><a href=\"#block-spacing\" class=\"headerlink\" title=\"block-spacing\"></a>block-spacing</h2><p>大括号之内的空格或者换行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;block-spacing&apos;: [2, &apos;always&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>我们要求大括号之内前后必须有空格或者换行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; &#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; bar = <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">baz</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;&#125;<span class=\"comment\">//两边都没空格</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; bar = <span class=\"number\">0</span>;&#125;<span class=\"comment\">//右边没空格</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">baz</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;<span class=\"comment\">//左边没有换行或者空格</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"key-spacing\"><a href=\"#key-spacing\" class=\"headerlink\" title=\"key-spacing\"></a>key-spacing</h2><p>属性空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;key-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;beforeColon&apos;: false,</span><br><span class=\"line\">  &apos;afterColon&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>默认是属性之前没有空格之后有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"string\">\"foo\"</span>: <span class=\"number\">42</span> &#125;;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"keyword-spacing\"><a href=\"#keyword-spacing\" class=\"headerlink\" title=\"keyword-spacing\"></a>keyword-spacing</h2><p>关键字空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;keyword-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;before&apos;: true,</span><br><span class=\"line\">  &apos;after&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>关键字前后都加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bar) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bar) &#123;<span class=\"comment\">// 关键字else前面没有空格</span></span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;<span class=\"comment\">// 关键字else后面没有空格</span></span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"generator-star-spacing\"><a href=\"#generator-star-spacing\" class=\"headerlink\" title=\"generator-star-spacing\"></a>generator-star-spacing</h2><p>生成器的星号空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;generator-star-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;before&apos;: true,</span><br><span class=\"line\">  &apos;after&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们要求星号前后都有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> * <span class=\"title\">generator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"44\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"55\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>* <span class=\"title\">generator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"44\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"55\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> *<span class=\"title\">generator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"44\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"55\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"yield-star-spacing\"><a href=\"#yield-star-spacing\" class=\"headerlink\" title=\"yield-star-spacing\"></a>yield-star-spacing</h1><p>生产的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;yield-star-spacing&apos;: [2, &apos;both&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>生产跟生成器一样两边加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> * <span class=\"title\">generator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> * other();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-multi-spaces\"><a href=\"#no-multi-spaces\" class=\"headerlink\" title=\"no-multi-spaces\"></a>no-multi-spaces</h2><p>多空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-multi-spaces&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止多空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(foo === <span class=\"string\">\"bar\"</span>) &#123;&#125;</span><br><span class=\"line\">a &lt;&lt; b</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\">a ? b: c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a =  <span class=\"number\">1</span>; <span class=\"comment\">// 等号右边多了空格</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(foo   === <span class=\"string\">\"bar\"</span>) &#123;&#125;  <span class=\"comment\">// 全等左边多了空格</span></span><br><span class=\"line\">a &lt;&lt;  b <span class=\"comment\">// 逻辑左移右边两个空格</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,  <span class=\"number\">2</span>];  <span class=\"comment\">// 数组元素中间多了空格</span></span><br><span class=\"line\">a ?  b: c <span class=\"comment\">//?后面多了空格</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"space-before-blocks\"><a href=\"#space-before-blocks\" class=\"headerlink\" title=\"space-before-blocks\"></a>space-before-blocks</h2><p>括号前的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-before-blocks&apos;: [2, &apos;always&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>括号之前要有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  c();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">    b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;&#125; <span class=\"keyword\">catch</span>(a) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a)&#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (;;)&#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;&#125; <span class=\"keyword\">catch</span>(a)&#123;&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>()&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"space-before-function-paren\"><a href=\"#space-before-function-paren\" class=\"headerlink\" title=\"space-before-function-paren\"></a>space-before-function-paren</h2><p>函数空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-before-function-paren&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>定义函数函数的括号之前不写空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  bar() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">async</span>() =&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> () &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  bar () &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">async</span> () =&gt; <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-spaced-func\"><a href=\"#no-spaced-func\" class=\"headerlink\" title=\"no-spaced-func\"></a>no-spaced-func</h2><p>函数空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-spaced-func&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>函数间不要有任何空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">fn()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">fn ()</span><br><span class=\"line\"></span><br><span class=\"line\">fn</span><br><span class=\"line\">()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"padded-blocks\"><a href=\"#padded-blocks\" class=\"headerlink\" title=\"padded-blocks\"></a>padded-blocks</h2><p>声明中的空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;padded-blocks&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>声明中不要有空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  b();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-trailing-spaces\"><a href=\"#no-trailing-spaces\" class=\"headerlink\" title=\"no-trailing-spaces\"></a>no-trailing-spaces</h2><p>句尾空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-trailing-spaces&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止在句尾也就是分号之后加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">0</span>;<span class=\"comment\">//•••••</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> baz = <span class=\"number\">5</span>;<span class=\"comment\">//••</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"eol-last\"><a href=\"#eol-last\" class=\"headerlink\" title=\"eol-last\"></a>eol-last</h2><p>页面结尾<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;eol-last&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>页面的结尾必须有一个空行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSmth</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;\\n</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"brace-style\"><a href=\"#brace-style\" class=\"headerlink\" title=\"brace-style\"></a>brace-style</h1><p>括号样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;brace-style&apos;: [2, &apos;1tbs&apos;, &#123;</span><br><span class=\"line\">  &apos;allowSingleLine&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们设置1tbs的的样式，以及允许单行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  baz();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  somethingRisky();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">  handleError();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 没有大括号，没有问题</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) bar();</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (baz) boom();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许单行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">nop</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; bar(); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; bar(); &#125; <span class=\"keyword\">else</span> &#123; baz(); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123; somethingRisky(); &#125; <span class=\"keyword\">catch</span>(e) &#123; handleError(); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;<span class=\"comment\">// 大括号开始需要跟方法同一行</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo)</span><br><span class=\"line\">&#123;<span class=\"comment\">// 大括号开始需要跟控制同一行</span></span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span></span><br><span class=\"line\">&#123; <span class=\"comment\">// 大括号开始需要跟控制同一行</span></span><br><span class=\"line\">  somethingRisky();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(e)</span><br><span class=\"line\">&#123; <span class=\"comment\">// 大括号开始需要跟捕获同一行</span></span><br><span class=\"line\">  handleError();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125;<span class=\"comment\">// 大括号结束需要跟后续同一行</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  baz();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"camelcase\"><a href=\"#camelcase\" class=\"headerlink\" title=\"camelcase\"></a>camelcase</h1><p>驼峰样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;camelcase&apos;: [0, &#123;</span><br><span class=\"line\">  &apos;properties&apos;: &apos;always&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们关闭了规则，虽然建议大家都要用驼峰命名变量，但是有时候我们引用的module不是驼峰的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; no_camelcased <span class=\"keyword\">as</span> camelCased &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"external-module\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myFavoriteColor   = <span class=\"string\">\"#112C85\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> _myFavoriteColor  = <span class=\"string\">\"#112C85\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> myFavoriteColor_  = <span class=\"string\">\"#112C85\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> MY_FAVORITE_COLOR = <span class=\"string\">\"#112C85\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar.baz_boom;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123; <span class=\"attr\">qux</span>: bar.baz_boom &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj.do_something();</span><br><span class=\"line\">do_something();</span><br><span class=\"line\"><span class=\"keyword\">new</span> do_something();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; <span class=\"attr\">category_id</span>: category &#125; = query;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123; isCamelCased &#125;</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123; isCamelCased: isAlsoCamelCased &#125;</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123; isCamelCased = <span class=\"string\">'default value'</span> &#125;</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; categoryId = <span class=\"number\">1</span> &#125; = query;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; <span class=\"attr\">foo</span>: isCamelCased &#125; = bar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; <span class=\"attr\">foo</span>: isCamelCased = <span class=\"number\">1</span> &#125; = quz;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"comma\"><a href=\"#comma\" class=\"headerlink\" title=\"comma\"></a>comma</h1><p>逗号</p>\n<h2 id=\"comma-dangle\"><a href=\"#comma-dangle\" class=\"headerlink\" title=\"comma-dangle\"></a>comma-dangle</h2><p>尾部逗号，区别于默认<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;comma-dangle&apos;: [1, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>数组或者对象，尾部是不能有逗号的，但是为了方便调试，我们只是设置了警告，没有限定为错误<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">    bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">    qux: <span class=\"string\">\"quux\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">foo(&#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  qux: <span class=\"string\">\"quux\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">    bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">    qux: <span class=\"string\">\"quux\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,];</span><br><span class=\"line\"></span><br><span class=\"line\">foo(&#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  qux: <span class=\"string\">\"quux\"</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"comma-spacing\"><a href=\"#comma-spacing\" class=\"headerlink\" title=\"comma-spacing\"></a>comma-spacing</h2><p>逗号空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'comma-spacing'</span>: [<span class=\"number\">2</span>, &#123;</span><br><span class=\"line\">  <span class=\"string\">'before'</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">'after'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们设置的为逗号之前不能有空格，之后必须有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span>, bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span>, <span class=\"string\">\"baz\"</span>: <span class=\"string\">\"qur\"</span>&#125;;</span><br><span class=\"line\">foo(a, b);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Foo(a, b);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a, b</span>)</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span> ,bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span> , <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span> ,<span class=\"string\">\"baz\"</span>: <span class=\"string\">\"qur\"</span>&#125;;</span><br><span class=\"line\">foo(a ,b);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Foo(a ,b);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a ,b</span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"comma-style\"><a href=\"#comma-style\" class=\"headerlink\" title=\"comma-style\"></a>comma-style</h2><p>逗号样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;comma-style&apos;: [2, &apos;last&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>每个单元以逗号结尾<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span>, bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span>,</span><br><span class=\"line\">  bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = [<span class=\"string\">\"apples\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"oranges\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">\"b:\"</span>: <span class=\"number\">2</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span></span><br><span class=\"line\">,</span><br><span class=\"line\">bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span></span><br><span class=\"line\">  , bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = [<span class=\"string\">\"apples\"</span></span><br><span class=\"line\">  , <span class=\"string\">\"oranges\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span></span><br><span class=\"line\">    ,<span class=\"string\">\"b:\"</span>: <span class=\"number\">2</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"regular\"><a href=\"#regular\" class=\"headerlink\" title=\"regular\"></a>regular</h1><p>正则表达式</p>\n<h2 id=\"no-control-regex\"><a href=\"#no-control-regex\" class=\"headerlink\" title=\"no-control-regex\"></a>no-control-regex</h2><p>正则字节控制<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-control-regex&apos;: 0</span><br></pre></td></tr></table></figure></p>\n<p>正常来说使用的正则字节是ascii(0-31)，但是现在后续多了很多，尤其是要用中文，所以我们关掉了这个<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pattern1 = <span class=\"regexp\">/\\x1f/</span>; <span class=\"comment\">//16进制1f就是10进制的31</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pattern2 = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"\\x1f\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-empty-character-class\"><a href=\"#no-empty-character-class\" class=\"headerlink\" title=\"no-empty-character-class\"></a>no-empty-character-class</h2><p>禁止空字节<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-empty-character-class&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>正则表达式中不要有空字节<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\">/^abc/.test(<span class=\"string\">\"abcdefg\"</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">\"abcdefg\"</span>.match(<span class=\"regexp\">/^abc/</span>); <span class=\"comment\">// [\"abc\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\">/^abc[a-z]/.test(<span class=\"string\">\"abcdefg\"</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">\"abcdefg\"</span>.match(<span class=\"regexp\">/^abc[a-z]/</span>); <span class=\"comment\">// [\"abcd\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">/^abc[]/.test(<span class=\"string\">\"abcdefg\"</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"string\">\"abcdefg\"</span>.match(<span class=\"regexp\">/^abc[]/</span>); <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-invalid-regexp\"><a href=\"#no-invalid-regexp\" class=\"headerlink\" title=\"no-invalid-regexp\"></a>no-invalid-regexp</h2><p>无效的正则<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-invalid-regexp&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>错误的正则只有在执行时候才会报错，定义时候不会，所以我们加入验证<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"built_in\">RegExp</span>(<span class=\"string\">'.'</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>;</span><br><span class=\"line\"><span class=\"keyword\">this</span>.RegExp(<span class=\"string\">'['</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"built_in\">RegExp</span>(<span class=\"string\">'['</span>);</span><br><span class=\"line\"><span class=\"built_in\">RegExp</span>(<span class=\"string\">'.'</span>, <span class=\"string\">'z'</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'\\\\'</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-regex-spaces\"><a href=\"#no-regex-spaces\" class=\"headerlink\" title=\"no-regex-spaces\"></a>no-regex-spaces</h2><p>正则空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-regex-spaces&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止直接输入数量的空格，如果有请用{}定义数字<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/foo &#123;3&#125;bar/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"foo &#123;3&#125;bar\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/foo   bar/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"foo   bar\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h1><p>类</p>\n<h2 id=\"constructor-super\"><a href=\"#constructor-super\" class=\"headerlink\" title=\"constructor-super\"></a>constructor-super</h2><p>构造时候使用超类<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();  <span class=\"comment\">// 语法错误，因为没有继承</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>() &#123; &#125;  <span class=\"comment\">// 需要超类</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"new-cap\"><a href=\"#new-cap\" class=\"headerlink\" title=\"new-cap\"></a>new-cap</h2><p>类首字母大写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;new-cap&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;newIsCap&apos;: true,</span><br><span class=\"line\">  &apos;capIsNew&apos;: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>默认为首字母大写<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = Person(); <span class=\"comment\">//并没有要求必须new</span></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> person();<span class=\"comment\">// 类需要首字母大写</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"new-parens\"><a href=\"#new-parens\" class=\"headerlink\" title=\"new-parens\"></a>new-parens</h2><p>插入语<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;new-parens&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>js里，new一个类，如果没有参数，可以不写后面的括号的，但是别的语言都不行，所以统一一下<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> (Person)();</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"Name\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> (Person);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-class-assign\"><a href=\"#no-class-assign\" class=\"headerlink\" title=\"no-class-assign\"></a>no-class-assign</h2><p>类重定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-class-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>class的方式定义的类，不要再重新定义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123; &#125;</span><br><span class=\"line\">A = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">A = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  b() &#123;</span><br><span class=\"line\">    A = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> A = <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  b() &#123;</span><br><span class=\"line\">    A = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-dupe-class-members\"><a href=\"#no-dupe-class-members\" class=\"headerlink\" title=\"no-dupe-class-members\"></a>no-dupe-class-members</h2><p>重复方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-dupe-class-members&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要再类里定义重复的方法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  bar() &#123; &#125;</span><br><span class=\"line\">  bar() &#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  bar() &#123; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">get</span> bar() &#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> bar() &#123; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> bar() &#123; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-dupe-keys\"><a href=\"#no-dupe-keys\" class=\"headerlink\" title=\"no-dupe-keys\"></a>no-dupe-keys</h2><p>重复键<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-dupe-keys&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要定义重复的键<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  bar: <span class=\"string\">\"qux\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  <span class=\"string\">\"bar\"</span>: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  bar: <span class=\"string\">\"qux\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  <span class=\"number\">0x1</span>: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  <span class=\"number\">1</span>: <span class=\"string\">\"qux\"</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"curly\"><a href=\"#curly\" class=\"headerlink\" title=\"curly\"></a>curly</h1><p>圆括号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;curly&apos;: [2, &apos;multi-line&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>函数或者控制可以单行没有大括号，多行需要大括号<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) foo++; <span class=\"keyword\">else</span> doSomething();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) foo++;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bar) baz()</span><br><span class=\"line\"><span class=\"keyword\">else</span> doSomething();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">do</span> something();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (foo);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (foo</span><br><span class=\"line\">  &amp;&amp; bar) baz();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  foo++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; foo++; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  doSomething();</span><br><span class=\"line\">  doSomethingElse();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo)</span><br><span class=\"line\">  doSomething();</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  doSomethingElse();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) foo(</span><br><span class=\"line\">  bar,</span><br><span class=\"line\">  baz);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"dot-location\"><a href=\"#dot-location\" class=\"headerlink\" title=\"dot-location\"></a>dot-location</h1><p>圆点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;dot-location&apos;: [2, &apos;property&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>属性为主体，圆点跟属性作为一个整体<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = object</span><br><span class=\"line\">.property;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = object.property;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = object.</span><br><span class=\"line\">property;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"eqeqeq\"><a href=\"#eqeqeq\" class=\"headerlink\" title=\"eqeqeq\"></a>eqeqeq</h1><p>等式，专门应对不正确的等式类型<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;eqeqeq&apos;: [2, &apos;allow-null&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>我们要求必须同时应对类型，并且允许为空<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\">a === b</span><br><span class=\"line\">foo === <span class=\"literal\">true</span></span><br><span class=\"line\">bananas !== <span class=\"number\">1</span></span><br><span class=\"line\">value === <span class=\"literal\">undefined</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo === <span class=\"string\">'undefined'</span></span><br><span class=\"line\"><span class=\"string\">'hello'</span> !== <span class=\"string\">'world'</span></span><br><span class=\"line\"><span class=\"number\">0</span> === <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"literal\">true</span> === <span class=\"literal\">true</span></span><br><span class=\"line\">foo === <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">a == b</span><br><span class=\"line\">foo == <span class=\"literal\">true</span></span><br><span class=\"line\">bananas != <span class=\"number\">1</span></span><br><span class=\"line\">value == <span class=\"literal\">undefined</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo == <span class=\"string\">'undefined'</span></span><br><span class=\"line\"><span class=\"string\">'hello'</span> != <span class=\"string\">'world'</span></span><br><span class=\"line\"><span class=\"number\">0</span> == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"literal\">true</span> == <span class=\"literal\">true</span></span><br><span class=\"line\">foo == <span class=\"literal\">null</span></span><br></pre></td></tr></table></figure></p>\n<p>可能你会觉得很多地方就是要数字和字符串都适用，那么做个处理就行了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code == <span class=\"number\">200</span> <span class=\"comment\">// 常用的判断request的code，但是有时候给的是数字有时候给的字符串</span></span><br><span class=\"line\">code === <span class=\"number\">200</span> || code === <span class=\"string\">\"200\"</span> <span class=\"comment\">// 我们加上一个字符串的判断就可以了</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>( code ) === <span class=\"number\">200</span> <span class=\"comment\">// 或者专门吧code转化成数字，但是注意一下，字符串不能做16进制的转换，碰上非数字，后面的内容就会丢失</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"handle-callback-err\"><a href=\"#handle-callback-err\" class=\"headerlink\" title=\"handle-callback-err\"></a>handle-callback-err</h1><p>错误回调<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;handle-callback-err&apos;: [2, &apos;^(err|error)$&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>有错误的话要有抛出操作，就是参数一旦有“err”或者“error”一定要针对这个错误做特殊处理<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadData</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err.stack);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generateError</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadData</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">  doSomething(); <span class=\"comment\">// 没做错误处理</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"indent\"><a href=\"#indent\" class=\"headerlink\" title=\"indent\"></a>indent</h1><p>缩进</p>\n<h2 id=\"indent-1\"><a href=\"#indent-1\" class=\"headerlink\" title=\"indent\"></a>indent</h2><p>缩进<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;indent&apos;: [2, 2, &#123;</span><br><span class=\"line\">  &apos;SwitchCase&apos;: 1</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>建议使用两个空格，理由是</p>\n<ul>\n<li>用两个空格的人很多，并且在逐渐增加</li>\n<li>层级多了，也只是一层2个，不会让横向过长<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"exec\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">switch</span>(a)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"a\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"b\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"no-mixed-spaces-and-tabs\"><a href=\"#no-mixed-spaces-and-tabs\" class=\"headerlink\" title=\"no-mixed-spaces-and-tabs\"></a>no-mixed-spaces-and-tabs</h2><p>空格和tabs混排<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-mixed-spaces-and-tabs&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止空格和tabs混排<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">/*tab*/</span><span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"jsx-quotes\"><a href=\"#jsx-quotes\" class=\"headerlink\" title=\"jsx-quotes\"></a>jsx-quotes</h1><p>标签引号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;jsx-quotes&apos;: [2, &apos;prefer-single&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>标签引号请用单引号<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 正确 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">b</span>=<span class=\"string\">'c'</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">b</span>=<span class=\"string\">\"'\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 错误 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">b</span>=<span class=\"string\">\"c\"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"array\"><a href=\"#array\" class=\"headerlink\" title=\"array\"></a>array</h1><p>数组</p>\n<h2 id=\"no-array-constructor\"><a href=\"#no-array-constructor\" class=\"headerlink\" title=\"no-array-constructor\"></a>no-array-constructor</h2><p>数组构造<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-array-constructor&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>数组构造时候可以使用长度作为参数，也可以使用数组中的元素作为参数  </p>\n<blockquote>\n<p>但是这样会有冲突，如果数组中只放了一个数字，那么是长度还是元素呢？<br>所以我们禁止使用元素作为参数构造<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">500</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(someOtherArray.length);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"no-sparse-arrays\"><a href=\"#no-sparse-arrays\" class=\"headerlink\" title=\"no-sparse-arrays\"></a>no-sparse-arrays</h2><p>数组空元素<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-sparse-arrays&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止设置数组的空元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> colors = [ <span class=\"string\">\"red\"</span>, <span class=\"string\">\"blue\"</span>, ]; <span class=\"comment\">// 结尾有个逗号不是语法错误</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> items = [,];</span><br><span class=\"line\"><span class=\"keyword\">var</span> colors = [ <span class=\"string\">\"red\"</span>,, <span class=\"string\">\"blue\"</span> ];</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-caller\"><a href=\"#no-caller\" class=\"headerlink\" title=\"no-caller\"></a>no-caller</h1><p>隐含参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-caller&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>未来版本会去除这个，并且在es5的严格模式中不能用，所以我们禁止<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  foo(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>].map(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">factorial</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> !(n &gt; <span class=\"number\">1</span>) ? <span class=\"number\">1</span> : factorial(n - <span class=\"number\">1</span>) * n;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>.callee(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> !(n &gt; <span class=\"number\">1</span>) ? <span class=\"number\">1</span> : <span class=\"built_in\">arguments</span>.callee(n - <span class=\"number\">1</span>) * n;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-console\"><a href=\"#no-console\" class=\"headerlink\" title=\"no-console\"></a>no-console</h1><p>输出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-console&apos;: &apos;off&apos;</span><br></pre></td></tr></table></figure></p>\n<p>虽然是关闭状态，但是最好做完一个阶段之后去掉输出</p>\n<h1 id=\"no-cond-assign\"><a href=\"#no-cond-assign\" class=\"headerlink\" title=\"no-cond-assign\"></a>no-cond-assign</h1><p>条件定义变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-cond-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要再条件里面定义变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (x === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setHeight</span>(<span class=\"params\">someNode</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    someNode.height = <span class=\"string\">\"100px\"</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">while</span> ((someNode = someNode.parentNode) !== <span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (x = <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setHeight</span>(<span class=\"params\">someNode</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    someNode.height = <span class=\"string\">\"100px\"</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">while</span> (someNode = someNode.parentNode);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-const-assign\"><a href=\"#no-const-assign\" class=\"headerlink\" title=\"no-const-assign\"></a>no-const-assign</h1><p>常量定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-const-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要给常量再赋值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">a = <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-delete-var\"><a href=\"#no-delete-var\" class=\"headerlink\" title=\"no-delete-var\"></a>no-delete-var</h1><p>删除变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-delete-var&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>delete是用来删除属性的，如果删除变量会有非预期的错误<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">a</span>:<span class=\"number\">1</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> obj.a; <span class=\"comment\">//这时候obj是&#123;&#125;，没有了a属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> x;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-dupe-args\"><a href=\"#no-dupe-args\" class=\"headerlink\" title=\"no-dupe-args\"></a>no-dupe-args</h1><p>重复参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-dupe-args&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要再函数中定义重复的参数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a, b, c</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a, b, c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b, c</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a, b, c);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a, b, a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value of the second a:\"</span>, a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b, a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value of the second a:\"</span>, a);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-duplicate-case\"><a href=\"#no-duplicate-case\" class=\"headerlink\" title=\"no-duplicate-case\"></a>no-duplicate-case</h1><p>相同的case<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-duplicate-case&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要设置相同的case<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> one:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>,</span><br><span class=\"line\">  one = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> one:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> one:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"2\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-empty-pattern\"><a href=\"#no-empty-pattern\" class=\"headerlink\" title=\"no-empty-pattern\"></a>no-empty-pattern</h1><p>空匹配<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-empty-pattern&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止空匹配<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;a = &#123;&#125;&#125; = foo; <span class=\"comment\">// 创建变量a</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;a = []&#125; = foo;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;a = &#123;&#125;&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;a = []&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;&#125; = foo;</span><br><span class=\"line\"><span class=\"keyword\">var</span> [] = foo;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;<span class=\"attr\">a</span>: &#123;&#125;&#125; = foo;  <span class=\"comment\">// 不会创建任何变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;<span class=\"attr\">a</span>: []&#125; = foo;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">[]</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;a: &#123;&#125;&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;a: []&#125;</span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-eval\"><a href=\"#no-eval\" class=\"headerlink\" title=\"no-eval\"></a>no-eval</h1><p>转化执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-eval&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止使用eval<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">x</span>: <span class=\"string\">\"foo\"</span> &#125;,</span><br><span class=\"line\">  key = <span class=\"string\">\"x\"</span>,</span><br><span class=\"line\">  value = obj[key];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">x</span>: <span class=\"string\">\"foo\"</span> &#125;,</span><br><span class=\"line\">  key = <span class=\"string\">\"x\"</span>,</span><br><span class=\"line\">  value = <span class=\"built_in\">eval</span>(<span class=\"string\">\"obj.\"</span> + key);</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"number\">0</span>, <span class=\"built_in\">eval</span>)(<span class=\"string\">\"var a = 0\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"built_in\">eval</span>;</span><br><span class=\"line\">foo(<span class=\"string\">\"var a = 0\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">this</span>.eval(<span class=\"string\">\"var a = 0\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-ex-assign\"><a href=\"#no-ex-assign\" class=\"headerlink\" title=\"no-ex-assign\"></a>no-ex-assign</h1><p>抛出异常定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-ex-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止冲定义抛出的异常<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// code</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// code</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  e = <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-extend-native\"><a href=\"#no-extend-native\" class=\"headerlink\" title=\"no-extend-native\"></a>no-extend-native</h1><p>原生扩展<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-extend-native&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止原生扩展<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.a = <span class=\"string\">\"a\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(<span class=\"built_in\">Array</span>.prototype, <span class=\"string\">\"times\"</span>, &#123; <span class=\"attr\">value</span>: <span class=\"number\">999</span> &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>因为如果做了原生扩展，所有的用到这个原生的内容都会有问题，比如<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.extra = <span class=\"number\">55</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> users = &#123;</span><br><span class=\"line\">  <span class=\"string\">\"123\"</span>: <span class=\"string\">\"Stan\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"456\"</span>: <span class=\"string\">\"David\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 您并没有做别的</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> id <span class=\"keyword\">in</span> users) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(id); <span class=\"comment\">// console的为：\"123\", \"456\", \"extra\"，因为你在原生Object里增加了一个extra</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-extra-bind\"><a href=\"#no-extra-bind\" class=\"headerlink\" title=\"no-extra-bind\"></a>no-extra-bind</h1><p>绑定<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-extra-bind&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止多余的绑定<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.foo();</span><br><span class=\"line\">&#125;.bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;.bind(foo, bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  foo();</span><br><span class=\"line\">&#125;.bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\">(<span class=\"params\">(</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  foo();</span><br><span class=\"line\">&#125;).bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\">(<span class=\"params\">(</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.foo();</span><br><span class=\"line\">&#125;).bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.foo();</span><br><span class=\"line\">  &#125;());</span><br><span class=\"line\">&#125;.bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bar();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;.bind(baz);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-extra-boolean-cast\"><a href=\"#no-extra-boolean-cast\" class=\"headerlink\" title=\"no-extra-boolean-cast\"></a>no-extra-boolean-cast</h1><p>额外的按位计算<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-extra-boolean-cast&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止额外的布尔操作<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = !!bar;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"built_in\">Boolean</span>(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> !!bar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar ? !!baz : !!bat;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = !!!bar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = !!bar ? baz : bat;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"built_in\">Boolean</span>(!!bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(!!bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!!foo) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">Boolean</span>(foo)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (!!foo) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(foo));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (; !!foo; ) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-extra-parens\"><a href=\"#no-extra-parens\" class=\"headerlink\" title=\"no-extra-parens\"></a>no-extra-parens</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-extra-parens&apos;: [2, &apos;functions&apos;]</span><br></pre></td></tr></table></figure>\n<p>禁止额外的插入<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\">(<span class=\"number\">0</span>).toString();</span><br><span class=\"line\">(<span class=\"built_in\">Object</span>.prototype.toString.call());</span><br><span class=\"line\">(&#123;&#125;.toString.call());</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125; ? a() : b());</span><br><span class=\"line\">(<span class=\"regexp\">/^a$/</span>).test(x);</span><br><span class=\"line\">a = (b * c);</span><br><span class=\"line\">(a * b) + c;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> (a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">((<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;))();</span><br><span class=\"line\"><span class=\"keyword\">var</span> y = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>;&#125;);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-fallthrough\"><a href=\"#no-fallthrough\" class=\"headerlink\" title=\"no-fallthrough\"></a>no-fallthrough</h1><p>抛出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-fallthrough&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止switch无抛出<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\">foo</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">      doSomething();</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">      doSomething();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Boo!\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">    <span class=\"comment\">// 其他抛出</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-floating-decimal\"><a href=\"#no-floating-decimal\" class=\"headerlink\" title=\"no-floating-decimal\"></a>no-floating-decimal</h1><p>浮点小数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-floating-decimal&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>虽然有简写的方式，但是请用完整的方式写小数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">0.5</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">2.0</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">-0.7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">.5</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">2.</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">-.7</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-func-assign\"><a href=\"#no-func-assign\" class=\"headerlink\" title=\"no-func-assign\"></a>no-func-assign</h1><p>函数重定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-func-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要给函数重定义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">foo = bar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">foo</span>) </span>&#123; <span class=\"comment\">// `foo` is shadowed.</span></span><br><span class=\"line\">  foo = bar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = bar;  <span class=\"comment\">// `foo` is shadowed.</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">foo = bar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  foo = bar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo = bar;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-implied-eval\"><a href=\"#no-implied-eval\" class=\"headerlink\" title=\"no-implied-eval\"></a>no-implied-eval</h1><p>隐eval<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-implied-eval&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>需要避免所有使用eval的地方<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"Hi!\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"Hi!\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">setTimeout(<span class=\"string\">\"alert('Hi!');\"</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">setInterval(<span class=\"string\">\"alert('Hi!');\"</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">execScript(<span class=\"string\">\"alert('Hi!')\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">window</span>.setTimeout(<span class=\"string\">\"count = 5\"</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"built_in\">window</span>.setInterval(<span class=\"string\">\"foo = bar\"</span>, <span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-inner-declarations\"><a href=\"#no-inner-declarations\" class=\"headerlink\" title=\"no-inner-declarations\"></a>no-inner-declarations</h1><p>内部定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-inner-declarations&apos;: [2, &apos;functions&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>不要使用内部定义，会有异步的隐患<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingElse</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnotherThing</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">  asyncCall(id, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) </span>&#123; &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fn;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">  fn = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnExpression</span>(<span class=\"params\"></span>) </span>&#123; &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingElse</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnotherThing</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-irregular-whitespace\"><a href=\"#no-irregular-whitespace\" class=\"headerlink\" title=\"no-irregular-whitespace\"></a>no-irregular-whitespace</h1><p>不合法的空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-irregular-whitespace&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要用不合法的空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\u000B - Line Tabulation (\\v) - &lt;VT&gt;</span><br><span class=\"line\">\\u000C - Form Feed (\\f) - &lt;FF&gt;</span><br><span class=\"line\">\\u00A0 - No-Break Space - &lt;NBSP&gt;</span><br><span class=\"line\">\\u0085 - Next Line</span><br><span class=\"line\">\\u1680 - Ogham Space Mark</span><br><span class=\"line\">\\u180E - Mongolian Vowel Separator - &lt;MVS&gt;</span><br><span class=\"line\">\\ufeff - Zero Width No-Break Space - &lt;BOM&gt;</span><br><span class=\"line\">\\u2000 - En Quad</span><br><span class=\"line\">\\u2001 - Em Quad</span><br><span class=\"line\">\\u2002 - En Space - &lt;ENSP&gt;</span><br><span class=\"line\">\\u2003 - Em Space - &lt;EMSP&gt;</span><br><span class=\"line\">\\u2004 - Tree-Per-Em</span><br><span class=\"line\">\\u2005 - Four-Per-Em</span><br><span class=\"line\">\\u2006 - Six-Per-Em</span><br><span class=\"line\">\\u2007 - Figure Space</span><br><span class=\"line\">\\u2008 - Punctuation Space - &lt;PUNCSP&gt;</span><br><span class=\"line\">\\u2009 - Thin Space</span><br><span class=\"line\">\\u200A - Hair Space</span><br><span class=\"line\">\\u200B - Zero Width Space - &lt;ZWSP&gt;</span><br><span class=\"line\">\\u2028 - Line Separator</span><br><span class=\"line\">\\u2029 - Paragraph Separator</span><br><span class=\"line\">\\u202F - Narrow No-Break Space</span><br><span class=\"line\">\\u205f - Medium Mathematical Space</span><br><span class=\"line\">\\u3000 - Ideographic Space</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">' &lt;NBSP&gt;thing'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'​&lt;ZWSP&gt;thing'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'th &lt;NBSP&gt;ing'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) /*&lt;<span class=\"title\">NBSP</span>&gt;*/</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"> <span class=\"regexp\">/*&lt;NBSP&gt;*/</span></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span> /*&lt;<span class=\"title\">NBSP</span>&gt;*/(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>᠎/*&lt;<span class=\"title\">MVS</span>&gt;*/(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>; <span class=\"comment\">/*&lt;ENSP&gt;*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>; <span class=\"comment\">/*&lt;NBSP&gt;*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Description &lt;NBSP&gt;: some descriptive text</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Description &lt;NBSP&gt;: some descriptive text</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"regexp\">/ &lt;NBSP&gt;regexp/</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*eslint-env es6*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`template &lt;NBSP&gt;string`</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"no-iterator\"><a href=\"#no-iterator\" class=\"headerlink\" title=\"no-iterator\"></a>no-iterator</h1><p>迭代器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-iterator&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要自定义迭代器的属性，未来会有迭代器<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> __iterator__ = foo; <span class=\"comment\">// Not using the `__iterator__` property.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">Foo.prototype.__iterator__ = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> FooIterator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">foo.__iterator__ = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\">foo[<span class=\"string\">\"__iterator__\"</span>] = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-label-var\"><a href=\"#no-label-var\" class=\"headerlink\" title=\"no-label-var\"></a>no-label-var</h1><p>函数标签<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-label-var&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要把函数标签跟变量冲突<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> q = t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">q:</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(;;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> q;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = foo;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">x:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> x;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-labels\"><a href=\"#no-labels\" class=\"headerlink\" title=\"no-labels\"></a>no-labels</h1><p>标签<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-labels&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;allowLoop&apos;: false,</span><br><span class=\"line\">  &apos;allowSwitch&apos;: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>循环和switch不要设置标签<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = &#123;</span><br><span class=\"line\">  label: <span class=\"string\">\"foo\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> label;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">continue</span> label;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">      <span class=\"keyword\">break</span> label;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> label;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> label;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-lone-blocks\"><a href=\"#no-lone-blocks\" class=\"headerlink\" title=\"no-lone-blocks\"></a>no-lone-blocks</h1><p>空闭包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-lone-blocks&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要使用空闭包<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bar) &#123;</span><br><span class=\"line\">    baz();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  baz();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> x = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> y = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">aLabel: &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    baz();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    baz();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  aLabel: &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-multi-str\"><a href=\"#no-multi-str\" class=\"headerlink\" title=\"no-multi-str\"></a>no-multi-str</h1><p>换行字符串<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-multi-str&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>换行请用\\n，不要用格式的字符串，很可能除了换行多了很多别的东西<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"string\">\"Line 1\\n\"</span> +</span><br><span class=\"line\">  <span class=\"string\">\"Line 2\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"string\">\"Line 1 \\</span></span><br><span class=\"line\"><span class=\"string\">  Line 2\"</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-multiple-empty-lines\"><a href=\"#no-multiple-empty-lines\" class=\"headerlink\" title=\"no-multiple-empty-lines\"></a>no-multiple-empty-lines</h1><p>空行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-multiple-empty-lines&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;max&apos;: 1</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>禁止空行超过1<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"comment\">// 一行</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"comment\">// 超过了一行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-native-reassign\"><a href=\"#no-native-reassign\" class=\"headerlink\" title=\"no-native-reassign\"></a>no-native-reassign</h1><p>原生定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-native-reassign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要重定义环境<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"literal\">undefined</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">window</span> = &#123;&#125;;</span><br><span class=\"line\">length = <span class=\"number\">1</span>;</span><br><span class=\"line\">top = <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-negated-in-lhs\"><a href=\"#no-negated-in-lhs\" class=\"headerlink\" title=\"no-negated-in-lhs\"></a>no-negated-in-lhs</h1><p>负运算<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-negated-in-lhs&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>非应该优先级最高，但是低于in表达式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!(key <span class=\"keyword\">in</span> object)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// key不在object对象中</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>((<span class=\"string\">''</span> + !key) <span class=\"keyword\">in</span> object) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 括号的优先级永远最高，但是key需要是字符串，所以需要转化成字符串</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!key <span class=\"keyword\">in</span> object) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这个实际是(key in object)，但是大部分人看来认为是非key在object</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-new-object\"><a href=\"#no-new-object\" class=\"headerlink\" title=\"no-new-object\"></a>no-new-object</h1><p>new定义object<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-new-object&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>使用{}定义object比new Object()写的更方便<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = <span class=\"keyword\">new</span> CustomObject();</span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-new-require\"><a href=\"#no-new-require\" class=\"headerlink\" title=\"no-new-require\"></a>no-new-require</h1><p>new定义require<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-new-require&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止require的module直接new<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AppHeader = <span class=\"built_in\">require</span>(<span class=\"string\">'app-header'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> appHeader = <span class=\"keyword\">new</span> AppHeader();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> appHeader = <span class=\"keyword\">new</span> <span class=\"built_in\">require</span>(<span class=\"string\">'app-header'</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-new-symbol\"><a href=\"#no-new-symbol\" class=\"headerlink\" title=\"no-new-symbol\"></a>no-new-symbol</h1><p>symbol类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-new-symbol&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>symbol是一个function并且不带构造<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"built_in\">Symbol</span>(<span class=\"string\">'foo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">new</span> <span class=\"built_in\">Symbol</span>(<span class=\"string\">'foo'</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-new-wrappers\"><a href=\"#no-new-wrappers\" class=\"headerlink\" title=\"no-new-wrappers\"></a>no-new-wrappers</h1><p>包装对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-new-wrappers&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不需要构造的类型，都直接用函数方式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> text = <span class=\"built_in\">String</span>(someValue);</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"built_in\">Number</span>(someValue);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> object = <span class=\"keyword\">new</span> MyString();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stringObject = <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"Hello world\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> numberObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">33</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> booleanObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> stringObject = <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> numberObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> booleanObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-obj-calls\"><a href=\"#no-obj-calls\" class=\"headerlink\" title=\"no-obj-calls\"></a>no-obj-calls</h1><p>非函数类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-obj-calls&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>全局类不要用函数方式调用<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">area</span>(<span class=\"params\">r</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.PI * r * r;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> object = <span class=\"built_in\">JSON</span>.parse(<span class=\"string\">\"&#123;&#125;\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"built_in\">Reflect</span>.get(&#123; <span class=\"attr\">x</span>: <span class=\"number\">1</span>, <span class=\"attr\">y</span>: <span class=\"number\">2</span> &#125;, <span class=\"string\">\"x\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> math = <span class=\"built_in\">Math</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> json = <span class=\"built_in\">JSON</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> reflect = <span class=\"built_in\">Reflect</span>();</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-octal\"><a href=\"#no-octal\" class=\"headerlink\" title=\"no-octal\"></a>no-octal</h1><p>十进制数的导零<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-octal&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止十进制数用导零<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num  = <span class=\"string\">\"071\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">071</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"number\">5</span> + <span class=\"number\">07</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-octal-escape\"><a href=\"#no-octal-escape\" class=\"headerlink\" title=\"no-octal-escape\"></a>no-octal-escape</h1><p>十进制转义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-octal-escape&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止十进制转义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">\"Copyright \\u00A9\"</span>;   <span class=\"comment\">// unicode码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">\"Copyright \\xA9\"</span>;     <span class=\"comment\">// 十六进制</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">\"Copyright \\251\"</span>; <span class=\"comment\">// 十进制</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-path-concat\"><a href=\"#no-path-concat\" class=\"headerlink\" title=\"no-path-concat\"></a>no-path-concat</h1><p>地址链接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-path-concat&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止直接把地址做链接<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = dirname + <span class=\"string\">\"/foo.js\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = path.join(__dirname, <span class=\"string\">\"foo.js\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = path.resolve(__dirname, <span class=\"string\">\"foo.js\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = __dirname + <span class=\"string\">\"/foo.js\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = __filename + <span class=\"string\">\"/foo.js\"</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-proto\"><a href=\"#no-proto\" class=\"headerlink\" title=\"no-proto\"></a>no-proto</h1><p>原型<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-proto&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止直接操作或者定义原型<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">Object</span>.getPrototypeOf(obj);</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.setPrototypeOf(obj, b);</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = &#123; <span class=\"attr\">__proto__</span>: a &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = obj.__proto__;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = obj[<span class=\"string\">\"__proto__\"</span>];</span><br><span class=\"line\">obj.__proto__ = b;</span><br><span class=\"line\">obj[<span class=\"string\">\"__proto__\"</span>] = b;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-redeclare\"><a href=\"#no-redeclare\" class=\"headerlink\" title=\"no-redeclare\"></a>no-redeclare</h1><p>变量重生命<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-redeclare&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止变量重复声明<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-return-assign\"><a href=\"#no-return-assign\" class=\"headerlink\" title=\"no-return-assign\"></a>no-return-assign</h1><p>返回定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-return-assign&apos;: [2, &apos;except-parens&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>禁止在返回时候做定义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo = bar + <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo += <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-self-assign\"><a href=\"#no-self-assign\" class=\"headerlink\" title=\"no-self-assign\"></a>no-self-assign</h1><p>自定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-self-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止自己给自己定义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo = foo;</span><br><span class=\"line\">[a, b] = [a, b];</span><br><span class=\"line\">[a, ...b] = [x, ...b];</span><br><span class=\"line\">(&#123;a, b&#125; = &#123;a, x&#125;);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-self-compare\"><a href=\"#no-self-compare\" class=\"headerlink\" title=\"no-self-compare\"></a>no-self-compare</h1><p>自比较<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-self-compare&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止自己跟自己比较<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (x === x) &#123;</span><br><span class=\"line\">    x = <span class=\"number\">20</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-sequences\"><a href=\"#no-sequences\" class=\"headerlink\" title=\"no-sequences\"></a>no-sequences</h1><p>序列<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-sequences&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止逗号操作<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo = (doSomething(), val);</span><br><span class=\"line\">(<span class=\"number\">0</span>, <span class=\"built_in\">eval</span>)(<span class=\"string\">\"doSomething();\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;&#125; <span class=\"keyword\">while</span> ((doSomething(), !!test));</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>, j = <span class=\"number\">10</span>; i &lt; j; i++, j--);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ((doSomething(), !!test));</span><br><span class=\"line\"><span class=\"keyword\">switch</span> ((val = foo(), val)) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((val = foo(), val &lt; <span class=\"number\">42</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo = doSomething(), val;</span><br><span class=\"line\"><span class=\"number\">0</span>, <span class=\"built_in\">eval</span>(<span class=\"string\">\"doSomething();\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;&#125; <span class=\"keyword\">while</span> (doSomething(), !!test);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (; doSomething(), !!test; );</span><br><span class=\"line\"><span class=\"keyword\">if</span> (doSomething(), !!test);</span><br><span class=\"line\"><span class=\"keyword\">switch</span> (val = foo(), val) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (val = foo(), val &lt; <span class=\"number\">42</span>);</span><br><span class=\"line\"><span class=\"keyword\">with</span> (doSomething(), val) &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-shadow-restricted-names\"><a href=\"#no-shadow-restricted-names\" class=\"headerlink\" title=\"no-shadow-restricted-names\"></a>no-shadow-restricted-names</h1><p>严格命名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-shadow-restricted-names&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止使用预留字段命名<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">NaN</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">!<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Infinity</span>)</span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"literal\">undefined</span> = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;&#125; <span class=\"keyword\">catch</span>(<span class=\"built_in\">eval</span>)&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-this-before-super\"><a href=\"#no-this-before-super\" class=\"headerlink\" title=\"no-this-before-super\"></a>no-this-before-super</h1><p>this在超类之前<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-this-before-super&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止在超类之前使用this<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.a = <span class=\"number\">0</span>; <span class=\"comment\">// OK, 没有继承也就没有super</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.a = <span class=\"number\">0</span>; <span class=\"comment\">// OK, 成员变量赋值在super之后.</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  foo() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.a = <span class=\"number\">0</span>; <span class=\"comment\">// OK. 使用this的作用域不是构造.</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.a = <span class=\"number\">0</span>; <span class=\"comment\">// super之前赋值成员变量</span></span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.foo(); <span class=\"comment\">// super之前调用方法</span></span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.foo();  <span class=\"comment\">// super之前调用静态方法</span></span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(<span class=\"keyword\">this</span>.foo());  <span class=\"comment\">// 参数传递之前并未super</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-throw-literal\"><a href=\"#no-throw-literal\" class=\"headerlink\" title=\"no-throw-literal\"></a>no-throw-literal</h1><p>抛出异常<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-throw-literal&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>抛出错误需要是Error<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">throw</span> e;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> e;  <span class=\"comment\">//  catch的参数就是Error类</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"string\">\"error\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> err = <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>();</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"string\">\"an \"</span> + err;</span><br><span class=\"line\"><span class=\"comment\">// err is recast to a string literal</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> err = <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>();</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"string\">`<span class=\"subst\">$&#123;err&#125;</span>`</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-undef\"><a href=\"#no-undef\" class=\"headerlink\" title=\"no-undef\"></a>no-undef</h1><p>未定义变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-undef&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止使用未定义变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">b = <span class=\"number\">10</span>; <span class=\"comment\">// 变量b没有定义，严格模式下语法错误</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-undef-init\"><a href=\"#no-undef-init\" class=\"headerlink\" title=\"no-undef-init\"></a>no-undef-init</h1><p>未定义赋值<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-undef-init&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止赋值为undefined<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo;</span><br><span class=\"line\"><span class=\"keyword\">let</span> bar;</span><br><span class=\"line\"><span class=\"keyword\">const</span> baz = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> bar = <span class=\"literal\">undefined</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unexpected-multiline\"><a href=\"#no-unexpected-multiline\" class=\"headerlink\" title=\"no-unexpected-multiline\"></a>no-unexpected-multiline</h1><p>多行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unexpected-multiline&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止不必要的多行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar;</span><br><span class=\"line\">(<span class=\"number\">1</span> || <span class=\"number\">2</span>).baz();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar</span><br><span class=\"line\">;(<span class=\"number\">1</span> || <span class=\"number\">2</span>).baz()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> hello = <span class=\"string\">'world'</span>;</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach(addNumber);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> hello = <span class=\"string\">'world'</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach(addNumber);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"string\">`hello`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> tag = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">tag <span class=\"string\">`hello`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar</span><br><span class=\"line\">(<span class=\"number\">1</span> || <span class=\"number\">2</span>).baz();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> hello = <span class=\"string\">'world'</span></span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach(addNumber);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"string\">`hello`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">x</span><br><span class=\"line\"><span class=\"string\">`hello`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = foo</span><br><span class=\"line\">/regex/g.test(bar)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unmodified-loop-condition\"><a href=\"#no-unmodified-loop-condition\" class=\"headerlink\" title=\"no-unmodified-loop-condition\"></a>no-unmodified-loop-condition</h1><p>循环中未修改的条件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unmodified-loop-condition&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止循环中出现未修改的条件<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (node) &#123;</span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">  node = node.parent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; items.length; ++j) &#123;</span><br><span class=\"line\">  doSomething(items[j]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (node !== root) &#123;</span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">  node = node.parent; <span class=\"comment\">// node在循环中改变</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (node ? A : B) &#123;</span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">  node = node.parent; <span class=\"comment\">// 三元表达式在循环中改变</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (obj.foo) &#123;</span><br><span class=\"line\">  doSomething(obj); <span class=\"comment\">// doSomething函数可能修改obj的foo属性</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (check(obj)) &#123; <span class=\"comment\">// check函数可能返回多样的值</span></span><br><span class=\"line\">  doSomething(obj);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (node) &#123;</span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">node = other; <span class=\"comment\">// 条件在循环外改变</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; items.length; ++i) &#123; <span class=\"comment\">// 条件j和items没有在循环中改变</span></span><br><span class=\"line\">  doSomething(items[j]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (node !== root) &#123; <span class=\"comment\">// 条件node和root没有在循环中改变</span></span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unneeded-ternary\"><a href=\"#no-unneeded-ternary\" class=\"headerlink\" title=\"no-unneeded-ternary\"></a>no-unneeded-ternary</h1><p>不必要的三元表达式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unneeded-ternary&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;defaultAssignment&apos;: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>禁止不必要的三元表达式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x === <span class=\"number\">2</span> ? <span class=\"string\">\"Yes\"</span> : <span class=\"string\">\"No\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x !== <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x ? <span class=\"string\">\"Yes\"</span> : <span class=\"string\">\"No\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x ? y : x;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x ? x : <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x === <span class=\"number\">2</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>; <span class=\"comment\">// 直接写 var a = x === 2 就行了</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>; <span class=\"comment\">// 直接写 var a = x 就行了</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = f(x ? x : <span class=\"number\">1</span>); <span class=\"comment\">// 直接写 f(x || 1) 就行了</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unreachable\"><a href=\"#no-unreachable\" class=\"headerlink\" title=\"no-unreachable\"></a>no-unreachable</h1><p>未到达<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unreachable&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止未到达部分还有表达式，比如return、throw、break、continue之后的表达式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Oops!\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span>(value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Oops!\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">baz</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.random() &lt; <span class=\"number\">0.5</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unsafe-finally\"><a href=\"#no-unsafe-finally\" class=\"headerlink\" title=\"no-unsafe-finally\"></a>no-unsafe-finally</h1><p>不安全的finally<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unsafe-finally&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止在finally中使用 return、throw、break 和 continue<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unused-vars\"><a href=\"#no-unused-vars\" class=\"headerlink\" title=\"no-unused-vars\"></a>no-unused-vars</h1><p>未使用的变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unused-vars&apos;: [1, &#123;</span><br><span class=\"line\">  &apos;vars&apos;: &apos;local&apos;,</span><br><span class=\"line\">  &apos;args&apos;: &apos;none&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>未使用的变量，我们为了方便调试，因为很多时候我们预先留好参数，修改了级别为警告<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b, c</span>) </span>&#123; <span class=\"comment\">// c没有使用</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;)(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-useless-call\"><a href=\"#no-useless-call\" class=\"headerlink\" title=\"no-useless-call\"></a>no-useless-call</h1><p>不必要的调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-useless-call&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止不必要的call和apply<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo.call(obj, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">foo.apply(obj, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\">obj.foo.call(<span class=\"literal\">null</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">obj.foo.apply(<span class=\"literal\">null</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\">obj.foo.call(otherObj, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">obj.foo.apply(otherObj, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// argument list 是有效的</span></span><br><span class=\"line\">foo.apply(<span class=\"literal\">undefined</span>, args);</span><br><span class=\"line\">foo.apply(<span class=\"literal\">null</span>, args);</span><br><span class=\"line\">obj.foo.apply(obj, args);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"comment\">// 这跟foo(1, 2, 3)一样</span></span><br><span class=\"line\">foo.call(<span class=\"literal\">undefined</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">foo.apply(<span class=\"literal\">undefined</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\">foo.call(<span class=\"literal\">null</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">foo.apply(<span class=\"literal\">null</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 这跟foo(1, 2, 3)一样</span></span><br><span class=\"line\">obj.foo.call(obj, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">obj.foo.apply(obj, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-useless-computed-key\"><a href=\"#no-useless-computed-key\" class=\"headerlink\" title=\"no-useless-computed-key\"></a>no-useless-computed-key</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-useless-computed-key&apos;: 2</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;<span class=\"string\">\"a\"</span>: <span class=\"string\">\"b\"</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;[<span class=\"string\">\"a\"</span>]: <span class=\"string\">\"b\"</span>&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"no-useless-constructor\"><a href=\"#no-useless-constructor\" class=\"headerlink\" title=\"no-useless-constructor\"></a>no-useless-constructor</h1><p>无用的构造<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-useless-constructor&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止无用的构造<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> () &#123; <span class=\"comment\">// 构造没任何用</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> (...args) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(...args); <span class=\"comment\">// 不写这个也会有这个构造</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-useless-escape\"><a href=\"#no-useless-escape\" class=\"headerlink\" title=\"no-useless-escape\"></a>no-useless-escape</h1><p>不必要的转义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-useless-escape&apos;: 0</span><br></pre></td></tr></table></figure></p>\n<p>禁止不必要的转义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"string\">\"\\\"\"</span>;</span><br><span class=\"line\"><span class=\"string\">'\\''</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\x12\"</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\u00a9\"</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\371\"</span>;</span><br><span class=\"line\"><span class=\"string\">\"xs\\u2111\"</span>;</span><br><span class=\"line\"><span class=\"string\">`\\``</span>;</span><br><span class=\"line\"><span class=\"string\">`\\$&#123;<span class=\"subst\">$&#123;foo&#125;</span>&#125;`</span>;</span><br><span class=\"line\"><span class=\"string\">`$\\&#123;<span class=\"subst\">$&#123;foo&#125;</span>&#125;`</span>;</span><br><span class=\"line\">/\\\\/g;</span><br><span class=\"line\">/\\t/g;</span><br><span class=\"line\">/\\w\\$\\*\\^\\./;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"string\">\"\\'\"</span>;</span><br><span class=\"line\"><span class=\"string\">'\\\"'</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\#\"</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\e\"</span>;</span><br><span class=\"line\"><span class=\"string\">`\\\"`</span>;</span><br><span class=\"line\"><span class=\"string\">`\\\"<span class=\"subst\">$&#123;foo&#125;</span>\\\"`</span>;</span><br><span class=\"line\"><span class=\"string\">`\\#&#123;foo&#125;`</span>;</span><br><span class=\"line\">/\\!<span class=\"regexp\">/;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span>\\@/;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-whitespace-before-property\"><a href=\"#no-whitespace-before-property\" class=\"headerlink\" title=\"no-whitespace-before-property\"></a>no-whitespace-before-property</h1><p>属性前的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-whitespace-before-property&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>属性前不要有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo.bar</span><br><span class=\"line\">foo[bar]</span><br><span class=\"line\">foo[ bar ]</span><br><span class=\"line\">foo.bar.baz</span><br><span class=\"line\">foo</span><br><span class=\"line\">  .bar().baz()</span><br><span class=\"line\">foo</span><br><span class=\"line\">  .bar()</span><br><span class=\"line\">  .baz()</span><br><span class=\"line\">foo.</span><br><span class=\"line\">  bar().</span><br><span class=\"line\">  baz()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo [bar]</span><br><span class=\"line\">foo. bar</span><br><span class=\"line\">foo .bar</span><br><span class=\"line\">foo. bar. baz</span><br><span class=\"line\">foo. bar()</span><br><span class=\"line\">  .baz()</span><br><span class=\"line\">foo</span><br><span class=\"line\">  .bar(). baz()</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-with\"><a href=\"#no-with\" class=\"headerlink\" title=\"no-with\"></a>no-with</h1><p>不使用with<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-with&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>with有潜在的风险，现在已经有很多方式可以代替with了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> r = <span class=\"function\">(<span class=\"params\">&#123;x, y&#125;</span>) =&gt;</span> <span class=\"built_in\">Math</span>.sqrt(x * x + y * y);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> (point) &#123;</span><br><span class=\"line\">  r = <span class=\"built_in\">Math</span>.sqrt(x * x + y * y); <span class=\"comment\">// r是否point的属性呢？</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"one-var\"><a href=\"#one-var\" class=\"headerlink\" title=\"one-var\"></a>one-var</h1><p>单变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;one-var&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;initialized&apos;: &apos;never&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>为了浏览方便，可以一次定义多个变量，但是不要一次给多个变量赋值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> bar = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a, b, c; <span class=\"comment\">// Uninitialized variables are ignored</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"literal\">true</span>,</span><br><span class=\"line\">    bar = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"operator-linebreak\"><a href=\"#operator-linebreak\" class=\"headerlink\" title=\"operator-linebreak\"></a>operator-linebreak</h1><p>操作符<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;operator-linebreak&apos;: [2, &apos;after&apos;, &#123;</span><br><span class=\"line\">  &apos;overrides&apos;: &#123;</span><br><span class=\"line\">    &apos;?&apos;: &apos;before&apos;,</span><br><span class=\"line\">    &apos;:&apos;: &apos;before&apos;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>操作符紧跟之后，三元表达式在之前<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo = <span class=\"number\">1</span> + <span class=\"number\">2</span>;</span><br><span class=\"line\">foo = <span class=\"number\">1</span> +</span><br><span class=\"line\">  <span class=\"number\">2</span>;</span><br><span class=\"line\">foo =</span><br><span class=\"line\">  <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (someCondition ||</span><br><span class=\"line\">  otherCondition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">answer = everything ?</span><br><span class=\"line\">  <span class=\"number\">42</span> :</span><br><span class=\"line\">  foo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo = <span class=\"number\">1</span></span><br><span class=\"line\">+</span><br><span class=\"line\"><span class=\"number\">2</span>;</span><br><span class=\"line\">foo = <span class=\"number\">1</span></span><br><span class=\"line\">  + <span class=\"number\">2</span>;</span><br><span class=\"line\">foo</span><br><span class=\"line\">  = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (someCondition</span><br><span class=\"line\">  || otherCondition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">answer = everything</span><br><span class=\"line\">  ? <span class=\"number\">42</span></span><br><span class=\"line\">  : foo;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"quotes\"><a href=\"#quotes\" class=\"headerlink\" title=\"quotes\"></a>quotes</h1><p>引号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;quotes&apos;: [2, &apos;single&apos;, &#123;</span><br><span class=\"line\">  &apos;avoidEscape&apos;: true,</span><br><span class=\"line\">  &apos;allowTemplateLiterals&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>为了统一，请字符串用单引号，但是为了防止转义是可以用双引号的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> single = <span class=\"string\">'single'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> backtick = <span class=\"string\">`back<span class=\"subst\">$&#123;x&#125;</span>tick`</span>; <span class=\"comment\">// 允许模板</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> unescaped = <span class=\"string\">\"a string containing 'single' quotes\"</span>; <span class=\"comment\">// 为了避免转义单引号，可以用双引号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> double = <span class=\"string\">\"double\"</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"semi\"><a href=\"#semi\" class=\"headerlink\" title=\"semi\"></a>semi</h1><p>分号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;semi&apos;: [2, &apos;always&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>必须加分号<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> website = <span class=\"string\">\"eslint.org\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">\"ESLint\"</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"semi-spacing\"><a href=\"#semi-spacing\" class=\"headerlink\" title=\"semi-spacing\"></a>semi-spacing</h1><p>分号空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;semi-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;before&apos;: false,</span><br><span class=\"line\">  &apos;after&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>左边不能有空白，右边必须有空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"keyword\">var</span> bar;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">while</span> (a) &#123; <span class=\"keyword\">break</span>; &#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (;;) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;;&#125;</span><br><span class=\"line\">;foo();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo ;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo;<span class=\"keyword\">var</span> bar;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>) ;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (a) &#123; <span class=\"keyword\">break</span> ; &#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span> ; i &lt; <span class=\"number\">10</span> ; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">10</span>;i++) &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"space-in-parens\"><a href=\"#space-in-parens\" class=\"headerlink\" title=\"space-in-parens\"></a>space-in-parens</h1><p>参数空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-in-parens&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>函数的参数括号两边不留空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo();</span><br><span class=\"line\">foo(<span class=\"string\">'bar'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = (<span class=\"number\">1</span> + <span class=\"number\">2</span>) * <span class=\"number\">3</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">'bar'</span>; &#125;());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo( <span class=\"string\">'bar'</span>);</span><br><span class=\"line\">foo(<span class=\"string\">'bar'</span> );</span><br><span class=\"line\">foo( <span class=\"string\">'bar'</span> );</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = ( <span class=\"number\">1</span> + <span class=\"number\">2</span> ) * <span class=\"number\">3</span>;</span><br><span class=\"line\">( <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">'bar'</span>; &#125;() );</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"space-infix-ops\"><a href=\"#space-infix-ops\" class=\"headerlink\" title=\"space-infix-ops\"></a>space-infix-ops</h1><p>操作符空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-infix-ops&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>操作符两边留空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">a + b</span><br><span class=\"line\">a       + b</span><br><span class=\"line\">a ? b : c</span><br><span class=\"line\"><span class=\"keyword\">const</span> a = &#123;<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;a = <span class=\"number\">0</span>&#125; = bar;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a = <span class=\"number\">0</span></span>) </span>&#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">a+b</span><br><span class=\"line\">a+ b</span><br><span class=\"line\">a +b</span><br><span class=\"line\">a?b:c</span><br><span class=\"line\"><span class=\"keyword\">const</span> a=&#123;<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;a=<span class=\"number\">0</span>&#125;=bar;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a=<span class=\"number\">0</span></span>) </span>&#123; &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"space-unary-ops\"><a href=\"#space-unary-ops\" class=\"headerlink\" title=\"space-unary-ops\"></a>space-unary-ops</h1><p>单元操作符空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-unary-ops&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;words&apos;: true,</span><br><span class=\"line\">  &apos;nonwords&apos;: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> foo.bar; <span class=\"comment\">// 文字操作符需要有空格</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Foo; <span class=\"comment\">// 文字操作符需要有空格</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"number\">0</span>; <span class=\"comment\">// 文字操作符需要有空格</span></span><br><span class=\"line\">++foo; <span class=\"comment\">// 非文字操作符不能有空格</span></span><br><span class=\"line\">foo--; <span class=\"comment\">// 非文字操作符不能有空格</span></span><br><span class=\"line\">-foo; <span class=\"comment\">// 非文字操作符不能有空格</span></span><br><span class=\"line\">+<span class=\"string\">\"3\"</span>; <span class=\"comment\">// 非文字操作符不能有空格</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span>!foo;</span><br><span class=\"line\"><span class=\"keyword\">void</span>&#123;<span class=\"attr\">foo</span>:<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">new</span>[foo][<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">delete</span>(foo.bar);</span><br><span class=\"line\">++ foo;</span><br><span class=\"line\">foo --;</span><br><span class=\"line\">- foo;</span><br><span class=\"line\">+ <span class=\"string\">\"3\"</span>;</span><br></pre></td></tr></table></figure>\n<h1 id=\"spaced-comment\"><a href=\"#spaced-comment\" class=\"headerlink\" title=\"spaced-comment\"></a>spaced-comment</h1><p>注释的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;spaced-comment&apos;: [2, &apos;always&apos;, &#123;</span><br><span class=\"line\">  &apos;markers&apos;: [&apos;global&apos;, &apos;globals&apos;, &apos;eslint&apos;, &apos;eslint-disable&apos;, &apos;*package&apos;, &apos;!&apos;, &apos;,&apos;]</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>注释需要加个空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"comment\">// This is a comment with a whitespace at the beginning</span></span><br><span class=\"line\"><span class=\"comment\">/* This is a comment with a whitespace at the beginning */</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * This is a comment with a whitespace at the beginning</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">This comment has a newline</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"comment\">//This is a comment with no whitespace at the beginning</span></span><br><span class=\"line\"><span class=\"comment\">/*This is a comment with no whitespace at the beginning */</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"template-curly-spacing\"><a href=\"#template-curly-spacing\" class=\"headerlink\" title=\"template-curly-spacing\"></a>template-curly-spacing</h1><p>模板中的变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;template-curly-spacing&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>模板中的变量不要加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123;people.name&#125;</span>!`</span>;</span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">  people.name</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">&#125;</span>!`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123; people.name&#125;</span>!`</span>;</span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123;people.name &#125;</span>!`</span>;</span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123; people.name &#125;</span>!`</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"use-isnan\"><a href=\"#use-isnan\" class=\"headerlink\" title=\"use-isnan\"></a>use-isnan</h1><p>非数字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;use-isnan&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>判断非数字，请使用isNaN函数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(foo)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">isNaN</span>(foo)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo == <span class=\"literal\">NaN</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo != <span class=\"literal\">NaN</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"valid-typeof\"><a href=\"#valid-typeof\" class=\"headerlink\" title=\"valid-typeof\"></a>valid-typeof</h1><p>正确的类型<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;valid-typeof&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>请使用正确的类型<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo === <span class=\"string\">\"string\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> bar == <span class=\"string\">\"undefined\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo === baz</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> bar === <span class=\"keyword\">typeof</span> qux</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo === <span class=\"string\">\"strnig\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo == <span class=\"string\">\"undefimed\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> bar != <span class=\"string\">\"nunber\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> bar !== <span class=\"string\">\"fucntion\"</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"wrap-iife\"><a href=\"#wrap-iife\" class=\"headerlink\" title=\"wrap-iife\"></a>wrap-iife</h1><p>闭包调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;wrap-iife&apos;: [2, &apos;any&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>直接调用函数需要括号括起来<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123; <span class=\"attr\">y</span>: <span class=\"number\">1</span> &#125;;&#125;());</span><br><span class=\"line\"><span class=\"keyword\">var</span> x = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123; <span class=\"attr\">y</span>: <span class=\"number\">1</span> &#125;;&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123; <span class=\"attr\">y</span>: <span class=\"number\">1</span> &#125;;&#125;();</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"yoda\"><a href=\"#yoda\" class=\"headerlink\" title=\"yoda\"></a>yoda</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;yoda&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure>\n<p>条件里，变量在左，对比的值在右<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">5</span> &amp; value) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (value === <span class=\"string\">\"red\"</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">\"red\"</span> === color) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == flag) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">5</span> &gt; count) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">-1</span> &lt; str.indexOf(substr)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">0</span> &lt;= x &amp;&amp; x &lt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"prefer-const\"><a href=\"#prefer-const\" class=\"headerlink\" title=\"prefer-const\"></a>prefer-const</h1><p>常量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;prefer-const&apos;: 1</span><br></pre></td></tr></table></figure></p>\n<p>没有被重定义的变量请用const，但是开发过程中经常有暂时没有重定义的变量，所以修改了警告级别<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a;</span><br><span class=\"line\">a = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) &#123; <span class=\"comment\">// 遍历时候i不会被重定义</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> a <span class=\"keyword\">of</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) &#123; <span class=\"comment\">// 遍历时候i不会被重定义</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-debugger\"><a href=\"#no-debugger\" class=\"headerlink\" title=\"no-debugger\"></a>no-debugger</h1><p>调试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-debugger&apos;: process.env.NODE_ENV === &apos;production&apos; ? 2 : 0</span><br></pre></td></tr></table></figure></p>\n<p>在正式环境中不能有调试，开发环境关闭<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isTruthy</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">debugger</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Boolean</span>(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"object-curly-spacing\"><a href=\"#object-curly-spacing\" class=\"headerlink\" title=\"object-curly-spacing\"></a>object-curly-spacing</h1><p>对象空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;object-curly-spacing&apos;: [2, &apos;always&apos;, &#123;</span><br><span class=\"line\">  objectsInObjects: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>定义对象的大括号内两边加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"string\">'foo'</span>: &#123; <span class=\"string\">'bar'</span>: <span class=\"string\">'baz'</span> &#125;, <span class=\"string\">'qux'</span>: <span class=\"string\">'quxx'</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; x &#125; = y;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; foo &#125; <span class=\"keyword\">from</span> <span class=\"string\">'bar'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">baz</span>: &#123;<span class=\"string\">'foo'</span>: <span class=\"string\">'qux'</span>&#125;, bar&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"attr\">baz</span>: &#123; <span class=\"string\">'foo'</span>: <span class=\"string\">'qux'</span> &#125;, bar&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"string\">'foo'</span>:<span class=\"string\">'bar'</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;x&#125; = y;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;foo &#125; <span class=\"keyword\">from</span> <span class=\"string\">'bar'</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"array-bracket-spacing\"><a href=\"#array-bracket-spacing\" class=\"headerlink\" title=\"array-bracket-spacing\"></a>array-bracket-spacing</h1><p>数组空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;array-bracket-spacing&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>定义数字的中括号内，无空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [</span><br><span class=\"line\">  <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">  <span class=\"string\">'bar'</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [ <span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span> ];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span> ];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [ [<span class=\"string\">'foo'</span>], <span class=\"string\">'bar'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [[ <span class=\"string\">'foo'</span> ], <span class=\"string\">'bar'</span>];</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ESLint配置详细解析\"><a href=\"#ESLint配置详细解析\" class=\"headerlink\" title=\"ESLint配置详细解析\"></a>ESLint配置详细解析</h1><p>我们项目用的vue以及想相关的解析  </p>\n<blockquote>\n<p>如果出现下面这样的报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">error  Requires a space before &apos;&#125;&apos;  block-spacing</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>按照最后一个关键词，就可以找到正确的写法  </p>\n</blockquote>\n<p>下面就是所有的配置</p>\n<h1 id=\"accessor-pairs\"><a href=\"#accessor-pairs\" class=\"headerlink\" title=\"accessor-pairs\"></a>accessor-pairs</h1><p>对象中强制配对set和get<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;accessor-pairs&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>就是对象中不能设置了set却没有get，但是有get没有set是可以的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">set</span> a(value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.val = value;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">set</span> a(value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.val = value;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">get</span> a() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.val;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">get</span> a() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.val;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"space\"><a href=\"#space\" class=\"headerlink\" title=\"space\"></a>space</h1><p>空格</p>\n<h2 id=\"arrow-spacing\"><a href=\"#arrow-spacing\" class=\"headerlink\" title=\"arrow-spacing\"></a>arrow-spacing</h2><p>箭头函数前后空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;arrow-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;before&apos;: true,</span><br><span class=\"line\">  &apos;after&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们要求箭头函数必须前后有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &#123; \"before\": true, \"after\": true &#125;前后都要有空格</span></span><br><span class=\"line\">(a) =&gt; &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &#123; \"before\": false, \"after\": false &#125;前后都不能有空格</span></span><br><span class=\"line\">(a)=&gt;&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"block-spacing\"><a href=\"#block-spacing\" class=\"headerlink\" title=\"block-spacing\"></a>block-spacing</h2><p>大括号之内的空格或者换行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;block-spacing&apos;: [2, &apos;always&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>我们要求大括号之内前后必须有空格或者换行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; &#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; bar = <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">baz</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;&#125;<span class=\"comment\">//两边都没空格</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; bar = <span class=\"number\">0</span>;&#125;<span class=\"comment\">//右边没空格</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">baz</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;<span class=\"comment\">//左边没有换行或者空格</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"key-spacing\"><a href=\"#key-spacing\" class=\"headerlink\" title=\"key-spacing\"></a>key-spacing</h2><p>属性空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;key-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;beforeColon&apos;: false,</span><br><span class=\"line\">  &apos;afterColon&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>默认是属性之前没有空格之后有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"string\">\"foo\"</span>: <span class=\"number\">42</span> &#125;;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"keyword-spacing\"><a href=\"#keyword-spacing\" class=\"headerlink\" title=\"keyword-spacing\"></a>keyword-spacing</h2><p>关键字空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;keyword-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;before&apos;: true,</span><br><span class=\"line\">  &apos;after&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>关键字前后都加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bar) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bar) &#123;<span class=\"comment\">// 关键字else前面没有空格</span></span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;<span class=\"comment\">// 关键字else后面没有空格</span></span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"generator-star-spacing\"><a href=\"#generator-star-spacing\" class=\"headerlink\" title=\"generator-star-spacing\"></a>generator-star-spacing</h2><p>生成器的星号空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;generator-star-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;before&apos;: true,</span><br><span class=\"line\">  &apos;after&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们要求星号前后都有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> * <span class=\"title\">generator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"44\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"55\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>* <span class=\"title\">generator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"44\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"55\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> *<span class=\"title\">generator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"44\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"string\">\"55\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"yield-star-spacing\"><a href=\"#yield-star-spacing\" class=\"headerlink\" title=\"yield-star-spacing\"></a>yield-star-spacing</h1><p>生产的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;yield-star-spacing&apos;: [2, &apos;both&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>生产跟生成器一样两边加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> * <span class=\"title\">generator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> * other();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-multi-spaces\"><a href=\"#no-multi-spaces\" class=\"headerlink\" title=\"no-multi-spaces\"></a>no-multi-spaces</h2><p>多空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-multi-spaces&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止多空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(foo === <span class=\"string\">\"bar\"</span>) &#123;&#125;</span><br><span class=\"line\">a &lt;&lt; b</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\">a ? b: c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a =  <span class=\"number\">1</span>; <span class=\"comment\">// 等号右边多了空格</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(foo   === <span class=\"string\">\"bar\"</span>) &#123;&#125;  <span class=\"comment\">// 全等左边多了空格</span></span><br><span class=\"line\">a &lt;&lt;  b <span class=\"comment\">// 逻辑左移右边两个空格</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,  <span class=\"number\">2</span>];  <span class=\"comment\">// 数组元素中间多了空格</span></span><br><span class=\"line\">a ?  b: c <span class=\"comment\">//?后面多了空格</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"space-before-blocks\"><a href=\"#space-before-blocks\" class=\"headerlink\" title=\"space-before-blocks\"></a>space-before-blocks</h2><p>括号前的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-before-blocks&apos;: [2, &apos;always&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>括号之前要有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  c();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">    b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;&#125; <span class=\"keyword\">catch</span>(a) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a)&#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (;;)&#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;&#125; <span class=\"keyword\">catch</span>(a)&#123;&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>()&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"space-before-function-paren\"><a href=\"#space-before-function-paren\" class=\"headerlink\" title=\"space-before-function-paren\"></a>space-before-function-paren</h2><p>函数空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-before-function-paren&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>定义函数函数的括号之前不写空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  bar() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">async</span>() =&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> () &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  bar () &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">async</span> () =&gt; <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-spaced-func\"><a href=\"#no-spaced-func\" class=\"headerlink\" title=\"no-spaced-func\"></a>no-spaced-func</h2><p>函数空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-spaced-func&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>函数间不要有任何空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">fn()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">fn ()</span><br><span class=\"line\"></span><br><span class=\"line\">fn</span><br><span class=\"line\">()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"padded-blocks\"><a href=\"#padded-blocks\" class=\"headerlink\" title=\"padded-blocks\"></a>padded-blocks</h2><p>声明中的空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;padded-blocks&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>声明中不要有空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  b();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  b();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">  b();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-trailing-spaces\"><a href=\"#no-trailing-spaces\" class=\"headerlink\" title=\"no-trailing-spaces\"></a>no-trailing-spaces</h2><p>句尾空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-trailing-spaces&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止在句尾也就是分号之后加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">0</span>;<span class=\"comment\">//•••••</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> baz = <span class=\"number\">5</span>;<span class=\"comment\">//••</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"eol-last\"><a href=\"#eol-last\" class=\"headerlink\" title=\"eol-last\"></a>eol-last</h2><p>页面结尾<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;eol-last&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>页面的结尾必须有一个空行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSmth</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;\\n</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"brace-style\"><a href=\"#brace-style\" class=\"headerlink\" title=\"brace-style\"></a>brace-style</h1><p>括号样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;brace-style&apos;: [2, &apos;1tbs&apos;, &#123;</span><br><span class=\"line\">  &apos;allowSingleLine&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们设置1tbs的的样式，以及允许单行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  baz();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  somethingRisky();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">  handleError();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 没有大括号，没有问题</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) bar();</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (baz) boom();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许单行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">nop</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; bar(); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; bar(); &#125; <span class=\"keyword\">else</span> &#123; baz(); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123; somethingRisky(); &#125; <span class=\"keyword\">catch</span>(e) &#123; handleError(); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;<span class=\"comment\">// 大括号开始需要跟方法同一行</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo)</span><br><span class=\"line\">&#123;<span class=\"comment\">// 大括号开始需要跟控制同一行</span></span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span></span><br><span class=\"line\">&#123; <span class=\"comment\">// 大括号开始需要跟控制同一行</span></span><br><span class=\"line\">  somethingRisky();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(e)</span><br><span class=\"line\">&#123; <span class=\"comment\">// 大括号开始需要跟捕获同一行</span></span><br><span class=\"line\">  handleError();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125;<span class=\"comment\">// 大括号结束需要跟后续同一行</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  baz();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"camelcase\"><a href=\"#camelcase\" class=\"headerlink\" title=\"camelcase\"></a>camelcase</h1><p>驼峰样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;camelcase&apos;: [0, &#123;</span><br><span class=\"line\">  &apos;properties&apos;: &apos;always&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们关闭了规则，虽然建议大家都要用驼峰命名变量，但是有时候我们引用的module不是驼峰的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; no_camelcased <span class=\"keyword\">as</span> camelCased &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"external-module\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myFavoriteColor   = <span class=\"string\">\"#112C85\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> _myFavoriteColor  = <span class=\"string\">\"#112C85\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> myFavoriteColor_  = <span class=\"string\">\"#112C85\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> MY_FAVORITE_COLOR = <span class=\"string\">\"#112C85\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar.baz_boom;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123; <span class=\"attr\">qux</span>: bar.baz_boom &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj.do_something();</span><br><span class=\"line\">do_something();</span><br><span class=\"line\"><span class=\"keyword\">new</span> do_something();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; <span class=\"attr\">category_id</span>: category &#125; = query;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123; isCamelCased &#125;</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123; isCamelCased: isAlsoCamelCased &#125;</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123; isCamelCased = <span class=\"string\">'default value'</span> &#125;</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; categoryId = <span class=\"number\">1</span> &#125; = query;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; <span class=\"attr\">foo</span>: isCamelCased &#125; = bar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; <span class=\"attr\">foo</span>: isCamelCased = <span class=\"number\">1</span> &#125; = quz;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"comma\"><a href=\"#comma\" class=\"headerlink\" title=\"comma\"></a>comma</h1><p>逗号</p>\n<h2 id=\"comma-dangle\"><a href=\"#comma-dangle\" class=\"headerlink\" title=\"comma-dangle\"></a>comma-dangle</h2><p>尾部逗号，区别于默认<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;comma-dangle&apos;: [1, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>数组或者对象，尾部是不能有逗号的，但是为了方便调试，我们只是设置了警告，没有限定为错误<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">    bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">    qux: <span class=\"string\">\"quux\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">foo(&#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  qux: <span class=\"string\">\"quux\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">    bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">    qux: <span class=\"string\">\"quux\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,];</span><br><span class=\"line\"></span><br><span class=\"line\">foo(&#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  qux: <span class=\"string\">\"quux\"</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"comma-spacing\"><a href=\"#comma-spacing\" class=\"headerlink\" title=\"comma-spacing\"></a>comma-spacing</h2><p>逗号空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'comma-spacing'</span>: [<span class=\"number\">2</span>, &#123;</span><br><span class=\"line\">  <span class=\"string\">'before'</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">'after'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>我们设置的为逗号之前不能有空格，之后必须有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span>, bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span>, <span class=\"string\">\"baz\"</span>: <span class=\"string\">\"qur\"</span>&#125;;</span><br><span class=\"line\">foo(a, b);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Foo(a, b);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a, b</span>)</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span> ,bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span> , <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span> ,<span class=\"string\">\"baz\"</span>: <span class=\"string\">\"qur\"</span>&#125;;</span><br><span class=\"line\">foo(a ,b);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Foo(a ,b);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a ,b</span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"comma-style\"><a href=\"#comma-style\" class=\"headerlink\" title=\"comma-style\"></a>comma-style</h2><p>逗号样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;comma-style&apos;: [2, &apos;last&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>每个单元以逗号结尾<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span>, bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span>,</span><br><span class=\"line\">  bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = [<span class=\"string\">\"apples\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"oranges\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">\"b:\"</span>: <span class=\"number\">2</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span></span><br><span class=\"line\">,</span><br><span class=\"line\">bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span></span><br><span class=\"line\">  , bar = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = [<span class=\"string\">\"apples\"</span></span><br><span class=\"line\">  , <span class=\"string\">\"oranges\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span></span><br><span class=\"line\">    ,<span class=\"string\">\"b:\"</span>: <span class=\"number\">2</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"regular\"><a href=\"#regular\" class=\"headerlink\" title=\"regular\"></a>regular</h1><p>正则表达式</p>\n<h2 id=\"no-control-regex\"><a href=\"#no-control-regex\" class=\"headerlink\" title=\"no-control-regex\"></a>no-control-regex</h2><p>正则字节控制<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-control-regex&apos;: 0</span><br></pre></td></tr></table></figure></p>\n<p>正常来说使用的正则字节是ascii(0-31)，但是现在后续多了很多，尤其是要用中文，所以我们关掉了这个<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pattern1 = <span class=\"regexp\">/\\x1f/</span>; <span class=\"comment\">//16进制1f就是10进制的31</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pattern2 = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"\\x1f\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-empty-character-class\"><a href=\"#no-empty-character-class\" class=\"headerlink\" title=\"no-empty-character-class\"></a>no-empty-character-class</h2><p>禁止空字节<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-empty-character-class&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>正则表达式中不要有空字节<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\">/^abc/.test(<span class=\"string\">\"abcdefg\"</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">\"abcdefg\"</span>.match(<span class=\"regexp\">/^abc/</span>); <span class=\"comment\">// [\"abc\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\">/^abc[a-z]/.test(<span class=\"string\">\"abcdefg\"</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">\"abcdefg\"</span>.match(<span class=\"regexp\">/^abc[a-z]/</span>); <span class=\"comment\">// [\"abcd\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">/^abc[]/.test(<span class=\"string\">\"abcdefg\"</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"string\">\"abcdefg\"</span>.match(<span class=\"regexp\">/^abc[]/</span>); <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-invalid-regexp\"><a href=\"#no-invalid-regexp\" class=\"headerlink\" title=\"no-invalid-regexp\"></a>no-invalid-regexp</h2><p>无效的正则<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-invalid-regexp&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>错误的正则只有在执行时候才会报错，定义时候不会，所以我们加入验证<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"built_in\">RegExp</span>(<span class=\"string\">'.'</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>;</span><br><span class=\"line\"><span class=\"keyword\">this</span>.RegExp(<span class=\"string\">'['</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"built_in\">RegExp</span>(<span class=\"string\">'['</span>);</span><br><span class=\"line\"><span class=\"built_in\">RegExp</span>(<span class=\"string\">'.'</span>, <span class=\"string\">'z'</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'\\\\'</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-regex-spaces\"><a href=\"#no-regex-spaces\" class=\"headerlink\" title=\"no-regex-spaces\"></a>no-regex-spaces</h2><p>正则空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-regex-spaces&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止直接输入数量的空格，如果有请用{}定义数字<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/foo &#123;3&#125;bar/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"foo &#123;3&#125;bar\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/foo   bar/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"foo   bar\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h1><p>类</p>\n<h2 id=\"constructor-super\"><a href=\"#constructor-super\" class=\"headerlink\" title=\"constructor-super\"></a>constructor-super</h2><p>构造时候使用超类<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();  <span class=\"comment\">// 语法错误，因为没有继承</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>() &#123; &#125;  <span class=\"comment\">// 需要超类</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"new-cap\"><a href=\"#new-cap\" class=\"headerlink\" title=\"new-cap\"></a>new-cap</h2><p>类首字母大写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;new-cap&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;newIsCap&apos;: true,</span><br><span class=\"line\">  &apos;capIsNew&apos;: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>默认为首字母大写<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = Person(); <span class=\"comment\">//并没有要求必须new</span></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> friend = <span class=\"keyword\">new</span> person();<span class=\"comment\">// 类需要首字母大写</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"new-parens\"><a href=\"#new-parens\" class=\"headerlink\" title=\"new-parens\"></a>new-parens</h2><p>插入语<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;new-parens&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>js里，new一个类，如果没有参数，可以不写后面的括号的，但是别的语言都不行，所以统一一下<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> (Person)();</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"Name\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> Person;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> (Person);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-class-assign\"><a href=\"#no-class-assign\" class=\"headerlink\" title=\"no-class-assign\"></a>no-class-assign</h2><p>类重定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-class-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>class的方式定义的类，不要再重新定义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123; &#125;</span><br><span class=\"line\">A = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">A = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  b() &#123;</span><br><span class=\"line\">    A = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> A = <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  b() &#123;</span><br><span class=\"line\">    A = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-dupe-class-members\"><a href=\"#no-dupe-class-members\" class=\"headerlink\" title=\"no-dupe-class-members\"></a>no-dupe-class-members</h2><p>重复方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-dupe-class-members&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要再类里定义重复的方法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  bar() &#123; &#125;</span><br><span class=\"line\">  bar() &#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  bar() &#123; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">get</span> bar() &#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> bar() &#123; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> bar() &#123; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"no-dupe-keys\"><a href=\"#no-dupe-keys\" class=\"headerlink\" title=\"no-dupe-keys\"></a>no-dupe-keys</h2><p>重复键<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-dupe-keys&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要定义重复的键<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  bar: <span class=\"string\">\"qux\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  <span class=\"string\">\"bar\"</span>: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  bar: <span class=\"string\">\"qux\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  <span class=\"number\">0x1</span>: <span class=\"string\">\"baz\"</span>,</span><br><span class=\"line\">  <span class=\"number\">1</span>: <span class=\"string\">\"qux\"</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"curly\"><a href=\"#curly\" class=\"headerlink\" title=\"curly\"></a>curly</h1><p>圆括号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;curly&apos;: [2, &apos;multi-line&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>函数或者控制可以单行没有大括号，多行需要大括号<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) foo++; <span class=\"keyword\">else</span> doSomething();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) foo++;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bar) baz()</span><br><span class=\"line\"><span class=\"keyword\">else</span> doSomething();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">do</span> something();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (foo);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (foo</span><br><span class=\"line\">  &amp;&amp; bar) baz();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  foo++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123; foo++; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  doSomething();</span><br><span class=\"line\">  doSomethingElse();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo)</span><br><span class=\"line\">  doSomething();</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  doSomethingElse();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) foo(</span><br><span class=\"line\">  bar,</span><br><span class=\"line\">  baz);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"dot-location\"><a href=\"#dot-location\" class=\"headerlink\" title=\"dot-location\"></a>dot-location</h1><p>圆点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;dot-location&apos;: [2, &apos;property&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>属性为主体，圆点跟属性作为一个整体<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = object</span><br><span class=\"line\">.property;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = object.property;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = object.</span><br><span class=\"line\">property;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"eqeqeq\"><a href=\"#eqeqeq\" class=\"headerlink\" title=\"eqeqeq\"></a>eqeqeq</h1><p>等式，专门应对不正确的等式类型<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;eqeqeq&apos;: [2, &apos;allow-null&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>我们要求必须同时应对类型，并且允许为空<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\">a === b</span><br><span class=\"line\">foo === <span class=\"literal\">true</span></span><br><span class=\"line\">bananas !== <span class=\"number\">1</span></span><br><span class=\"line\">value === <span class=\"literal\">undefined</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo === <span class=\"string\">'undefined'</span></span><br><span class=\"line\"><span class=\"string\">'hello'</span> !== <span class=\"string\">'world'</span></span><br><span class=\"line\"><span class=\"number\">0</span> === <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"literal\">true</span> === <span class=\"literal\">true</span></span><br><span class=\"line\">foo === <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">a == b</span><br><span class=\"line\">foo == <span class=\"literal\">true</span></span><br><span class=\"line\">bananas != <span class=\"number\">1</span></span><br><span class=\"line\">value == <span class=\"literal\">undefined</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo == <span class=\"string\">'undefined'</span></span><br><span class=\"line\"><span class=\"string\">'hello'</span> != <span class=\"string\">'world'</span></span><br><span class=\"line\"><span class=\"number\">0</span> == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"literal\">true</span> == <span class=\"literal\">true</span></span><br><span class=\"line\">foo == <span class=\"literal\">null</span></span><br></pre></td></tr></table></figure></p>\n<p>可能你会觉得很多地方就是要数字和字符串都适用，那么做个处理就行了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code == <span class=\"number\">200</span> <span class=\"comment\">// 常用的判断request的code，但是有时候给的是数字有时候给的字符串</span></span><br><span class=\"line\">code === <span class=\"number\">200</span> || code === <span class=\"string\">\"200\"</span> <span class=\"comment\">// 我们加上一个字符串的判断就可以了</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>( code ) === <span class=\"number\">200</span> <span class=\"comment\">// 或者专门吧code转化成数字，但是注意一下，字符串不能做16进制的转换，碰上非数字，后面的内容就会丢失</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"handle-callback-err\"><a href=\"#handle-callback-err\" class=\"headerlink\" title=\"handle-callback-err\"></a>handle-callback-err</h1><p>错误回调<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;handle-callback-err&apos;: [2, &apos;^(err|error)$&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>有错误的话要有抛出操作，就是参数一旦有“err”或者“error”一定要针对这个错误做特殊处理<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadData</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err.stack);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generateError</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadData</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">  doSomething(); <span class=\"comment\">// 没做错误处理</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"indent\"><a href=\"#indent\" class=\"headerlink\" title=\"indent\"></a>indent</h1><p>缩进</p>\n<h2 id=\"indent-1\"><a href=\"#indent-1\" class=\"headerlink\" title=\"indent\"></a>indent</h2><p>缩进<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;indent&apos;: [2, 2, &#123;</span><br><span class=\"line\">  &apos;SwitchCase&apos;: 1</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>建议使用两个空格，理由是</p>\n<ul>\n<li>用两个空格的人很多，并且在逐渐增加</li>\n<li>层级多了，也只是一层2个，不会让横向过长<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"exec\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">switch</span>(a)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"a\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"b\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"no-mixed-spaces-and-tabs\"><a href=\"#no-mixed-spaces-and-tabs\" class=\"headerlink\" title=\"no-mixed-spaces-and-tabs\"></a>no-mixed-spaces-and-tabs</h2><p>空格和tabs混排<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-mixed-spaces-and-tabs&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止空格和tabs混排<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">/*tab*/</span><span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"jsx-quotes\"><a href=\"#jsx-quotes\" class=\"headerlink\" title=\"jsx-quotes\"></a>jsx-quotes</h1><p>标签引号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;jsx-quotes&apos;: [2, &apos;prefer-single&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>标签引号请用单引号<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 正确 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">b</span>=<span class=\"string\">'c'</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">b</span>=<span class=\"string\">\"'\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 错误 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">b</span>=<span class=\"string\">\"c\"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"array\"><a href=\"#array\" class=\"headerlink\" title=\"array\"></a>array</h1><p>数组</p>\n<h2 id=\"no-array-constructor\"><a href=\"#no-array-constructor\" class=\"headerlink\" title=\"no-array-constructor\"></a>no-array-constructor</h2><p>数组构造<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-array-constructor&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>数组构造时候可以使用长度作为参数，也可以使用数组中的元素作为参数  </p>\n<blockquote>\n<p>但是这样会有冲突，如果数组中只放了一个数字，那么是长度还是元素呢？<br>所以我们禁止使用元素作为参数构造<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">500</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(someOtherArray.length);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"no-sparse-arrays\"><a href=\"#no-sparse-arrays\" class=\"headerlink\" title=\"no-sparse-arrays\"></a>no-sparse-arrays</h2><p>数组空元素<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-sparse-arrays&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止设置数组的空元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> colors = [ <span class=\"string\">\"red\"</span>, <span class=\"string\">\"blue\"</span>, ]; <span class=\"comment\">// 结尾有个逗号不是语法错误</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> items = [,];</span><br><span class=\"line\"><span class=\"keyword\">var</span> colors = [ <span class=\"string\">\"red\"</span>,, <span class=\"string\">\"blue\"</span> ];</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-caller\"><a href=\"#no-caller\" class=\"headerlink\" title=\"no-caller\"></a>no-caller</h1><p>隐含参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-caller&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>未来版本会去除这个，并且在es5的严格模式中不能用，所以我们禁止<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  foo(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>].map(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">factorial</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> !(n &gt; <span class=\"number\">1</span>) ? <span class=\"number\">1</span> : factorial(n - <span class=\"number\">1</span>) * n;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">arguments</span>.callee(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> !(n &gt; <span class=\"number\">1</span>) ? <span class=\"number\">1</span> : <span class=\"built_in\">arguments</span>.callee(n - <span class=\"number\">1</span>) * n;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-console\"><a href=\"#no-console\" class=\"headerlink\" title=\"no-console\"></a>no-console</h1><p>输出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-console&apos;: &apos;off&apos;</span><br></pre></td></tr></table></figure></p>\n<p>虽然是关闭状态，但是最好做完一个阶段之后去掉输出</p>\n<h1 id=\"no-cond-assign\"><a href=\"#no-cond-assign\" class=\"headerlink\" title=\"no-cond-assign\"></a>no-cond-assign</h1><p>条件定义变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-cond-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要再条件里面定义变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (x === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setHeight</span>(<span class=\"params\">someNode</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    someNode.height = <span class=\"string\">\"100px\"</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">while</span> ((someNode = someNode.parentNode) !== <span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (x = <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setHeight</span>(<span class=\"params\">someNode</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">    someNode.height = <span class=\"string\">\"100px\"</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">while</span> (someNode = someNode.parentNode);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-const-assign\"><a href=\"#no-const-assign\" class=\"headerlink\" title=\"no-const-assign\"></a>no-const-assign</h1><p>常量定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-const-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要给常量再赋值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">a = <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-delete-var\"><a href=\"#no-delete-var\" class=\"headerlink\" title=\"no-delete-var\"></a>no-delete-var</h1><p>删除变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-delete-var&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>delete是用来删除属性的，如果删除变量会有非预期的错误<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">a</span>:<span class=\"number\">1</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> obj.a; <span class=\"comment\">//这时候obj是&#123;&#125;，没有了a属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> x;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-dupe-args\"><a href=\"#no-dupe-args\" class=\"headerlink\" title=\"no-dupe-args\"></a>no-dupe-args</h1><p>重复参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-dupe-args&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要再函数中定义重复的参数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a, b, c</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a, b, c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b, c</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a, b, c);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a, b, a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value of the second a:\"</span>, a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b, a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"value of the second a:\"</span>, a);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-duplicate-case\"><a href=\"#no-duplicate-case\" class=\"headerlink\" title=\"no-duplicate-case\"></a>no-duplicate-case</h1><p>相同的case<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-duplicate-case&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要设置相同的case<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> one:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>,</span><br><span class=\"line\">  one = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> one:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> one:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"2\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>:         <span class=\"comment\">// 重复</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-empty-pattern\"><a href=\"#no-empty-pattern\" class=\"headerlink\" title=\"no-empty-pattern\"></a>no-empty-pattern</h1><p>空匹配<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-empty-pattern&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止空匹配<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;a = &#123;&#125;&#125; = foo; <span class=\"comment\">// 创建变量a</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;a = []&#125; = foo;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;a = &#123;&#125;&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;a = []&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;&#125; = foo;</span><br><span class=\"line\"><span class=\"keyword\">var</span> [] = foo;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;<span class=\"attr\">a</span>: &#123;&#125;&#125; = foo;  <span class=\"comment\">// 不会创建任何变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;<span class=\"attr\">a</span>: []&#125; = foo;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">[]</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;a: &#123;&#125;&#125;</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">&#123;a: []&#125;</span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-eval\"><a href=\"#no-eval\" class=\"headerlink\" title=\"no-eval\"></a>no-eval</h1><p>转化执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-eval&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止使用eval<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">x</span>: <span class=\"string\">\"foo\"</span> &#125;,</span><br><span class=\"line\">  key = <span class=\"string\">\"x\"</span>,</span><br><span class=\"line\">  value = obj[key];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">x</span>: <span class=\"string\">\"foo\"</span> &#125;,</span><br><span class=\"line\">  key = <span class=\"string\">\"x\"</span>,</span><br><span class=\"line\">  value = <span class=\"built_in\">eval</span>(<span class=\"string\">\"obj.\"</span> + key);</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"number\">0</span>, <span class=\"built_in\">eval</span>)(<span class=\"string\">\"var a = 0\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"built_in\">eval</span>;</span><br><span class=\"line\">foo(<span class=\"string\">\"var a = 0\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">this</span>.eval(<span class=\"string\">\"var a = 0\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-ex-assign\"><a href=\"#no-ex-assign\" class=\"headerlink\" title=\"no-ex-assign\"></a>no-ex-assign</h1><p>抛出异常定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-ex-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止冲定义抛出的异常<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// code</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// code</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  e = <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-extend-native\"><a href=\"#no-extend-native\" class=\"headerlink\" title=\"no-extend-native\"></a>no-extend-native</h1><p>原生扩展<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-extend-native&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止原生扩展<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.a = <span class=\"string\">\"a\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(<span class=\"built_in\">Array</span>.prototype, <span class=\"string\">\"times\"</span>, &#123; <span class=\"attr\">value</span>: <span class=\"number\">999</span> &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>因为如果做了原生扩展，所有的用到这个原生的内容都会有问题，比如<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.extra = <span class=\"number\">55</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> users = &#123;</span><br><span class=\"line\">  <span class=\"string\">\"123\"</span>: <span class=\"string\">\"Stan\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"456\"</span>: <span class=\"string\">\"David\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 您并没有做别的</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> id <span class=\"keyword\">in</span> users) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(id); <span class=\"comment\">// console的为：\"123\", \"456\", \"extra\"，因为你在原生Object里增加了一个extra</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-extra-bind\"><a href=\"#no-extra-bind\" class=\"headerlink\" title=\"no-extra-bind\"></a>no-extra-bind</h1><p>绑定<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-extra-bind&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止多余的绑定<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.foo();</span><br><span class=\"line\">&#125;.bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;.bind(foo, bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  foo();</span><br><span class=\"line\">&#125;.bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\">(<span class=\"params\">(</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  foo();</span><br><span class=\"line\">&#125;).bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\">(<span class=\"params\">(</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.foo();</span><br><span class=\"line\">&#125;).bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.foo();</span><br><span class=\"line\">  &#125;());</span><br><span class=\"line\">&#125;.bind(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bar();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;.bind(baz);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-extra-boolean-cast\"><a href=\"#no-extra-boolean-cast\" class=\"headerlink\" title=\"no-extra-boolean-cast\"></a>no-extra-boolean-cast</h1><p>额外的按位计算<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-extra-boolean-cast&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止额外的布尔操作<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = !!bar;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"built_in\">Boolean</span>(bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> !!bar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar ? !!baz : !!bat;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = !!!bar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = !!bar ? baz : bat;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"built_in\">Boolean</span>(!!bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(!!bar);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!!foo) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">Boolean</span>(foo)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (!!foo) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(foo));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (; !!foo; ) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-extra-parens\"><a href=\"#no-extra-parens\" class=\"headerlink\" title=\"no-extra-parens\"></a>no-extra-parens</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-extra-parens&apos;: [2, &apos;functions&apos;]</span><br></pre></td></tr></table></figure>\n<p>禁止额外的插入<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\">(<span class=\"number\">0</span>).toString();</span><br><span class=\"line\">(<span class=\"built_in\">Object</span>.prototype.toString.call());</span><br><span class=\"line\">(&#123;&#125;.toString.call());</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125; ? a() : b());</span><br><span class=\"line\">(<span class=\"regexp\">/^a$/</span>).test(x);</span><br><span class=\"line\">a = (b * c);</span><br><span class=\"line\">(a * b) + c;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> (a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">((<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;))();</span><br><span class=\"line\"><span class=\"keyword\">var</span> y = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>;&#125;);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-fallthrough\"><a href=\"#no-fallthrough\" class=\"headerlink\" title=\"no-fallthrough\"></a>no-fallthrough</h1><p>抛出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-fallthrough&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止switch无抛出<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\">foo</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">      doSomething();</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">      doSomething();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Boo!\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">    <span class=\"comment\">// 其他抛出</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-floating-decimal\"><a href=\"#no-floating-decimal\" class=\"headerlink\" title=\"no-floating-decimal\"></a>no-floating-decimal</h1><p>浮点小数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-floating-decimal&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>虽然有简写的方式，但是请用完整的方式写小数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">0.5</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">2.0</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">-0.7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">.5</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">2.</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">-.7</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-func-assign\"><a href=\"#no-func-assign\" class=\"headerlink\" title=\"no-func-assign\"></a>no-func-assign</h1><p>函数重定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-func-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要给函数重定义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">foo = bar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">foo</span>) </span>&#123; <span class=\"comment\">// `foo` is shadowed.</span></span><br><span class=\"line\">  foo = bar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = bar;  <span class=\"comment\">// `foo` is shadowed.</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">foo = bar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  foo = bar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo = bar;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-implied-eval\"><a href=\"#no-implied-eval\" class=\"headerlink\" title=\"no-implied-eval\"></a>no-implied-eval</h1><p>隐eval<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-implied-eval&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>需要避免所有使用eval的地方<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"Hi!\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"Hi!\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">setTimeout(<span class=\"string\">\"alert('Hi!');\"</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">setInterval(<span class=\"string\">\"alert('Hi!');\"</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">execScript(<span class=\"string\">\"alert('Hi!')\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">window</span>.setTimeout(<span class=\"string\">\"count = 5\"</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"built_in\">window</span>.setInterval(<span class=\"string\">\"foo = bar\"</span>, <span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-inner-declarations\"><a href=\"#no-inner-declarations\" class=\"headerlink\" title=\"no-inner-declarations\"></a>no-inner-declarations</h1><p>内部定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-inner-declarations&apos;: [2, &apos;functions&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>不要使用内部定义，会有异步的隐患<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingElse</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnotherThing</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">  asyncCall(id, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) </span>&#123; &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fn;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">  fn = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnExpression</span>(<span class=\"params\"></span>) </span>&#123; &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingElse</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnotherThing</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-irregular-whitespace\"><a href=\"#no-irregular-whitespace\" class=\"headerlink\" title=\"no-irregular-whitespace\"></a>no-irregular-whitespace</h1><p>不合法的空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-irregular-whitespace&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要用不合法的空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\u000B - Line Tabulation (\\v) - &lt;VT&gt;</span><br><span class=\"line\">\\u000C - Form Feed (\\f) - &lt;FF&gt;</span><br><span class=\"line\">\\u00A0 - No-Break Space - &lt;NBSP&gt;</span><br><span class=\"line\">\\u0085 - Next Line</span><br><span class=\"line\">\\u1680 - Ogham Space Mark</span><br><span class=\"line\">\\u180E - Mongolian Vowel Separator - &lt;MVS&gt;</span><br><span class=\"line\">\\ufeff - Zero Width No-Break Space - &lt;BOM&gt;</span><br><span class=\"line\">\\u2000 - En Quad</span><br><span class=\"line\">\\u2001 - Em Quad</span><br><span class=\"line\">\\u2002 - En Space - &lt;ENSP&gt;</span><br><span class=\"line\">\\u2003 - Em Space - &lt;EMSP&gt;</span><br><span class=\"line\">\\u2004 - Tree-Per-Em</span><br><span class=\"line\">\\u2005 - Four-Per-Em</span><br><span class=\"line\">\\u2006 - Six-Per-Em</span><br><span class=\"line\">\\u2007 - Figure Space</span><br><span class=\"line\">\\u2008 - Punctuation Space - &lt;PUNCSP&gt;</span><br><span class=\"line\">\\u2009 - Thin Space</span><br><span class=\"line\">\\u200A - Hair Space</span><br><span class=\"line\">\\u200B - Zero Width Space - &lt;ZWSP&gt;</span><br><span class=\"line\">\\u2028 - Line Separator</span><br><span class=\"line\">\\u2029 - Paragraph Separator</span><br><span class=\"line\">\\u202F - Narrow No-Break Space</span><br><span class=\"line\">\\u205f - Medium Mathematical Space</span><br><span class=\"line\">\\u3000 - Ideographic Space</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">' &lt;NBSP&gt;thing'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'​&lt;ZWSP&gt;thing'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'th &lt;NBSP&gt;ing'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) /*&lt;<span class=\"title\">NBSP</span>&gt;*/</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"> <span class=\"regexp\">/*&lt;NBSP&gt;*/</span></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span> /*&lt;<span class=\"title\">NBSP</span>&gt;*/(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>᠎/*&lt;<span class=\"title\">MVS</span>&gt;*/(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>; <span class=\"comment\">/*&lt;ENSP&gt;*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'test'</span>; <span class=\"comment\">/*&lt;NBSP&gt;*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Description &lt;NBSP&gt;: some descriptive text</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Description &lt;NBSP&gt;: some descriptive text</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"regexp\">/ &lt;NBSP&gt;regexp/</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*eslint-env es6*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thing</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`template &lt;NBSP&gt;string`</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"no-iterator\"><a href=\"#no-iterator\" class=\"headerlink\" title=\"no-iterator\"></a>no-iterator</h1><p>迭代器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-iterator&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要自定义迭代器的属性，未来会有迭代器<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> __iterator__ = foo; <span class=\"comment\">// Not using the `__iterator__` property.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">Foo.prototype.__iterator__ = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> FooIterator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">foo.__iterator__ = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\">foo[<span class=\"string\">\"__iterator__\"</span>] = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-label-var\"><a href=\"#no-label-var\" class=\"headerlink\" title=\"no-label-var\"></a>no-label-var</h1><p>函数标签<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-label-var&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要把函数标签跟变量冲突<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> q = t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">q:</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(;;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> q;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = foo;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">x:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> x;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-labels\"><a href=\"#no-labels\" class=\"headerlink\" title=\"no-labels\"></a>no-labels</h1><p>标签<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-labels&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;allowLoop&apos;: false,</span><br><span class=\"line\">  &apos;allowSwitch&apos;: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>循环和switch不要设置标签<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = &#123;</span><br><span class=\"line\">  label: <span class=\"string\">\"foo\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误</span></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> label;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">continue</span> label;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (a) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">      <span class=\"keyword\">break</span> label;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> label;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">label:</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span> label;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-lone-blocks\"><a href=\"#no-lone-blocks\" class=\"headerlink\" title=\"no-lone-blocks\"></a>no-lone-blocks</h1><p>空闭包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-lone-blocks&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要使用空闭包<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bar) &#123;</span><br><span class=\"line\">    baz();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  baz();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> x = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> y = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">aLabel: &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo) &#123;</span><br><span class=\"line\">  bar();</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    baz();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    baz();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  aLabel: &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-multi-str\"><a href=\"#no-multi-str\" class=\"headerlink\" title=\"no-multi-str\"></a>no-multi-str</h1><p>换行字符串<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-multi-str&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>换行请用\\n，不要用格式的字符串，很可能除了换行多了很多别的东西<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"string\">\"Line 1\\n\"</span> +</span><br><span class=\"line\">  <span class=\"string\">\"Line 2\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"string\">\"Line 1 \\</span></span><br><span class=\"line\"><span class=\"string\">  Line 2\"</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-multiple-empty-lines\"><a href=\"#no-multiple-empty-lines\" class=\"headerlink\" title=\"no-multiple-empty-lines\"></a>no-multiple-empty-lines</h1><p>空行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-multiple-empty-lines&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;max&apos;: 1</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>禁止空行超过1<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"comment\">// 一行</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"comment\">// 超过了一行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-native-reassign\"><a href=\"#no-native-reassign\" class=\"headerlink\" title=\"no-native-reassign\"></a>no-native-reassign</h1><p>原生定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-native-reassign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不要重定义环境<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"literal\">undefined</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">window</span> = &#123;&#125;;</span><br><span class=\"line\">length = <span class=\"number\">1</span>;</span><br><span class=\"line\">top = <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-negated-in-lhs\"><a href=\"#no-negated-in-lhs\" class=\"headerlink\" title=\"no-negated-in-lhs\"></a>no-negated-in-lhs</h1><p>负运算<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-negated-in-lhs&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>非应该优先级最高，但是低于in表达式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!(key <span class=\"keyword\">in</span> object)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// key不在object对象中</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>((<span class=\"string\">''</span> + !key) <span class=\"keyword\">in</span> object) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 括号的优先级永远最高，但是key需要是字符串，所以需要转化成字符串</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!key <span class=\"keyword\">in</span> object) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这个实际是(key in object)，但是大部分人看来认为是非key在object</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-new-object\"><a href=\"#no-new-object\" class=\"headerlink\" title=\"no-new-object\"></a>no-new-object</h1><p>new定义object<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-new-object&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>使用{}定义object比new Object()写的更方便<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = <span class=\"keyword\">new</span> CustomObject();</span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-new-require\"><a href=\"#no-new-require\" class=\"headerlink\" title=\"no-new-require\"></a>no-new-require</h1><p>new定义require<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-new-require&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止require的module直接new<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AppHeader = <span class=\"built_in\">require</span>(<span class=\"string\">'app-header'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> appHeader = <span class=\"keyword\">new</span> AppHeader();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> appHeader = <span class=\"keyword\">new</span> <span class=\"built_in\">require</span>(<span class=\"string\">'app-header'</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-new-symbol\"><a href=\"#no-new-symbol\" class=\"headerlink\" title=\"no-new-symbol\"></a>no-new-symbol</h1><p>symbol类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-new-symbol&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>symbol是一个function并且不带构造<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"built_in\">Symbol</span>(<span class=\"string\">'foo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">new</span> <span class=\"built_in\">Symbol</span>(<span class=\"string\">'foo'</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-new-wrappers\"><a href=\"#no-new-wrappers\" class=\"headerlink\" title=\"no-new-wrappers\"></a>no-new-wrappers</h1><p>包装对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-new-wrappers&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>不需要构造的类型，都直接用函数方式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> text = <span class=\"built_in\">String</span>(someValue);</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"built_in\">Number</span>(someValue);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> object = <span class=\"keyword\">new</span> MyString();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stringObject = <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"Hello world\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> numberObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">33</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> booleanObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> stringObject = <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> numberObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> booleanObject = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-obj-calls\"><a href=\"#no-obj-calls\" class=\"headerlink\" title=\"no-obj-calls\"></a>no-obj-calls</h1><p>非函数类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-obj-calls&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>全局类不要用函数方式调用<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">area</span>(<span class=\"params\">r</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.PI * r * r;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> object = <span class=\"built_in\">JSON</span>.parse(<span class=\"string\">\"&#123;&#125;\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"built_in\">Reflect</span>.get(&#123; <span class=\"attr\">x</span>: <span class=\"number\">1</span>, <span class=\"attr\">y</span>: <span class=\"number\">2</span> &#125;, <span class=\"string\">\"x\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> math = <span class=\"built_in\">Math</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> json = <span class=\"built_in\">JSON</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> reflect = <span class=\"built_in\">Reflect</span>();</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-octal\"><a href=\"#no-octal\" class=\"headerlink\" title=\"no-octal\"></a>no-octal</h1><p>十进制数的导零<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-octal&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止十进制数用导零<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num  = <span class=\"string\">\"071\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">071</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"number\">5</span> + <span class=\"number\">07</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-octal-escape\"><a href=\"#no-octal-escape\" class=\"headerlink\" title=\"no-octal-escape\"></a>no-octal-escape</h1><p>十进制转义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-octal-escape&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止十进制转义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">\"Copyright \\u00A9\"</span>;   <span class=\"comment\">// unicode码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">\"Copyright \\xA9\"</span>;     <span class=\"comment\">// 十六进制</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">\"Copyright \\251\"</span>; <span class=\"comment\">// 十进制</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-path-concat\"><a href=\"#no-path-concat\" class=\"headerlink\" title=\"no-path-concat\"></a>no-path-concat</h1><p>地址链接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-path-concat&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止直接把地址做链接<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = dirname + <span class=\"string\">\"/foo.js\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = path.join(__dirname, <span class=\"string\">\"foo.js\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = path.resolve(__dirname, <span class=\"string\">\"foo.js\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = __dirname + <span class=\"string\">\"/foo.js\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> fullPath = __filename + <span class=\"string\">\"/foo.js\"</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-proto\"><a href=\"#no-proto\" class=\"headerlink\" title=\"no-proto\"></a>no-proto</h1><p>原型<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-proto&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止直接操作或者定义原型<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">Object</span>.getPrototypeOf(obj);</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.setPrototypeOf(obj, b);</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = &#123; <span class=\"attr\">__proto__</span>: a &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = obj.__proto__;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = obj[<span class=\"string\">\"__proto__\"</span>];</span><br><span class=\"line\">obj.__proto__ = b;</span><br><span class=\"line\">obj[<span class=\"string\">\"__proto__\"</span>] = b;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-redeclare\"><a href=\"#no-redeclare\" class=\"headerlink\" title=\"no-redeclare\"></a>no-redeclare</h1><p>变量重生命<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-redeclare&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止变量重复声明<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-return-assign\"><a href=\"#no-return-assign\" class=\"headerlink\" title=\"no-return-assign\"></a>no-return-assign</h1><p>返回定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-return-assign&apos;: [2, &apos;except-parens&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>禁止在返回时候做定义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo = bar + <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo += <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-self-assign\"><a href=\"#no-self-assign\" class=\"headerlink\" title=\"no-self-assign\"></a>no-self-assign</h1><p>自定义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-self-assign&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止自己给自己定义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo = foo;</span><br><span class=\"line\">[a, b] = [a, b];</span><br><span class=\"line\">[a, ...b] = [x, ...b];</span><br><span class=\"line\">(&#123;a, b&#125; = &#123;a, x&#125;);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-self-compare\"><a href=\"#no-self-compare\" class=\"headerlink\" title=\"no-self-compare\"></a>no-self-compare</h1><p>自比较<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-self-compare&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止自己跟自己比较<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (x === x) &#123;</span><br><span class=\"line\">    x = <span class=\"number\">20</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-sequences\"><a href=\"#no-sequences\" class=\"headerlink\" title=\"no-sequences\"></a>no-sequences</h1><p>序列<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-sequences&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止逗号操作<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo = (doSomething(), val);</span><br><span class=\"line\">(<span class=\"number\">0</span>, <span class=\"built_in\">eval</span>)(<span class=\"string\">\"doSomething();\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;&#125; <span class=\"keyword\">while</span> ((doSomething(), !!test));</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>, j = <span class=\"number\">10</span>; i &lt; j; i++, j--);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ((doSomething(), !!test));</span><br><span class=\"line\"><span class=\"keyword\">switch</span> ((val = foo(), val)) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((val = foo(), val &lt; <span class=\"number\">42</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo = doSomething(), val;</span><br><span class=\"line\"><span class=\"number\">0</span>, <span class=\"built_in\">eval</span>(<span class=\"string\">\"doSomething();\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;&#125; <span class=\"keyword\">while</span> (doSomething(), !!test);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (; doSomething(), !!test; );</span><br><span class=\"line\"><span class=\"keyword\">if</span> (doSomething(), !!test);</span><br><span class=\"line\"><span class=\"keyword\">switch</span> (val = foo(), val) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (val = foo(), val &lt; <span class=\"number\">42</span>);</span><br><span class=\"line\"><span class=\"keyword\">with</span> (doSomething(), val) &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-shadow-restricted-names\"><a href=\"#no-shadow-restricted-names\" class=\"headerlink\" title=\"no-shadow-restricted-names\"></a>no-shadow-restricted-names</h1><p>严格命名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-shadow-restricted-names&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止使用预留字段命名<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">NaN</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">!<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Infinity</span>)</span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"literal\">undefined</span> = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;&#125; <span class=\"keyword\">catch</span>(<span class=\"built_in\">eval</span>)&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-this-before-super\"><a href=\"#no-this-before-super\" class=\"headerlink\" title=\"no-this-before-super\"></a>no-this-before-super</h1><p>this在超类之前<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-this-before-super&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止在超类之前使用this<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.a = <span class=\"number\">0</span>; <span class=\"comment\">// OK, 没有继承也就没有super</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.a = <span class=\"number\">0</span>; <span class=\"comment\">// OK, 成员变量赋值在super之后.</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  foo() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.a = <span class=\"number\">0</span>; <span class=\"comment\">// OK. 使用this的作用域不是构造.</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.a = <span class=\"number\">0</span>; <span class=\"comment\">// super之前赋值成员变量</span></span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.foo(); <span class=\"comment\">// super之前调用方法</span></span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.foo();  <span class=\"comment\">// super之前调用静态方法</span></span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(<span class=\"keyword\">this</span>.foo());  <span class=\"comment\">// 参数传递之前并未super</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-throw-literal\"><a href=\"#no-throw-literal\" class=\"headerlink\" title=\"no-throw-literal\"></a>no-throw-literal</h1><p>抛出异常<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-throw-literal&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>抛出错误需要是Error<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">throw</span> e;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> e;  <span class=\"comment\">//  catch的参数就是Error类</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"string\">\"error\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> err = <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>();</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"string\">\"an \"</span> + err;</span><br><span class=\"line\"><span class=\"comment\">// err is recast to a string literal</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> err = <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>();</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"string\">`<span class=\"subst\">$&#123;err&#125;</span>`</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-undef\"><a href=\"#no-undef\" class=\"headerlink\" title=\"no-undef\"></a>no-undef</h1><p>未定义变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-undef&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止使用未定义变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">b = <span class=\"number\">10</span>; <span class=\"comment\">// 变量b没有定义，严格模式下语法错误</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-undef-init\"><a href=\"#no-undef-init\" class=\"headerlink\" title=\"no-undef-init\"></a>no-undef-init</h1><p>未定义赋值<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-undef-init&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止赋值为undefined<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo;</span><br><span class=\"line\"><span class=\"keyword\">let</span> bar;</span><br><span class=\"line\"><span class=\"keyword\">const</span> baz = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> bar = <span class=\"literal\">undefined</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unexpected-multiline\"><a href=\"#no-unexpected-multiline\" class=\"headerlink\" title=\"no-unexpected-multiline\"></a>no-unexpected-multiline</h1><p>多行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unexpected-multiline&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止不必要的多行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar;</span><br><span class=\"line\">(<span class=\"number\">1</span> || <span class=\"number\">2</span>).baz();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar</span><br><span class=\"line\">;(<span class=\"number\">1</span> || <span class=\"number\">2</span>).baz()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> hello = <span class=\"string\">'world'</span>;</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach(addNumber);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> hello = <span class=\"string\">'world'</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach(addNumber);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"string\">`hello`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> tag = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">tag <span class=\"string\">`hello`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = bar</span><br><span class=\"line\">(<span class=\"number\">1</span> || <span class=\"number\">2</span>).baz();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> hello = <span class=\"string\">'world'</span></span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach(addNumber);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"string\">`hello`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">x</span><br><span class=\"line\"><span class=\"string\">`hello`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = foo</span><br><span class=\"line\">/regex/g.test(bar)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unmodified-loop-condition\"><a href=\"#no-unmodified-loop-condition\" class=\"headerlink\" title=\"no-unmodified-loop-condition\"></a>no-unmodified-loop-condition</h1><p>循环中未修改的条件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unmodified-loop-condition&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止循环中出现未修改的条件<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (node) &#123;</span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">  node = node.parent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; items.length; ++j) &#123;</span><br><span class=\"line\">  doSomething(items[j]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (node !== root) &#123;</span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">  node = node.parent; <span class=\"comment\">// node在循环中改变</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (node ? A : B) &#123;</span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">  node = node.parent; <span class=\"comment\">// 三元表达式在循环中改变</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (obj.foo) &#123;</span><br><span class=\"line\">  doSomething(obj); <span class=\"comment\">// doSomething函数可能修改obj的foo属性</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (check(obj)) &#123; <span class=\"comment\">// check函数可能返回多样的值</span></span><br><span class=\"line\">  doSomething(obj);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (node) &#123;</span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">node = other; <span class=\"comment\">// 条件在循环外改变</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; items.length; ++i) &#123; <span class=\"comment\">// 条件j和items没有在循环中改变</span></span><br><span class=\"line\">  doSomething(items[j]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (node !== root) &#123; <span class=\"comment\">// 条件node和root没有在循环中改变</span></span><br><span class=\"line\">  doSomething(node);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unneeded-ternary\"><a href=\"#no-unneeded-ternary\" class=\"headerlink\" title=\"no-unneeded-ternary\"></a>no-unneeded-ternary</h1><p>不必要的三元表达式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unneeded-ternary&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;defaultAssignment&apos;: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>禁止不必要的三元表达式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x === <span class=\"number\">2</span> ? <span class=\"string\">\"Yes\"</span> : <span class=\"string\">\"No\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x !== <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x ? <span class=\"string\">\"Yes\"</span> : <span class=\"string\">\"No\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x ? y : x;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x ? x : <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x === <span class=\"number\">2</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>; <span class=\"comment\">// 直接写 var a = x === 2 就行了</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = x ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>; <span class=\"comment\">// 直接写 var a = x 就行了</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = f(x ? x : <span class=\"number\">1</span>); <span class=\"comment\">// 直接写 f(x || 1) 就行了</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unreachable\"><a href=\"#no-unreachable\" class=\"headerlink\" title=\"no-unreachable\"></a>no-unreachable</h1><p>未到达<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unreachable&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止未到达部分还有表达式，比如return、throw、break、continue之后的表达式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Oops!\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span>(value) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Oops!\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">baz</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.random() &lt; <span class=\"number\">0.5</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unsafe-finally\"><a href=\"#no-unsafe-finally\" class=\"headerlink\" title=\"no-unsafe-finally\"></a>no-unsafe-finally</h1><p>不安全的finally<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unsafe-finally&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止在finally中使用 return、throw、break 和 continue<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-unused-vars\"><a href=\"#no-unused-vars\" class=\"headerlink\" title=\"no-unused-vars\"></a>no-unused-vars</h1><p>未使用的变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-unused-vars&apos;: [1, &#123;</span><br><span class=\"line\">  &apos;vars&apos;: &apos;local&apos;,</span><br><span class=\"line\">  &apos;args&apos;: &apos;none&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>未使用的变量，我们为了方便调试，因为很多时候我们预先留好参数，修改了级别为警告<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b, c</span>) </span>&#123; <span class=\"comment\">// c没有使用</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;)(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-useless-call\"><a href=\"#no-useless-call\" class=\"headerlink\" title=\"no-useless-call\"></a>no-useless-call</h1><p>不必要的调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-useless-call&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止不必要的call和apply<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo.call(obj, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">foo.apply(obj, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\">obj.foo.call(<span class=\"literal\">null</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">obj.foo.apply(<span class=\"literal\">null</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\">obj.foo.call(otherObj, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">obj.foo.apply(otherObj, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// argument list 是有效的</span></span><br><span class=\"line\">foo.apply(<span class=\"literal\">undefined</span>, args);</span><br><span class=\"line\">foo.apply(<span class=\"literal\">null</span>, args);</span><br><span class=\"line\">obj.foo.apply(obj, args);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"comment\">// 这跟foo(1, 2, 3)一样</span></span><br><span class=\"line\">foo.call(<span class=\"literal\">undefined</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">foo.apply(<span class=\"literal\">undefined</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\">foo.call(<span class=\"literal\">null</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">foo.apply(<span class=\"literal\">null</span>, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 这跟foo(1, 2, 3)一样</span></span><br><span class=\"line\">obj.foo.call(obj, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">obj.foo.apply(obj, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-useless-computed-key\"><a href=\"#no-useless-computed-key\" class=\"headerlink\" title=\"no-useless-computed-key\"></a>no-useless-computed-key</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-useless-computed-key&apos;: 2</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;<span class=\"string\">\"a\"</span>: <span class=\"string\">\"b\"</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;[<span class=\"string\">\"a\"</span>]: <span class=\"string\">\"b\"</span>&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"no-useless-constructor\"><a href=\"#no-useless-constructor\" class=\"headerlink\" title=\"no-useless-constructor\"></a>no-useless-constructor</h1><p>无用的构造<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-useless-constructor&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>禁止无用的构造<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> () &#123; <span class=\"comment\">// 构造没任何用</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> (...args) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(...args); <span class=\"comment\">// 不写这个也会有这个构造</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-useless-escape\"><a href=\"#no-useless-escape\" class=\"headerlink\" title=\"no-useless-escape\"></a>no-useless-escape</h1><p>不必要的转义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-useless-escape&apos;: 0</span><br></pre></td></tr></table></figure></p>\n<p>禁止不必要的转义<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"string\">\"\\\"\"</span>;</span><br><span class=\"line\"><span class=\"string\">'\\''</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\x12\"</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\u00a9\"</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\371\"</span>;</span><br><span class=\"line\"><span class=\"string\">\"xs\\u2111\"</span>;</span><br><span class=\"line\"><span class=\"string\">`\\``</span>;</span><br><span class=\"line\"><span class=\"string\">`\\$&#123;<span class=\"subst\">$&#123;foo&#125;</span>&#125;`</span>;</span><br><span class=\"line\"><span class=\"string\">`$\\&#123;<span class=\"subst\">$&#123;foo&#125;</span>&#125;`</span>;</span><br><span class=\"line\">/\\\\/g;</span><br><span class=\"line\">/\\t/g;</span><br><span class=\"line\">/\\w\\$\\*\\^\\./;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"string\">\"\\'\"</span>;</span><br><span class=\"line\"><span class=\"string\">'\\\"'</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\#\"</span>;</span><br><span class=\"line\"><span class=\"string\">\"\\e\"</span>;</span><br><span class=\"line\"><span class=\"string\">`\\\"`</span>;</span><br><span class=\"line\"><span class=\"string\">`\\\"<span class=\"subst\">$&#123;foo&#125;</span>\\\"`</span>;</span><br><span class=\"line\"><span class=\"string\">`\\#&#123;foo&#125;`</span>;</span><br><span class=\"line\">/\\!<span class=\"regexp\">/;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span>\\@/;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-whitespace-before-property\"><a href=\"#no-whitespace-before-property\" class=\"headerlink\" title=\"no-whitespace-before-property\"></a>no-whitespace-before-property</h1><p>属性前的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-whitespace-before-property&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>属性前不要有空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo.bar</span><br><span class=\"line\">foo[bar]</span><br><span class=\"line\">foo[ bar ]</span><br><span class=\"line\">foo.bar.baz</span><br><span class=\"line\">foo</span><br><span class=\"line\">  .bar().baz()</span><br><span class=\"line\">foo</span><br><span class=\"line\">  .bar()</span><br><span class=\"line\">  .baz()</span><br><span class=\"line\">foo.</span><br><span class=\"line\">  bar().</span><br><span class=\"line\">  baz()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo [bar]</span><br><span class=\"line\">foo. bar</span><br><span class=\"line\">foo .bar</span><br><span class=\"line\">foo. bar. baz</span><br><span class=\"line\">foo. bar()</span><br><span class=\"line\">  .baz()</span><br><span class=\"line\">foo</span><br><span class=\"line\">  .bar(). baz()</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-with\"><a href=\"#no-with\" class=\"headerlink\" title=\"no-with\"></a>no-with</h1><p>不使用with<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-with&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>with有潜在的风险，现在已经有很多方式可以代替with了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> r = <span class=\"function\">(<span class=\"params\">&#123;x, y&#125;</span>) =&gt;</span> <span class=\"built_in\">Math</span>.sqrt(x * x + y * y);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> (point) &#123;</span><br><span class=\"line\">  r = <span class=\"built_in\">Math</span>.sqrt(x * x + y * y); <span class=\"comment\">// r是否point的属性呢？</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"one-var\"><a href=\"#one-var\" class=\"headerlink\" title=\"one-var\"></a>one-var</h1><p>单变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;one-var&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;initialized&apos;: &apos;never&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>为了浏览方便，可以一次定义多个变量，但是不要一次给多个变量赋值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> bar = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a, b, c; <span class=\"comment\">// Uninitialized variables are ignored</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"literal\">true</span>,</span><br><span class=\"line\">    bar = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"operator-linebreak\"><a href=\"#operator-linebreak\" class=\"headerlink\" title=\"operator-linebreak\"></a>operator-linebreak</h1><p>操作符<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;operator-linebreak&apos;: [2, &apos;after&apos;, &#123;</span><br><span class=\"line\">  &apos;overrides&apos;: &#123;</span><br><span class=\"line\">    &apos;?&apos;: &apos;before&apos;,</span><br><span class=\"line\">    &apos;:&apos;: &apos;before&apos;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>操作符紧跟之后，三元表达式在之前<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo = <span class=\"number\">1</span> + <span class=\"number\">2</span>;</span><br><span class=\"line\">foo = <span class=\"number\">1</span> +</span><br><span class=\"line\">  <span class=\"number\">2</span>;</span><br><span class=\"line\">foo =</span><br><span class=\"line\">  <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (someCondition ||</span><br><span class=\"line\">  otherCondition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">answer = everything ?</span><br><span class=\"line\">  <span class=\"number\">42</span> :</span><br><span class=\"line\">  foo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo = <span class=\"number\">1</span></span><br><span class=\"line\">+</span><br><span class=\"line\"><span class=\"number\">2</span>;</span><br><span class=\"line\">foo = <span class=\"number\">1</span></span><br><span class=\"line\">  + <span class=\"number\">2</span>;</span><br><span class=\"line\">foo</span><br><span class=\"line\">  = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (someCondition</span><br><span class=\"line\">  || otherCondition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">answer = everything</span><br><span class=\"line\">  ? <span class=\"number\">42</span></span><br><span class=\"line\">  : foo;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"quotes\"><a href=\"#quotes\" class=\"headerlink\" title=\"quotes\"></a>quotes</h1><p>引号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;quotes&apos;: [2, &apos;single&apos;, &#123;</span><br><span class=\"line\">  &apos;avoidEscape&apos;: true,</span><br><span class=\"line\">  &apos;allowTemplateLiterals&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>为了统一，请字符串用单引号，但是为了防止转义是可以用双引号的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> single = <span class=\"string\">'single'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> backtick = <span class=\"string\">`back<span class=\"subst\">$&#123;x&#125;</span>tick`</span>; <span class=\"comment\">// 允许模板</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> unescaped = <span class=\"string\">\"a string containing 'single' quotes\"</span>; <span class=\"comment\">// 为了避免转义单引号，可以用双引号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> double = <span class=\"string\">\"double\"</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"semi\"><a href=\"#semi\" class=\"headerlink\" title=\"semi\"></a>semi</h1><p>分号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;semi&apos;: [2, &apos;always&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>必须加分号<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> website = <span class=\"string\">\"eslint.org\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">\"ESLint\"</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"semi-spacing\"><a href=\"#semi-spacing\" class=\"headerlink\" title=\"semi-spacing\"></a>semi-spacing</h1><p>分号空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;semi-spacing&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;before&apos;: false,</span><br><span class=\"line\">  &apos;after&apos;: true</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>左边不能有空白，右边必须有空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"keyword\">var</span> bar;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">while</span> (a) &#123; <span class=\"keyword\">break</span>; &#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (;;) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;;&#125;</span><br><span class=\"line\">;foo();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo ;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo;<span class=\"keyword\">var</span> bar;</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>) ;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (a) &#123; <span class=\"keyword\">break</span> ; &#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span> ; i &lt; <span class=\"number\">10</span> ; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">10</span>;i++) &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"space-in-parens\"><a href=\"#space-in-parens\" class=\"headerlink\" title=\"space-in-parens\"></a>space-in-parens</h1><p>参数空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-in-parens&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>函数的参数括号两边不留空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">foo();</span><br><span class=\"line\">foo(<span class=\"string\">'bar'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = (<span class=\"number\">1</span> + <span class=\"number\">2</span>) * <span class=\"number\">3</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">'bar'</span>; &#125;());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">foo( <span class=\"string\">'bar'</span>);</span><br><span class=\"line\">foo(<span class=\"string\">'bar'</span> );</span><br><span class=\"line\">foo( <span class=\"string\">'bar'</span> );</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = ( <span class=\"number\">1</span> + <span class=\"number\">2</span> ) * <span class=\"number\">3</span>;</span><br><span class=\"line\">( <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">'bar'</span>; &#125;() );</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"space-infix-ops\"><a href=\"#space-infix-ops\" class=\"headerlink\" title=\"space-infix-ops\"></a>space-infix-ops</h1><p>操作符空白<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-infix-ops&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>操作符两边留空白<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\">a + b</span><br><span class=\"line\">a       + b</span><br><span class=\"line\">a ? b : c</span><br><span class=\"line\"><span class=\"keyword\">const</span> a = &#123;<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;a = <span class=\"number\">0</span>&#125; = bar;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a = <span class=\"number\">0</span></span>) </span>&#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\">a+b</span><br><span class=\"line\">a+ b</span><br><span class=\"line\">a +b</span><br><span class=\"line\">a?b:c</span><br><span class=\"line\"><span class=\"keyword\">const</span> a=&#123;<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;a=<span class=\"number\">0</span>&#125;=bar;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a=<span class=\"number\">0</span></span>) </span>&#123; &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"space-unary-ops\"><a href=\"#space-unary-ops\" class=\"headerlink\" title=\"space-unary-ops\"></a>space-unary-ops</h1><p>单元操作符空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;space-unary-ops&apos;: [2, &#123;</span><br><span class=\"line\">  &apos;words&apos;: true,</span><br><span class=\"line\">  &apos;nonwords&apos;: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> foo.bar; <span class=\"comment\">// 文字操作符需要有空格</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Foo; <span class=\"comment\">// 文字操作符需要有空格</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"number\">0</span>; <span class=\"comment\">// 文字操作符需要有空格</span></span><br><span class=\"line\">++foo; <span class=\"comment\">// 非文字操作符不能有空格</span></span><br><span class=\"line\">foo--; <span class=\"comment\">// 非文字操作符不能有空格</span></span><br><span class=\"line\">-foo; <span class=\"comment\">// 非文字操作符不能有空格</span></span><br><span class=\"line\">+<span class=\"string\">\"3\"</span>; <span class=\"comment\">// 非文字操作符不能有空格</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span>!foo;</span><br><span class=\"line\"><span class=\"keyword\">void</span>&#123;<span class=\"attr\">foo</span>:<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">new</span>[foo][<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">delete</span>(foo.bar);</span><br><span class=\"line\">++ foo;</span><br><span class=\"line\">foo --;</span><br><span class=\"line\">- foo;</span><br><span class=\"line\">+ <span class=\"string\">\"3\"</span>;</span><br></pre></td></tr></table></figure>\n<h1 id=\"spaced-comment\"><a href=\"#spaced-comment\" class=\"headerlink\" title=\"spaced-comment\"></a>spaced-comment</h1><p>注释的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;spaced-comment&apos;: [2, &apos;always&apos;, &#123;</span><br><span class=\"line\">  &apos;markers&apos;: [&apos;global&apos;, &apos;globals&apos;, &apos;eslint&apos;, &apos;eslint-disable&apos;, &apos;*package&apos;, &apos;!&apos;, &apos;,&apos;]</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>注释需要加个空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"comment\">// This is a comment with a whitespace at the beginning</span></span><br><span class=\"line\"><span class=\"comment\">/* This is a comment with a whitespace at the beginning */</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * This is a comment with a whitespace at the beginning</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">This comment has a newline</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"comment\">//This is a comment with no whitespace at the beginning</span></span><br><span class=\"line\"><span class=\"comment\">/*This is a comment with no whitespace at the beginning */</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"template-curly-spacing\"><a href=\"#template-curly-spacing\" class=\"headerlink\" title=\"template-curly-spacing\"></a>template-curly-spacing</h1><p>模板中的变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;template-curly-spacing&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>模板中的变量不要加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123;people.name&#125;</span>!`</span>;</span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">  people.name</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">&#125;</span>!`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123; people.name&#125;</span>!`</span>;</span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123;people.name &#125;</span>!`</span>;</span><br><span class=\"line\"><span class=\"string\">`hello, <span class=\"subst\">$&#123; people.name &#125;</span>!`</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"use-isnan\"><a href=\"#use-isnan\" class=\"headerlink\" title=\"use-isnan\"></a>use-isnan</h1><p>非数字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;use-isnan&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>判断非数字，请使用isNaN函数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(foo)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">isNaN</span>(foo)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo == <span class=\"literal\">NaN</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (foo != <span class=\"literal\">NaN</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"valid-typeof\"><a href=\"#valid-typeof\" class=\"headerlink\" title=\"valid-typeof\"></a>valid-typeof</h1><p>正确的类型<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;valid-typeof&apos;: 2</span><br></pre></td></tr></table></figure></p>\n<p>请使用正确的类型<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo === <span class=\"string\">\"string\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> bar == <span class=\"string\">\"undefined\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo === baz</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> bar === <span class=\"keyword\">typeof</span> qux</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo === <span class=\"string\">\"strnig\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> foo == <span class=\"string\">\"undefimed\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> bar != <span class=\"string\">\"nunber\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> bar !== <span class=\"string\">\"fucntion\"</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"wrap-iife\"><a href=\"#wrap-iife\" class=\"headerlink\" title=\"wrap-iife\"></a>wrap-iife</h1><p>闭包调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;wrap-iife&apos;: [2, &apos;any&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>直接调用函数需要括号括起来<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123; <span class=\"attr\">y</span>: <span class=\"number\">1</span> &#125;;&#125;());</span><br><span class=\"line\"><span class=\"keyword\">var</span> x = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123; <span class=\"attr\">y</span>: <span class=\"number\">1</span> &#125;;&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123; <span class=\"attr\">y</span>: <span class=\"number\">1</span> &#125;;&#125;();</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"yoda\"><a href=\"#yoda\" class=\"headerlink\" title=\"yoda\"></a>yoda</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;yoda&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure>\n<p>条件里，变量在左，对比的值在右<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">5</span> &amp; value) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (value === <span class=\"string\">\"red\"</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">\"red\"</span> === color) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == flag) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">5</span> &gt; count) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">-1</span> &lt; str.indexOf(substr)) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">0</span> &lt;= x &amp;&amp; x &lt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"prefer-const\"><a href=\"#prefer-const\" class=\"headerlink\" title=\"prefer-const\"></a>prefer-const</h1><p>常量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;prefer-const&apos;: 1</span><br></pre></td></tr></table></figure></p>\n<p>没有被重定义的变量请用const，但是开发过程中经常有暂时没有重定义的变量，所以修改了警告级别<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a;</span><br><span class=\"line\">a = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) &#123; <span class=\"comment\">// 遍历时候i不会被重定义</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> a <span class=\"keyword\">of</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) &#123; <span class=\"comment\">// 遍历时候i不会被重定义</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"no-debugger\"><a href=\"#no-debugger\" class=\"headerlink\" title=\"no-debugger\"></a>no-debugger</h1><p>调试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;no-debugger&apos;: process.env.NODE_ENV === &apos;production&apos; ? 2 : 0</span><br></pre></td></tr></table></figure></p>\n<p>在正式环境中不能有调试，开发环境关闭<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isTruthy</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">debugger</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Boolean</span>(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"object-curly-spacing\"><a href=\"#object-curly-spacing\" class=\"headerlink\" title=\"object-curly-spacing\"></a>object-curly-spacing</h1><p>对象空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;object-curly-spacing&apos;: [2, &apos;always&apos;, &#123;</span><br><span class=\"line\">  objectsInObjects: false</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>定义对象的大括号内两边加空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"string\">'foo'</span>: &#123; <span class=\"string\">'bar'</span>: <span class=\"string\">'baz'</span> &#125;, <span class=\"string\">'qux'</span>: <span class=\"string\">'quxx'</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123; x &#125; = y;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; foo &#125; <span class=\"keyword\">from</span> <span class=\"string\">'bar'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">baz</span>: &#123;<span class=\"string\">'foo'</span>: <span class=\"string\">'qux'</span>&#125;, bar&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"attr\">baz</span>: &#123; <span class=\"string\">'foo'</span>: <span class=\"string\">'qux'</span> &#125;, bar&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"string\">'foo'</span>: <span class=\"string\">'bar'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"string\">'foo'</span>:<span class=\"string\">'bar'</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> &#123;x&#125; = y;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;foo &#125; <span class=\"keyword\">from</span> <span class=\"string\">'bar'</span>;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"array-bracket-spacing\"><a href=\"#array-bracket-spacing\" class=\"headerlink\" title=\"array-bracket-spacing\"></a>array-bracket-spacing</h1><p>数组空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;array-bracket-spacing&apos;: [2, &apos;never&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>定义数字的中括号内，无空格<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [</span><br><span class=\"line\">  <span class=\"string\">'foo'</span>,</span><br><span class=\"line\">  <span class=\"string\">'bar'</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//错误</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [ <span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span> ];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span> ];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [ [<span class=\"string\">'foo'</span>], <span class=\"string\">'bar'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [[ <span class=\"string\">'foo'</span> ], <span class=\"string\">'bar'</span>];</span><br></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck01v9ugv00013si291947359","tag_id":"ck01v9ugy00033si2to7t2rp2","_id":"ck01v9uh200063si2g4od919u"},{"post_id":"ck01v9ugx00023si2vp6bqhfr","tag_id":"ck01v9uh100053si2alaxqof9","_id":"ck01v9uh200073si2k692dut0"},{"post_id":"ck01v9ui1000b3si2cx06xrgu","tag_id":"ck01v9ui2000c3si2c7osjq19","_id":"ck01v9ui2000d3si2hgqff9ez"}],"Tag":[{"name":"markdown","_id":"ck01v9ugy00033si2to7t2rp2"},{"name":"nrm","_id":"ck01v9uh100053si2alaxqof9"},{"name":"eslint","_id":"ck01v9ui2000c3si2c7osjq19"}]}}